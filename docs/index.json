[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/cDefine.js",
    "content": "// Modified by xiazeyu.\n\n/**\n* @desc The definitions of values releated to model react\n*/\n\nexport const cDefine = {\n  // above are viewMatrix value settings\n  VIEW_LOGICAL_LEFT : -1, // -1, the left abscissa of viewMatrix\n  VIEW_LOGICAL_RIGHT : 1, // 1, the right abscissa of viewMatrix\n  VIEW_LOGICAL_MAX_LEFT : -2, // -2, the max left abscissa of viewMatrix\n  VIEW_LOGICAL_MAX_RIGHT : 2, // 2, the max right abscissa of viewMatrix\n  VIEW_LOGICAL_MAX_BOTTOM : -2, // -2, the max bottom abscissa of viewMatrix\n  VIEW_LOGICAL_MAX_TOP : 2, // 2, the max top abscissa of viewMatrix\n\n  // above are the motions priority settings.\n  PRIORITY_NONE : 0, // 0，do nothing\n  PRIORITY_IDLE : 1, // 1, idle motions\n  PRIORITY_NORMAL : 2, // 2, normal motions\n  PRIORITY_FORCE : 3, // 3, force to show motion\n\n  // above are the index to the motions in model.json\n  // #43\n  MOTION_GROUP_IDLE : \"idle\",\n  MOTION_GROUP_TAP_BODY : \"tap_body\",\n  MOTION_GROUP_FLICK_HEAD : \"flick_head\", // unused\n  MOTION_GROUP_PINCH_IN : \"pinch_in\", // unused\n  MOTION_GROUP_PINCH_OUT : \"pinch_out\", // unused\n  MOTION_GROUP_SHAKE : \"shake\", // unused\n\n  // above are the index to the hit areas in model.json\n  // #43\n  HIT_AREA_HEAD : \"head\",\n  HIT_AREA_BODY : \"body\"\n};\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/cDefine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "cDefine",
    "memberof": "src/cDefine.js",
    "static": true,
    "longname": "src/cDefine.js~cDefine",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/cDefine.js",
    "importStyle": "{cDefine}",
    "description": "The definitions of values releated to model react",
    "lineNumber": 7,
    "type": {
      "types": [
        "{\"VIEW_LOGICAL_LEFT\": *, \"VIEW_LOGICAL_RIGHT\": number, \"VIEW_LOGICAL_MAX_LEFT\": *, \"VIEW_LOGICAL_MAX_RIGHT\": number, \"VIEW_LOGICAL_MAX_BOTTOM\": *, \"VIEW_LOGICAL_MAX_TOP\": number, \"PRIORITY_NONE\": *, \"PRIORITY_IDLE\": number, \"PRIORITY_NORMAL\": number, \"PRIORITY_FORCE\": number, \"MOTION_GROUP_IDLE\": string, \"MOTION_GROUP_TAP_BODY\": string, \"MOTION_GROUP_FLICK_HEAD\": string, \"MOTION_GROUP_PINCH_IN\": string, \"MOTION_GROUP_PINCH_OUT\": string, \"MOTION_GROUP_SHAKE\": string, \"HIT_AREA_HEAD\": string, \"HIT_AREA_BODY\": string}"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/cLive2DApp.js",
    "content": "/**\n * @description The main part of live2d-widget\n */\n\n\nimport { config } from './config/configMgr';\nimport { createElement, currWebGL, currCanvas } from './elementMgr';\nimport { UtSystem,\n         UtDebug,\n         LDTransform,\n         LDGL,\n         Live2D,\n         Live2DModelWebGL,\n         Live2DModelJS,\n         Live2DMotion,\n         MotionQueueManager,\n         PhysicsHair,\n         AMotion,\n         PartsDataID,\n         DrawDataID,\n         BaseDataID,\n         ParamID } from './lib/live2d.core';\nimport { L2DTargetPoint, L2DViewMatrix, L2DMatrix44 } from \"./lib/Live2DFramework\";\nimport { cManager } from \"./cManager\";\nimport { MatrixStack } from \"./utils/MatrixStack\";\nimport { cDefine } from \"./cDefine\";\n\nlet live2DMgr = new cManager();\nlet captureFrameCB = undefined;\nlet isDrawStart = false;\nlet dragMgr = null;\nlet viewMatrix = null;\nlet projMatrix = null;\nlet deviceToScreen = null;\nlet drag = false;\nlet lastMouseX = 0;\nlet lastMouseY = 0;\nlet headPos = 0.5;\nlet opacityDefault = 0.7;\nlet opacityHover = 1;\n\n\n\n/**\n * Main function of live2d-widget\n * @return {null}\n */\n\nfunction theRealInit (){\n\n  createElement();\n  initEvent();\n\n  dragMgr = new L2DTargetPoint();\n  let ratio = currCanvas.height / currCanvas.width;\n  let left = cDefine.VIEW_LOGICAL_LEFT;\n  let right = cDefine.VIEW_LOGICAL_RIGHT;\n  let bottom = -ratio;\n  let top = ratio;\n\n  viewMatrix = new L2DViewMatrix();\n\n  viewMatrix.setScreenRect(left, right, bottom, top);\n\n  viewMatrix.setMaxScreenRect(cDefine.VIEW_LOGICAL_MAX_LEFT,\n    cDefine.VIEW_LOGICAL_MAX_RIGHT,\n    cDefine.VIEW_LOGICAL_MAX_BOTTOM,\n    cDefine.VIEW_LOGICAL_MAX_TOP);\n\n  projMatrix = new L2DMatrix44();\n  projMatrix.multScale(1, (currCanvas.width / currCanvas.height));\n\n  deviceToScreen = new L2DMatrix44();\n  deviceToScreen.multTranslate(-currCanvas.width / 2.0, -currCanvas.height / 2.0);  // #32\n  deviceToScreen.multScale(2 / currCanvas.width, -2 / currCanvas.height);  // #32\n\n\n  Live2D.setGL(currWebGL);\n  currWebGL.clearColor(0.0, 0.0, 0.0, 0.0);\n  changeModel(config.model.jsonPath);\n  startDraw();\n\n\n}\n\n/**\n * Capture current frame to png file\n * @param  {Function} callback The callback function which will receive the current frame\n * @return {null}\n * @example\n * You can use codes below to let the user download the current frame\n *\n * L2Dwidget.captureFrame(\n *   function(e){\n *     let link = document.createElement('a');\n *     document.body.appendChild(link);\n *     link.setAttribute('type', 'hidden');\n *     link.href = e;\n *     link.download = 'live2d.png';\n *     link.click();\n *   }\n * );\n *\n * @description Thanks to @journey-ad https://github.com/journey-ad/live2d_src/commit/97356a19f93d2abd83966f032a53b5ca1109fbc3\n */\n\nfunction captureFrame(callback){\n  captureFrameCB = callback;\n}\n\nfunction initEvent(){\n  if (currCanvas.addEventListener) {\n    window.addEventListener(\"click\", mouseEvent);\n    window.addEventListener(\"mousedown\", mouseEvent);\n    window.addEventListener(\"mousemove\", mouseEvent);\n    window.addEventListener(\"mouseup\", mouseEvent);\n    document.addEventListener(\"mouseleave\", mouseEvent);\n    window.addEventListener(\"touchstart\", touchEvent);\n    window.addEventListener(\"touchend\", touchEvent);\n    window.addEventListener(\"touchmove\", touchEvent);\n  }\n}\n\nfunction startDraw() {\n  if (!isDrawStart) {\n    isDrawStart = true;\n    (function tick() {\n      draw();\n      let requestAnimationFrame =\n        window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.msRequestAnimationFrame;\n\n      requestAnimationFrame(tick, currCanvas);\n      if(captureFrameCB !== undefined){\n        captureFrameCB(currCanvas.toDataURL());\n        captureFrameCB = undefined;\n      }\n    })();\n  }\n}\n\nfunction draw()\n{\n    MatrixStack.reset();\n    MatrixStack.loadIdentity();\n    dragMgr.update();\n    live2DMgr.setDrag(dragMgr.getX(), dragMgr.getY());\n\n    currWebGL.clear(currWebGL.COLOR_BUFFER_BIT);\n\n    MatrixStack.multMatrix(projMatrix.getArray());\n    MatrixStack.multMatrix(viewMatrix.getArray());\n    MatrixStack.push();\n\n    for (let i = 0; i < live2DMgr.numModels(); i++)\n    {\n        let model = live2DMgr.getModel(i);\n\n        if(model == null) return;\n\n        if (model.initialized && !model.updating)\n        {\n            model.update();\n            model.draw(currWebGL);\n        }\n    }\n    MatrixStack.pop();\n}\n\nfunction changeModel(modelurl) // 更换模型\n{\n    live2DMgr.reloadFlg = true;\n    live2DMgr.count++; // 现在仍有多模型支持，稍后可以精简\n    live2DMgr.changeModel(currWebGL, modelurl);\n}\n\nfunction modelScaling(scale) {\n  viewMatrix.adjustScale(0, 0, scale);\n}\n/*\nfunction transformRange(center, transform, range)\n{\n    let a = {\n        x: transform.x - center.x,\n        y: transform.y - center.y\n    }\n    let r = Math.sqrt(Math.pow(a.x,2) + Math.pow(a.y,2));\n    if (r > range) {\n        a = {\n            x: a.x / r * range + center.x,\n            y: a.y / r * range + center.y\n        };\n        return a;\n    } else {\n        return transform;\n    }\n}\n*/\nfunction dot(A,B)\n{\n    return A.x * B.x + A.y * B.y;\n}\n\nfunction normalize(x,y)\n{\n    let length = Math.sqrt(x * x + y * y)\n    return {\n        x: x / length,\n        y: y / length\n    }\n}\n\nfunction transformRect(center, transform, rect)\n{\n    if (transform.x < rect.left + rect.width && transform.y < rect.top + rect.height &&\n        transform.x > rect.left && transform.y > rect.top) return transform;\n    let Len_X = center.x - transform.x;\n    let Len_Y = center.y - transform.y;\n\n    function angle(Len_X, Len_Y)\n    {\n        return Math.acos(dot({\n            x: 0,\n            y: 1\n        }, normalize(Len_X, Len_Y))) * 180 / Math.PI\n    }\n\n    let angleTarget = angle(Len_X, Len_Y);\n    if (transform.x < center.x) angleTarget = 360 - angleTarget;\n    let angleLeftTop = 360 - angle(rect.left - center.x, (rect.top - center.y) * -1);\n    let angleLeftBottom = 360 - angle(rect.left - center.x, (rect.top + rect.height - center.y) * -1);\n    let angleRightTop = angle(rect.left + rect.width - center.x, (rect.top - center.y) * -1);\n    let angleRightBottom = angle(rect.left + rect.width - center.x, (rect.top + rect.height - center.y) * -1);\n    let scale = Len_Y / Len_X;\n    let res = {};\n\n    if (angleTarget < angleRightTop) {\n        let y3 = rect.top - center.y;\n        let x3 = y3 / scale;\n        res = {\n            y: center.y + y3,\n            x: center.x + x3\n        }\n    } else if(angleTarget < angleRightBottom) {\n        let x3 = rect.left + rect.width - center.x;\n        let y3 = x3 * scale;\n        res = {\n            y: center.y + y3,\n            x: center.x + x3\n        }\n    } else if (angleTarget < angleLeftBottom) {\n        let y3 = rect.top + rect.height - center.y;\n        let x3 = y3 / scale;\n        res = {\n            y: center.y + y3,\n            x: center.x + x3\n        }\n    } else if (angleTarget < angleLeftTop) {\n        let x3 = center.x - rect.left;\n        let y3 = x3 * scale;\n        res = {\n            y: center.y - y3,\n            x: center.x - x3\n        }\n    } else {\n        let y3 = rect.top - center.y;\n        let x3 = y3 / scale;\n        res = {\n            y: center.y + y3,\n            x: center.x + x3\n        }\n    }\n\n    return res;\n}\n\nfunction modelTurnHead(event)\n{\n    drag = true;\n\n    let rect = currCanvas.getBoundingClientRect();\n\n    let sx = transformScreenX(event.clientX - rect.left);\n    let sy = transformScreenY(event.clientY - rect.top);\n    let target = transformRect({\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height * headPos\n    }, {\n        x: event.clientX,\n        y: event.clientY\n    }, rect)\n    let vx = transformViewX(target.x - rect.left);\n    let vy = transformViewY(target.y - rect.top);\n\n    if (cDefine.DEBUG_MOUSE_LOG)\n        console.log(\"modelTurnHead onMouseMove device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\n\n    lastMouseX = sx;\n    lastMouseY = sy;\n\n    dragMgr.setPoint(vx, vy);\n}\n\nfunction modelTapEvent(event)\n{\n    drag = true;\n\n    let rect = currCanvas.getBoundingClientRect();\n\n    let sx = transformScreenX(event.clientX - rect.left);\n    let sy = transformScreenY(event.clientY - rect.top);\n    let target = transformRect({\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height * headPos\n    }, {\n        x: event.clientX,\n        y: event.clientY\n    }, rect)\n    let vx = transformViewX(target.x - rect.left);\n    let vy = transformViewY(target.y - rect.top);\n\n    if (cDefine.DEBUG_MOUSE_LOG)\n        console.log(\"modelTapEvent onMouseDown device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\n\n    lastMouseX = sx;\n    lastMouseY = sy;\n\n    live2DMgr.tapEvent(vx, vy);\n}\n\nfunction followPointer(event)\n{\n    let rect = currCanvas.getBoundingClientRect();\n\n    let sx = transformScreenX(event.clientX - rect.left);\n    let sy = transformScreenY(event.clientY - rect.top);\n\n    // log but seems ok\n    // console.log(\"ecx=\" + event.clientX + \" ecy=\" + event.clientY + \" sx=\" + sx + \" sy=\" + sy);\n\n    let target = transformRect({// seems ok here\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height * headPos\n    }, {\n        x: event.clientX,\n        y: event.clientY\n    }, rect)\n    let vx = transformViewX(target.x - rect.left);\n    let vy = transformViewY(target.y - rect.top);\n\n    if (cDefine.DEBUG_MOUSE_LOG)\n        console.log(\"followPointer onMouseMove device( x:\" + event.clientX + \" y:\" + event.clientY + \" ) view( x:\" + vx + \" y:\" + vy + \")\");\n\n    if (drag)\n    {\n        lastMouseX = sx;\n        lastMouseY = sy;\n        dragMgr.setPoint(vx, vy);\n    }\n}\n\nfunction lookFront()\n{\n    if (drag) {\n        drag = false;\n    }\n    dragMgr.setPoint(0, 0);\n}\n\nfunction mouseEvent(e)\n{\n    //e.preventDefault();\n    if (e.type == \"mousedown\") {\n        modelTapEvent(e);\n    } else if (e.type == \"mousemove\") {\n        modelTurnHead(e);\n    } else if (e.type == \"mouseup\") {\n        if(\"button\" in e && e.button != 0) return;\n        // lookFront();\n    } else if (e.type == \"mouseleave\") {\n        lookFront();\n    }\n}\n\nfunction touchEvent(e)\n{\n    var touch = e.touches[0];\n    if (e.type == \"touchstart\") {\n        if (e.touches.length == 1) modelTapEvent(touch);\n        // onClick(touch);\n    } else if (e.type == \"touchmove\") {\n        followPointer(touch);\n    } else if (e.type == \"touchend\") {\n        lookFront();\n    }\n}\n\nfunction transformViewX(deviceX)\n{\n    var screenX = deviceToScreen.transformX(deviceX);\n    return viewMatrix.invertTransformX(screenX);\n}\n\n\nfunction transformViewY(deviceY)\n{\n    var screenY = deviceToScreen.transformY(deviceY);\n    return viewMatrix.invertTransformY(screenY);\n}\n\n\nfunction transformScreenX(deviceX)\n{\n    return deviceToScreen.transformX(deviceX);\n}\n\n\nfunction transformScreenY(deviceY)\n{\n    return deviceToScreen.transformY(deviceY);\n}\n\nexport{\n  theRealInit,\n  captureFrame,\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/cLive2DApp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "live2DMgr",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~live2DMgr",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "captureFrameCB",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~captureFrameCB",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "isDrawStart",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~isDrawStart",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "dragMgr",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~dragMgr",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "viewMatrix",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~viewMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "projMatrix",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~projMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "deviceToScreen",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~deviceToScreen",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "drag",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~drag",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "lastMouseX",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~lastMouseX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "lastMouseY",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~lastMouseY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "headPos",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~headPos",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "opacityDefault",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~opacityDefault",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "opacityHover",
    "memberof": "src/cLive2DApp.js",
    "static": true,
    "longname": "src/cLive2DApp.js~opacityHover",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "initEvent",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~initEvent",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "startDraw",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~startDraw",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "draw",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~draw",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "changeModel",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~changeModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "params": [
      {
        "name": "modelurl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "modelScaling",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~modelScaling",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "params": [
      {
        "name": "scale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "dot",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~dot",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "params": [
      {
        "name": "A",
        "types": [
          "*"
        ]
      },
      {
        "name": "B",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "normalize",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~normalize",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"x\": *, \"y\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "transformRect",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~transformRect",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "params": [
      {
        "name": "center",
        "types": [
          "*"
        ]
      },
      {
        "name": "transform",
        "types": [
          "*"
        ]
      },
      {
        "name": "rect",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "modelTurnHead",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~modelTurnHead",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 279,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "modelTapEvent",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~modelTapEvent",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "followPointer",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~followPointer",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 333,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "lookFront",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~lookFront",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 364,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "mouseEvent",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~mouseEvent",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 372,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "function",
    "name": "touchEvent",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~touchEvent",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 387,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "transformViewX",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~transformViewX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 400,
    "undocument": true,
    "params": [
      {
        "name": "deviceX",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "transformViewY",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~transformViewY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 407,
    "undocument": true,
    "params": [
      {
        "name": "deviceY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "transformScreenX",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~transformScreenX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "params": [
      {
        "name": "deviceX",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "transformScreenY",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~transformScreenY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 420,
    "undocument": true,
    "params": [
      {
        "name": "deviceY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "theRealInit",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~theRealInit",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": "{theRealInit}",
    "description": "Main function of live2d-widget",
    "lineNumber": 49,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "captureFrame",
    "memberof": "src/cLive2DApp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cLive2DApp.js~captureFrame",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/cLive2DApp.js",
    "importStyle": "{captureFrame}",
    "description": "Capture current frame to png file",
    "examples": [
      "You can use codes below to let the user download the current frame\n\nL2Dwidget.captureFrame(\n  function(e){\n    let link = document.createElement('a');\n    document.body.appendChild(link);\n    link.setAttribute('type', 'hidden');\n    link.href = e;\n    link.download = 'live2d.png';\n    link.click();\n  }\n);"
    ],
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Thanks to @journey-ad https://github.com/journey-ad/live2d_src/commit/97356a19f93d2abd83966f032a53b5ca1109fbc3"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback function which will receive the current frame"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/cManager.js",
    "content": "import { Live2DFramework } from \"./lib/Live2DFramework\";\nimport { PlatformManager } from \"./PlatformManager\";\nimport { cModel } from \"./cModel\";\nimport { cDefine } from \"./cDefine\";\n\nfunction cManager() {\n  // console.log(\"--> cManager()\");\n\n  this.models = [];\n  this.count = -1;\n  this.reloadFlg = false;\n\n  Live2DFramework.setPlatformManager(new PlatformManager());\n\n}\n\ncManager.prototype.createModel = function () {\n\n  var model = new cModel();\n  this.models.push(model);\n\n  return model;\n\n}\n\n\ncManager.prototype.changeModel = function (gl, modelurl) {\n  // console.log(\"--> cManager.update(gl)\");\n\n  if (this.reloadFlg) {\n    this.reloadFlg = false;\n    this.releaseModel(0, gl);\n    this.createModel();\n    this.models[0].load(gl, modelurl);\n  }\n\n};\n\n\ncManager.prototype.getModel = function (no) {\n  // console.log(\"--> cManager.getModel(\" + no + \")\");\n\n  if (no >= this.models.length) return null;\n\n  return this.models[no];\n};\n\n\n\ncManager.prototype.releaseModel = function (no, gl) {\n  // console.log(\"--> cManager.releaseModel(\" + no + \")\");\n\n  if (this.models.length <= no) return;\n\n  this.models[no].release(gl);\n\n  delete this.models[no];\n  this.models.splice(no, 1);\n};\n\n\n\ncManager.prototype.numModels = function () {\n  return this.models.length;\n};\n\n\n\ncManager.prototype.setDrag = function (x, y) {\n  for (var i = 0; i < this.models.length; i++) {\n    this.models[i].setDrag(x, y);\n  }\n}\n\ncManager.prototype.tapEvent = function (x, y) {\n  if (cDefine.DEBUG_LOG)\n    console.log(\"tapEvent view x:\" + x + \" y:\" + y);\n\n  for (var i = 0; i < this.models.length; i++) {\n\n    if (this.models[i].hitTest(cDefine.HIT_AREA_HEAD, x, y)) {\n\n      if (cDefine.DEBUG_LOG)\n        console.log(\"Tap face.\");\n\n      this.models[i].setRandomExpression();\n    }\n    else if (this.models[i].hitTest(cDefine.HIT_AREA_BODY, x, y)) {\n\n      if (cDefine.DEBUG_LOG)\n        console.log(\"Tap body.\" + \" models[\" + i + \"]\");\n\n      this.models[i].startRandomMotion(cDefine.MOTION_GROUP_TAP_BODY,\n        cDefine.PRIORITY_NORMAL);\n    }\n  }\n\n  return true;\n};\n\nexport{\n  cManager,\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/cManager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "createModel",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~createModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "changeModel",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~changeModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "gl",
        "types": [
          "*"
        ]
      },
      {
        "name": "modelurl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "getModel",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~getModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "no",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "releaseModel",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~releaseModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "no",
        "types": [
          "*"
        ]
      },
      {
        "name": "gl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "numModels",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~numModels",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "setDrag",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~setDrag",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "tapEvent",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~tapEvent",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "cManager",
    "memberof": "src/cManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cManager.js~cManager",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/cManager.js",
    "importStyle": "{cManager}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "src/cModel.js",
    "content": "import { Live2DFramework, L2DBaseModel, L2DEyeBlink } from \"./lib/Live2DFramework\";\nimport { ModelSettingJson } from \"./utils/ModelSettingJson\";\nimport { MatrixStack } from \"./utils/MatrixStack\";\nimport { cDefine } from \"./cDefine\";\nimport { UtSystem,/*\n         UtDebug,\n         LDTransform,\n         LDGL,\n         Live2D,\n         Live2DModelWebGL,\n         Live2DModelJS,\n         Live2DMotion,\n         MotionQueueManager,\n         PhysicsHair,\n         AMotion,\n         PartsDataID,\n         DrawDataID,\n         BaseDataID,\n         ParamID*/ } from './lib/live2d.core';\n//============================================================\n//============================================================\n//  class cModel     extends L2DBaseModel\n//============================================================\n//============================================================\nexport function cModel()\n{\n    //L2DBaseModel.apply(this, arguments);\n    L2DBaseModel.prototype.constructor.call(this);\n\n    this.modelHomeDir = \"\";\n    this.modelSetting = null;\n    this.tmpMatrix = [];\n}\n\ncModel.prototype = new L2DBaseModel();\n\n\ncModel.prototype.load = function(gl, modelSettingPath, callback)\n{\n    this.setUpdating(true);\n    this.setInitialized(false);\n\n    this.modelHomeDir = modelSettingPath.substring(0, modelSettingPath.lastIndexOf(\"/\") + 1);\n\n    this.modelSetting = new ModelSettingJson();\n\n    var thisRef = this;\n\n    this.modelSetting.loadModelSetting(modelSettingPath, function(){\n\n        var path = thisRef.modelHomeDir + thisRef.modelSetting.getModelFile();\n        thisRef.loadModelData(path, function(model){\n\n            for (var i = 0; i < thisRef.modelSetting.getTextureNum(); i++)\n            {\n                if( /^https?:\\/\\/|^\\/\\//i.test(thisRef.modelSetting.getTextureFile(i)) ){\n\n                    var texPaths = thisRef.modelSetting.getTextureFile(i);\n\n                }else{\n                var texPaths = thisRef.modelHomeDir + thisRef.modelSetting.getTextureFile(i);\n                }\n                thisRef.loadTexture(i, texPaths, function() {\n\n                    if( thisRef.isTexLoaded ) {\n\n                        if (thisRef.modelSetting.getExpressionNum() > 0)\n                        {\n\n                            thisRef.expressions = {};\n\n                            for (var j = 0; j < thisRef.modelSetting.getExpressionNum(); j++)\n                            {\n                                var expName = thisRef.modelSetting.getExpressionName(j);\n                                var expFilePath = thisRef.modelHomeDir +\n                                    thisRef.modelSetting.getExpressionFile(j);\n\n                                thisRef.loadExpression(expName, expFilePath);\n                            }\n                        }\n                        else\n                        {\n                            thisRef.expressionManager = null;\n                            thisRef.expressions = {};\n                        }\n\n\n\n                        if (thisRef.eyeBlink == null)\n                        {\n                            thisRef.eyeBlink = new L2DEyeBlink();\n                        }\n\n\n                        if (thisRef.modelSetting.getPhysicsFile() != null)\n                        {\n                            thisRef.loadPhysics(thisRef.modelHomeDir +\n                                                thisRef.modelSetting.getPhysicsFile());\n                        }\n                        else\n                        {\n                            thisRef.physics = null;\n                        }\n\n\n\n                        if (thisRef.modelSetting.getPoseFile() != null)\n                        {\n                            thisRef.loadPose(\n                                thisRef.modelHomeDir +\n                                thisRef.modelSetting.getPoseFile(),\n                                function() {\n                                    thisRef.pose.updateParam(thisRef.live2DModel);\n                                }\n                            );\n                        }\n                        else\n                        {\n                            thisRef.pose = null;\n                        }\n\n\n\n                        if (thisRef.modelSetting.getLayout() != null)\n                        {\n                            var layout = thisRef.modelSetting.getLayout();\n                            if (layout[\"width\"] != null)\n                                thisRef.modelMatrix.setWidth(layout[\"width\"]);\n                            if (layout[\"height\"] != null)\n                                thisRef.modelMatrix.setHeight(layout[\"height\"]);\n\n                            if (layout[\"x\"] != null)\n                                thisRef.modelMatrix.setX(layout[\"x\"]);\n                            if (layout[\"y\"] != null)\n                                thisRef.modelMatrix.setY(layout[\"y\"]);\n                            if (layout[\"center_x\"] != null)\n                                thisRef.modelMatrix.centerX(layout[\"center_x\"]);\n                            if (layout[\"center_y\"] != null)\n                                thisRef.modelMatrix.centerY(layout[\"center_y\"]);\n                            if (layout[\"top\"] != null)\n                                thisRef.modelMatrix.top(layout[\"top\"]);\n                            if (layout[\"bottom\"] != null)\n                                thisRef.modelMatrix.bottom(layout[\"bottom\"]);\n                            if (layout[\"left\"] != null)\n                                thisRef.modelMatrix.left(layout[\"left\"]);\n                            if (layout[\"right\"] != null)\n                                thisRef.modelMatrix.right(layout[\"right\"]);\n                        }\n\n                        for (var j = 0; j < thisRef.modelSetting.getInitParamNum(); j++)\n                        {\n\n                            thisRef.live2DModel.setParamFloat(\n                                thisRef.modelSetting.getInitParamID(j),\n                                thisRef.modelSetting.getInitParamValue(j)\n                            );\n                        }\n\n                        for (var j = 0; j < thisRef.modelSetting.getInitPartsVisibleNum(); j++)\n                        {\n\n                            thisRef.live2DModel.setPartsOpacity(\n                                thisRef.modelSetting.getInitPartsVisibleID(j),\n                                thisRef.modelSetting.getInitPartsVisibleValue(j)\n                            );\n                        }\n\n\n\n                        thisRef.live2DModel.saveParam();\n                        // thisRef.live2DModel.setGL(gl);\n\n\n                        thisRef.preloadMotionGroup(cDefine.MOTION_GROUP_IDLE);\n                        thisRef.mainMotionManager.stopAllMotions();\n\n                        thisRef.setUpdating(false);\n                        thisRef.setInitialized(true);\n\n                        if (typeof callback == \"function\") callback();\n\n                    }\n                });\n            }\n        });\n    });\n};\n\n\n\ncModel.prototype.release = function(gl)\n{\n    // this.live2DModel.deleteTextures();\n    var pm = Live2DFramework.getPlatformManager();\n\n    gl.deleteTexture(pm.texture);\n}\n\n\n\ncModel.prototype.preloadMotionGroup = function(name)\n{\n    var thisRef = this;\n\n    for (var i = 0; i < this.modelSetting.getMotionNum(name); i++)\n    {\n        var file = this.modelSetting.getMotionFile(name, i);\n        this.loadMotion(file, this.modelHomeDir + file, function(motion) {\n            motion.setFadeIn(thisRef.modelSetting.getMotionFadeIn(name, i));\n            motion.setFadeOut(thisRef.modelSetting.getMotionFadeOut(name, i));\n        });\n\n    }\n}\n\n\ncModel.prototype.update = function()\n{\n    // console.log(\"--> cModel.update()\");\n\n    if(this.live2DModel == null)\n    {\n        if (cDefine.DEBUG_LOG) console.error(\"Failed to update.\");\n\n        return;\n    }\n\n    var timeMSec = UtSystem.getUserTimeMSec() - this.startTimeMSec;\n    var timeSec = timeMSec / 1000.0;\n    var t = timeSec * 2 * Math.PI;\n\n\n    if (this.mainMotionManager.isFinished())\n    {\n\n        this.startRandomMotion(cDefine.MOTION_GROUP_IDLE, cDefine.PRIORITY_IDLE);\n    }\n\n    //-----------------------------------------------------------------\n\n\n    this.live2DModel.loadParam();\n\n\n\n    var update = this.mainMotionManager.updateParam(this.live2DModel);\n    if (!update) {\n\n        if(this.eyeBlink != null) {\n            this.eyeBlink.updateParam(this.live2DModel);\n        }\n    }\n\n\n    this.live2DModel.saveParam();\n\n    //-----------------------------------------------------------------\n\n\n    if (this.expressionManager != null &&\n        this.expressions != null &&\n        !this.expressionManager.isFinished())\n    {\n        this.expressionManager.updateParam(this.live2DModel);\n    }\n\n\n\n    this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\", this.dragX * 30, 1);\n    this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\", this.dragY * 30, 1);\n    this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\", (this.dragX * this.dragY) * -30, 1);\n\n\n\n    this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\", this.dragX*10, 1);\n\n\n\n    this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_X\", this.dragX, 1);\n    this.live2DModel.addToParamFloat(\"PARAM_EYE_BALL_Y\", this.dragY, 1);\n\n\n\n    this.live2DModel.addToParamFloat(\"PARAM_ANGLE_X\",\n                                     Number((15 * Math.sin(t / 6.5345))), 0.5);\n    this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Y\",\n                                     Number((8 * Math.sin(t / 3.5345))), 0.5);\n    this.live2DModel.addToParamFloat(\"PARAM_ANGLE_Z\",\n                                     Number((10 * Math.sin(t / 5.5345))), 0.5);\n    this.live2DModel.addToParamFloat(\"PARAM_BODY_ANGLE_X\",\n                                     Number((4 * Math.sin(t / 15.5345))), 0.5);\n    this.live2DModel.setParamFloat(\"PARAM_BREATH\",\n                                   Number((0.5 + 0.5 * Math.sin(t / 3.2345))), 1);\n\n\n    if (this.physics != null)\n    {\n        this.physics.updateParam(this.live2DModel);\n    }\n\n\n    if (this.lipSync == null)\n    {\n        this.live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\",\n                                       this.lipSyncValue);\n    }\n\n\n    if( this.pose != null ) {\n        this.pose.updateParam(this.live2DModel);\n    }\n\n    this.live2DModel.update();\n};\n\n\n\ncModel.prototype.setRandomExpression = function()\n{\n    var tmp = [];\n    for (var name in this.expressions)\n    {\n        tmp.push(name);\n    }\n\n    var no = parseInt(Math.random() * tmp.length);\n\n    this.setExpression(tmp[no]);\n}\n\n\n\ncModel.prototype.startRandomMotion = function(name, priority)\n{\n    var max = this.modelSetting.getMotionNum(name);\n    var no = parseInt(Math.random() * max);\n    this.startMotion(name, no, priority);\n}\n\n\n\ncModel.prototype.startMotion = function(name, no, priority)\n{\n    // console.log(\"startMotion : \" + name + \" \" + no + \" \" + priority);\n\n    var motionName = this.modelSetting.getMotionFile(name, no);\n\n    if (motionName == null || motionName == \"\")\n    {\n        if (cDefine.DEBUG_LOG)\n            console.error(\"Failed to motion.\");\n        return;\n    }\n\n    if (priority == cDefine.PRIORITY_FORCE)\n    {\n        this.mainMotionManager.setReservePriority(priority);\n    }\n    else if (!this.mainMotionManager.reserveMotion(priority))\n    {\n        if (cDefine.DEBUG_LOG)\n            console.log(\"Motion is running.\")\n        return;\n    }\n\n    var thisRef = this;\n    var motion;\n\n    if (this.motions[name] == null)\n    {\n        this.loadMotion(null, this.modelHomeDir + motionName, function(mtn) {\n            motion = mtn;\n\n\n            thisRef.setFadeInFadeOut(name, no, priority, motion);\n\n        });\n    }\n    else\n    {\n        motion = this.motions[name];\n\n\n        thisRef.setFadeInFadeOut(name, no, priority, motion);\n    }\n}\n\n\ncModel.prototype.setFadeInFadeOut = function(name, no, priority, motion)\n{\n    var motionName = this.modelSetting.getMotionFile(name, no);\n\n    motion.setFadeIn(this.modelSetting.getMotionFadeIn(name, no));\n    motion.setFadeOut(this.modelSetting.getMotionFadeOut(name, no));\n\n\n    if (cDefine.DEBUG_LOG)\n            console.log(\"Start motion : \" + motionName);\n\n    if (this.modelSetting.getMotionSound(name, no) == null)\n    {\n        this.mainMotionManager.startMotionPrio(motion, priority);\n    }\n    else\n    {\n        var soundName = this.modelSetting.getMotionSound(name, no);\n        // var player = new Sound(this.modelHomeDir + soundName);\n\n        var snd = document.createElement(\"audio\");\n        snd.src = this.modelHomeDir + soundName;\n\n        if (cDefine.DEBUG_LOG)\n            console.log(\"Start sound : \" + soundName);\n\n        snd.play();\n        this.mainMotionManager.startMotionPrio(motion, priority);\n    }\n}\n\n\n\ncModel.prototype.setExpression = function(name)\n{\n    var motion = this.expressions[name];\n\n    if (cDefine.DEBUG_LOG)\n        console.log(\"Expression : \" + name);\n\n    this.expressionManager.startMotion(motion, false);\n}\n\n\n\ncModel.prototype.draw = function(gl)\n{\n    //console.log(\"--> cModel.draw()\");\n\n    // if(this.live2DModel == null) return;\n\n\n    MatrixStack.push();\n\n    MatrixStack.multMatrix(this.modelMatrix.getArray());\n\n    this.tmpMatrix = MatrixStack.getMatrix()\n    this.live2DModel.setMatrix(this.tmpMatrix);\n    this.live2DModel.draw();\n\n    MatrixStack.pop();\n\n};\n\n\n\ncModel.prototype.hitTest = function(id, testX, testY)\n{\n    var len = this.modelSetting.getHitAreaNum();\n    for (var i = 0; i < len; i++)\n    {\n        if (id == this.modelSetting.getHitAreaName(i))\n        {\n            var drawID = this.modelSetting.getHitAreaID(i);\n\n            return this.hitTestSimple(drawID, testX, testY);\n        }\n    }\n\n    return false;\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/cModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "cModel",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~cModel",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": "{cModel}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "load",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~load",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "gl",
        "types": [
          "*"
        ]
      },
      {
        "name": "modelSettingPath",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "release",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~release",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "params": [
      {
        "name": "gl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "preloadMotionGroup",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~preloadMotionGroup",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "update",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~update",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "setRandomExpression",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~setRandomExpression",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 318,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "startRandomMotion",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~startRandomMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 333,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "priority",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "startMotion",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~startMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 342,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "no",
        "types": [
          "*"
        ]
      },
      {
        "name": "priority",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "setFadeInFadeOut",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~setFadeInFadeOut",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 389,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "no",
        "types": [
          "*"
        ]
      },
      {
        "name": "priority",
        "types": [
          "*"
        ]
      },
      {
        "name": "motion",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "setExpression",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~setExpression",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 422,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "draw",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~draw",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 434,
    "undocument": true,
    "params": [
      {
        "name": "gl",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "hitTest",
    "memberof": "src/cModel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cModel.js~hitTest",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/cModel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 455,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "testX",
        "types": [
          "*"
        ]
      },
      {
        "name": "testY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/config/configMgr.js",
    "content": "// Created by xiazeyu.\n\n/**\n * @description The manager of configeration.\n */\n\n\n'use strict';\n\nimport _ from 'lodash';\nimport defaultConfig from './defaultConfig';\n\n/**\n * The container of current configs\n * @type {Object}\n */\n\nlet currConfig = {};\n\n/**\n * Apply users function, make the full settings\n * @param  {Object} [userConfig] User's custom config\n * @return {null}\n */\n\nfunction configApplyer(userConfig){\n\n  currConfig = _.defaultsDeep(userConfig, defaultConfig);\n  // console.log('Live2Dwidget: currConfig', currConfig);\n\n}\n\nexport {\n  configApplyer,\n  currConfig as config,\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/config/configMgr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "currConfig",
    "memberof": "src/config/configMgr.js",
    "static": true,
    "longname": "src/config/configMgr.js~currConfig",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/config/configMgr.js",
    "importStyle": null,
    "description": "The container of current configs",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "configApplyer",
    "memberof": "src/config/configMgr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/config/configMgr.js~configApplyer",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/config/configMgr.js",
    "importStyle": "{configApplyer}",
    "description": "Apply users function, make the full settings",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "userConfig",
        "description": "User's custom config"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/config/defaultConfig.js",
    "content": "/**\n * @description The storage of configs. Intend to unify serverJs and clientJs's config\n */\n\n/**\n * Default settings for defaulter\n * @type {Object}\n */\n\nconst defaultConfig = {\n  model: {\n    jsonPath: 'https://unpkg.com/live2d-widget-model-shizuku@latest/assets/shizuku.model.json',\n    scale: 1,\n    hHeadPos: 0.5,\n    vHeadPos: 0.618,\n    myDefine: [],\n  },\n  display: {\n    superSample: 2,\n    width: 150,\n    height: 300,\n    position: 'right',\n    hOffset: 0,\n    vOffset: -20,\n  },\n  mobile: {\n    show: true,\n    scale: 0.5,\n    motion: true,\n  },\n  name: {\n    canvas: 'live2dcanvas',\n    div: 'live2d-widget',\n  },\n  react: {\n    opacityDefault: 0.7,\n    opacityOnHover: 0.2,\n    myFunc: (e) => {console.log('(undefined) ┑(￣Д ￣)┍');},\n  },\n  dev: {\n    log: false,\n    border: (process.env.NODE_ENV === 'development' ? true : false),\n    mouseLog: false,\n    mouseFunc: (x, y, ix, iy) => {console.log(`MouseFunc: ${x},${y}; ${ix}, ${iy}`);},\n  },\n}\n\nmodule.exports = defaultConfig;\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/config/defaultConfig.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "defaultConfig",
    "memberof": "src/config/defaultConfig.js",
    "static": true,
    "longname": "src/config/defaultConfig.js~defaultConfig",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/config/defaultConfig.js",
    "importStyle": null,
    "description": "Default settings for defaulter",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/elementMgr.js",
    "content": "/**\n * @description The container and manager for all the DOM and WebGL emelents.\n */\n\n\nimport { config } from './config/configMgr';\nimport htmlTemplate from './tmplate/innerHTML';\n\n/**\n * The current WebGL element\n * @type {RenderingContext}\n */\n\nlet currWebGL = undefined;\n\n/**\n * The current canvas element\n * @type {HTMLElement}\n */\n\nlet currCanvas;\n\n/**\n * Create the canvas and styles using DOM\n * @return {null}\n */\n\nfunction createElement(){\n\n  let e = document.getElementById(config.name.div)\n  if (e !== null){\n    document.body.removeChild(e);\n  }\n\n  let newElem = document.createElement('div');\n  newElem.id = config.name.div;\n  newElem.innerHTML = htmlTemplate;\n    let newCanvasElem = document.createElement('canvas');\n    newCanvasElem.setAttribute('id', config.name.canvas);\n    newCanvasElem.setAttribute('width', config.display.width * config.display.superSample);\n    newCanvasElem.setAttribute('height', config.display.height * config.display.superSample);\n    newCanvasElem.style.setProperty('position', 'fixed');\n    newCanvasElem.style.setProperty('width', config.display.width);\n    newCanvasElem.style.setProperty('height', config.display.height);\n    newCanvasElem.style.setProperty('opacity', config.react.opacityDefault);\n    newCanvasElem.style.setProperty(config.display.position, config.display.hOffset + 'px');\n    newCanvasElem.style.setProperty('bottom', config.display.vOffset + 'px');\n    newCanvasElem.style.setProperty('z-index', 99999);\n    newCanvasElem.style.setProperty('pointer-events', 'none');\n    if(config.dev.border) newCanvasElem.style.setProperty('border', 'dashed 1px #CCC');\n    newElem.appendChild(newCanvasElem);\n\n  document.body.appendChild(newElem);\n  currCanvas = document.getElementById(config.name.canvas);\n\n  initWebGL();\n\n}\n\n/**\n * Find and set the current WebGL element to the container\n * @return {null}\n */\n\nfunction initWebGL(){\n\n  var NAMES = ['webgl2', 'webgl', 'experimental-webgl2', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];\n  for(let i = 0; i < NAMES.length; i++){\n    try{\n      let ctx = currCanvas.getContext(NAMES[i], {\n        alpha: true,\n        antialias: true,\n        premultipliedAlpha: true,\n        failIfMajorPerformanceCaveat: false,\n      });\n      if(ctx) currWebGL = ctx;\n    }catch(e){}\n  }\n  if(!currWebGL){\n    console.error('Live2D widgets: Failed to create WebGL context.');\n    if(!window.WebGLRenderingContext){\n      console.error('Your browser may not support WebGL, check https://get.webgl.org/ for futher information.');\n    }\n    return;\n  }\n};\n\n\nexport{\n  createElement,\n  currWebGL,\n  currCanvas,\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/elementMgr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "initWebGL",
    "memberof": "src/elementMgr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/elementMgr.js~initWebGL",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/elementMgr.js",
    "importStyle": null,
    "description": "Find and set the current WebGL element to the container",
    "lineNumber": 65,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "createElement",
    "memberof": "src/elementMgr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/elementMgr.js~createElement",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/elementMgr.js",
    "importStyle": "{createElement}",
    "description": "Create the canvas and styles using DOM",
    "lineNumber": 28,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "currWebGL",
    "memberof": "src/elementMgr.js",
    "static": true,
    "longname": "src/elementMgr.js~currWebGL",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/elementMgr.js",
    "importStyle": "{currWebGL}",
    "description": "The current WebGL element",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "RenderingContext"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "src/index.js",
    "content": "// Created by xiazeyu.\n\n////////////////////////////////////\n// Celebrate for the 3.0 version! //\n////////////////////////////////////\n\n/**\n * @description The entry point of live2d-widget.\n */\n\n\n'use strict';\n\nimport device from 'current-device';\nimport { config, configApplyer }from './config/configMgr';\n\nif (process.env.NODE_ENV === 'development'){\n  console.log('--- --- --- --- ---\\nLive2Dwidget: Hey that, notice that you are now in DEV MODE.\\n--- --- --- --- ---');\n}\n\nlet coreApp;\n/**\n * The main entry point, which is ... nothing\n */\n\nclass L2Dwidget{\n\n/**\n * The init function\n * @param {Object}   [userConfig] User's custom config 用户自定义设置\n * @param {String}   [userConfig.model.jsonPath = ''] Path to Live2D model's main json eg. `https://test.com/miku.model.json` model主文件路径\n * @param {Number}   [userConfig.model.scale = 1] Scale between the model and the canvas 模型与canvas的缩放\n * @param {Number}   [userConfig.model.hHeadPos = 0.5] Horizontal position of model's head 模型头部横坐标\n * @param {Number}   [userConfig.model.vHeadPos = 0.618] Vertical position of model's head 模型头部纵坐标\n * @param {Array}    [userConfig.model.myDefine = []] User's custom Defines which will override LDefine 自定义的LDefine\n * @param {Number}   [userConfig.display.superSample = 2] rate for super sampling rate 超采样等级\n * @param {Number}   [userConfig.display.width = 150] Width to the canvas which shows the model canvas的长度\n * @param {Number}   [userConfig.display.height = 300] Height to the canvas which shows the model canvas的高度\n * @param {String}   [userConfig.display.position = 'right'] Left of right side to show 显示位置：左或右\n * @param {Number}   [userConfig.display.hOffset = 0] Horizontal offset of the canvas canvas水平偏移\n * @param {Number}   [userConfig.display.vOffset = -20] Vertical offset of the canvas canvas垂直偏移\n * @param {Boolean}  [userConfig.mobile.show = true] Whether to show on mobile device 是否在移动设备上显示\n * @param {Number}   [userConfig.mobile.scale = 0.5] Scale on mobile device 移动设备上的缩放\n * @param {Boolean}  [userConfig.mobile.motion = true] Whether to enable motion detection on mobile devices 移动设备是否开启重力感应\n * @param {String}   [userConfig.name.canvas = 'live2dcanvas'] ID name of the canvas canvas元素的ID\n * @param {String}   [userConfig.name.div = 'live2d-widget'] ID name of the div div元素的ID\n * @param {Number}   [userConfig.react.opacityDefault = 0.7] Default opacity 默认透明度\n * @param {Number}   [userConfig.react.opacityOnHover = 0.2] OnHover opacity 鼠标移上透明度\n * @param {Function} [userConfig.react.myFunc = func(e)] Custom event handler, won't override main handler, will reveice the event type. 自定义事件接收器\n * @param {Boolean}  [userConfig.dev.log = false] Whether to show log 显示日志\n * @param {Boolean}  [userConfig.dev.border = false] Whether to show border around the canvas 在canvas周围显示边界\n * @param {Boolean}  [userConfig.dev.mouseLog = false] Whether to show mouse log (tons of log), only work when dev.log is enabled 显示鼠标移动\n * @param {Function} [userConfig.dev.mouseFunc = func(x, y, ix, iy)] Custom logger, only work when dev.log is enabled, will receive (x, y, ix, iy), which presents the actucally position and vitural position 自定义鼠标移动处理函数\n * @return {null}\n */\n\n  init(userConfig = {}){\n    configApplyer(userConfig);\n    if((!config.mobile.show)&&(device.mobile())){\n      return;\n    }\n    import(/* webpackMode: 'lazy' */ './cLive2DApp').then(f => {\n      coreApp = f;\n      coreApp.theRealInit();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n\n/**\n * Capture current frame to png file {@link captureFrame}\n * @param  {Function} callback The callback function which will receive the current frame\n * @return {null}\n */\n\n  captureFrame(callback){\n    return coreApp.captureFrame(callback);\n  }\n\n/**\n * download current frame {@link L2Dwidget.captureFrame}\n * @return {null}\n */\n\n  downloadFrame(){\n    this.captureFrame(\n      function(e){\n        let link = document.createElement('a');\n        document.body.appendChild(link);\n        link.setAttribute('type', 'hidden');\n        link.href = e;\n        link.download = 'live2d.png';\n        link.click();\n      }\n    );\n  }\n\n};\n\nlet _ = new L2Dwidget();\n\n\nexport {\n  _ as L2Dwidget,\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "_",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~_",
    "access": "private",
    "export": false,
    "importPath": "live2d-widget/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "type": {
      "types": [
        "src/index.js~L2Dwidget"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "class",
    "name": "L2Dwidget",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~L2Dwidget",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/index.js",
    "importStyle": "{L2Dwidget}",
    "description": "The main entry point, which is ... nothing",
    "lineNumber": 26,
    "interface": false
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "init",
    "memberof": "src/index.js~L2Dwidget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~L2Dwidget#init",
    "access": "public",
    "description": "The init function",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "userConfig",
        "description": "User's custom config 用户自定义设置"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " ''",
        "defaultRaw": " ''",
        "name": "userConfig.model.jsonPath",
        "description": "Path to Live2D model's main json eg. `https://test.com/miku.model.json` model主文件路径"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1",
        "defaultRaw": 1,
        "name": "userConfig.model.scale",
        "description": "Scale between the model and the canvas 模型与canvas的缩放"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0.5",
        "defaultRaw": 0.5,
        "name": "userConfig.model.hHeadPos",
        "description": "Horizontal position of model's head 模型头部横坐标"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0.618",
        "defaultRaw": 0.618,
        "name": "userConfig.model.vHeadPos",
        "description": "Vertical position of model's head 模型头部纵坐标"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " []",
        "defaultRaw": [],
        "name": "userConfig.model.myDefine",
        "description": "User's custom Defines which will override LDefine 自定义的LDefine"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 2",
        "defaultRaw": 2,
        "name": "userConfig.display.superSample",
        "description": "rate for super sampling rate 超采样等级"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 150",
        "defaultRaw": 150,
        "name": "userConfig.display.width",
        "description": "Width to the canvas which shows the model canvas的长度"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 300",
        "defaultRaw": 300,
        "name": "userConfig.display.height",
        "description": "Height to the canvas which shows the model canvas的高度"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'right'",
        "defaultRaw": " 'right'",
        "name": "userConfig.display.position",
        "description": "Left of right side to show 显示位置：左或右"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0",
        "defaultRaw": 0,
        "name": "userConfig.display.hOffset",
        "description": "Horizontal offset of the canvas canvas水平偏移"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " -20",
        "defaultRaw": -20,
        "name": "userConfig.display.vOffset",
        "description": "Vertical offset of the canvas canvas垂直偏移"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "userConfig.mobile.show",
        "description": "Whether to show on mobile device 是否在移动设备上显示"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0.5",
        "defaultRaw": 0.5,
        "name": "userConfig.mobile.scale",
        "description": "Scale on mobile device 移动设备上的缩放"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "userConfig.mobile.motion",
        "description": "Whether to enable motion detection on mobile devices 移动设备是否开启重力感应"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'live2dcanvas'",
        "defaultRaw": " 'live2dcanvas'",
        "name": "userConfig.name.canvas",
        "description": "ID name of the canvas canvas元素的ID"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'live2d-widget'",
        "defaultRaw": " 'live2d-widget'",
        "name": "userConfig.name.div",
        "description": "ID name of the div div元素的ID"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0.7",
        "defaultRaw": 0.7,
        "name": "userConfig.react.opacityDefault",
        "description": "Default opacity 默认透明度"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 0.2",
        "defaultRaw": 0.2,
        "name": "userConfig.react.opacityOnHover",
        "description": "OnHover opacity 鼠标移上透明度"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " func(e)",
        "defaultRaw": " func(e)",
        "name": "userConfig.react.myFunc",
        "description": "Custom event handler, won't override main handler, will reveice the event type. 自定义事件接收器"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "userConfig.dev.log",
        "description": "Whether to show log 显示日志"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "userConfig.dev.border",
        "description": "Whether to show border around the canvas 在canvas周围显示边界"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "userConfig.dev.mouseLog",
        "description": "Whether to show mouse log (tons of log), only work when dev.log is enabled 显示鼠标移动"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " func(x, y, ix, iy)",
        "defaultRaw": " func(x, y, ix, iy)",
        "name": "userConfig.dev.mouseFunc",
        "description": "Custom logger, only work when dev.log is enabled, will receive (x, y, ix, iy), which presents the actucally position and vitural position 自定义鼠标移动处理函数"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "captureFrame",
    "memberof": "src/index.js~L2Dwidget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~L2Dwidget#captureFrame",
    "access": "public",
    "description": "Capture current frame to png file {@link captureFrame}",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback function which will receive the current frame"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "downloadFrame",
    "memberof": "src/index.js~L2Dwidget",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~L2Dwidget#downloadFrame",
    "access": "public",
    "description": "download current frame {@link L2Dwidget.captureFrame}",
    "lineNumber": 86,
    "return": {
      "nullable": null,
      "types": [
        "null"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "src/lib/Live2DFramework.js",
    "content": "/**\n *\n *  You can modify and use this source freely\n *  only for the development of application related Live2D.\n *\n *  (c) Live2D Inc. All rights reserved.\n */\n\n/**\n * EYHN 基于 live2d 官方 Live2DFramework.js 修改\n *\n * Copyright © 2016 - 2017 EYHN\n */\n\n// Modified by xiazeyu.\n\n/**\n* @desc Basic functions releated to model react\n*/\n\nimport { UtSystem,\n         UtDebug,\n         LDTransform,\n         LDGL,\n         Live2D,\n         Live2DModelWebGL,\n         Live2DModelJS,\n         Live2DMotion,\n         MotionQueueManager,\n         PhysicsHair,\n         AMotion,\n         PartsDataID,\n         DrawDataID,\n         BaseDataID,\n         ParamID } from './live2d.core';\n\n//============================================================\n//============================================================\n//  class L2DBaseModel\n//============================================================\n//============================================================\nfunction L2DBaseModel() {\n    this.live2DModel = null; // ALive2DModel\n    this.modelMatrix = null; // L2DModelMatrix\n    this.eyeBlink = null; // L2DEyeBlink\n    this.physics = null; // L2DPhysics\n    this.pose = null; // L2DPose\n    this.debugMode = false;\n    this.initialized = false;\n    this.updating = false;\n    this.alpha = 1;\n    this.accAlpha = 0;\n    this.lipSync = false;\n    this.lipSyncValue = 0;\n    this.accelX = 0;\n    this.accelY = 0;\n    this.accelZ = 0;\n    this.dragX = 0;\n    this.dragY = 0;\n    this.startTimeMSec = null;\n    this.mainMotionManager = new L2DMotionManager(); //L2DMotionManager\n    this.expressionManager = new L2DMotionManager(); //L2DMotionManager\n    this.motions = {};\n    this.expressions = {};\n    this.isTexLoaded = false;\n}\n\nvar texCounter = 0;\n\n//============================================================\n//    L2DBaseModel # getModelMatrix()\n//============================================================\nL2DBaseModel.prototype.getModelMatrix = function () {\n    return this.modelMatrix;\n}\n\n//============================================================\n//    L2DBaseModel # setAlpha()\n//============================================================\nL2DBaseModel.prototype.setAlpha = function (a/*float*/) {\n    if (a > 0.999) a = 1;\n    if (a < 0.001) a = 0;\n    this.alpha = a;\n}\n\n//============================================================\n//    L2DBaseModel # getAlpha()\n//============================================================\nL2DBaseModel.prototype.getAlpha = function () {\n    return this.alpha;\n}\n\n//============================================================\n//    L2DBaseModel # isInitialized()\n//============================================================\nL2DBaseModel.prototype.isInitialized = function () {\n    return this.initialized;\n}\n\n//============================================================\n//    L2DBaseModel # setInitialized()\n//============================================================\nL2DBaseModel.prototype.setInitialized = function (v/*boolean*/) {\n    this.initialized = v;\n}\n\n//============================================================\n//    L2DBaseModel # isUpdating()\n//============================================================\nL2DBaseModel.prototype.isUpdating = function () {\n    return this.updating;\n}\n\n//============================================================\n//    L2DBaseModel # setUpdating()\n//============================================================\nL2DBaseModel.prototype.setUpdating = function (v/*boolean*/) {\n    this.updating = v;\n}\n\n//============================================================\n//    L2DBaseModel # getLive2DModel()\n//============================================================\nL2DBaseModel.prototype.getLive2DModel = function () {\n    return this.live2DModel;\n}\n\n//============================================================\n//    L2DBaseModel # setLipSync()\n//============================================================\nL2DBaseModel.prototype.setLipSync = function (v/*boolean*/) {\n    this.lipSync = v;\n}\n\n//============================================================\n//    L2DBaseModel # setLipSyncValue()\n//============================================================\nL2DBaseModel.prototype.setLipSyncValue = function (v/*float*/) {\n    this.lipSyncValue = v;\n}\n\n//============================================================\n//    L2DBaseModel # setAccel()\n//============================================================\nL2DBaseModel.prototype.setAccel = function (x/*float*/, y/*float*/, z/*float*/) {\n    this.accelX = x;\n    this.accelY = y;\n    this.accelZ = z;\n}\n\n//============================================================\n//    L2DBaseModel # setDrag()\n//============================================================\nL2DBaseModel.prototype.setDrag = function (x/*float*/, y/*float*/) {\n    this.dragX = x;\n    this.dragY = y;\n}\n\n//============================================================\n//    L2DBaseModel # getMainMotionManager()\n//============================================================\nL2DBaseModel.prototype.getMainMotionManager = function () {\n    return this.mainMotionManager;\n}\n\n//============================================================\n//    L2DBaseModel # getExpressionManager()\n//============================================================\nL2DBaseModel.prototype.getExpressionManager = function () {\n    return this.expressionManager;\n}\n\n//============================================================\n//    L2DBaseModel # loadModelData()\n//============================================================\nL2DBaseModel.prototype.loadModelData = function (path/*String*/, callback) {\n    /*\n    if( this.live2DModel != null ) {\n        this.live2DModel.deleteTextures();\n    }\n    */\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\n    if (this.debugMode) pm.log(\"Load model : \" + path);\n\n    var thisRef = this;\n    pm.loadLive2DModel(path, function (l2dModel) {\n        thisRef.live2DModel = l2dModel;\n        thisRef.live2DModel.saveParam();\n\n        var _err = Live2D.getError();\n\n        if (_err != 0) {\n            console.error(\"Error : Failed to loadModelData().\");\n            return;\n        }\n\n        thisRef.modelMatrix = new L2DModelMatrix(\n            thisRef.live2DModel.getCanvasWidth(),\n            thisRef.live2DModel.getCanvasHeight()); //L2DModelMatrix\n        thisRef.modelMatrix.setWidth(2);\n        thisRef.modelMatrix.setCenterPosition(0, 0);\n\n        callback(thisRef.live2DModel);\n    });\n}\n\n\n//============================================================\n//    L2DBaseModel # loadTexture()\n//============================================================\nL2DBaseModel.prototype.loadTexture = function (no/*int*/, path/*String*/, callback) {\n    texCounter++;\n\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\n\n    if (this.debugMode) pm.log(\"Load Texture : \" + path);\n\n    var thisRef = this;\n    pm.loadTexture(this.live2DModel, no, path, function () {\n        texCounter--;\n        if (texCounter == 0) thisRef.isTexLoaded = true;\n        if (typeof callback == \"function\") callback();\n    });\n\n}\n\n//============================================================\n//    L2DBaseModel # loadMotion()\n//============================================================\nL2DBaseModel.prototype.loadMotion = function (name/*String*/, path /*String*/, callback) {\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\n\n    if (this.debugMode) pm.log(\"Load Motion : \" + path);\n\n    var motion = null; //Live2DMotion\n\n    var thisRef = this;\n    pm.loadBytes(path, function (buf) {\n        motion = Live2DMotion.loadMotion(buf);\n        if (name != null) {\n            thisRef.motions[name] = motion;\n        }\n        callback(motion);\n    });\n\n}\n\n//============================================================\n//    L2DBaseModel # loadExpression()\n//============================================================\nL2DBaseModel.prototype.loadExpression = function (name/*String*/, path /*String*/, callback) {\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\n\n    if (this.debugMode) pm.log(\"Load Expression : \" + path);\n\n    var thisRef = this;\n    pm.loadBytes(path, function (buf) {\n        if (name != null) {\n            thisRef.expressions[name] = L2DExpressionMotion.loadJson(buf);\n        }\n        if (typeof callback == \"function\") callback();\n    });\n}\n\n//============================================================\n//    L2DBaseModel # loadPose()\n//============================================================\nL2DBaseModel.prototype.loadPose = function (path /*String*/, callback) {\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\n    if (this.debugMode) pm.log(\"Load Pose : \" + path);\n    var thisRef = this;\n    try {\n        pm.loadBytes(path, function (buf) {\n            thisRef.pose = L2DPose.load(buf);\n            if (typeof callback == \"function\") callback();\n        });\n    }\n    catch (e) {\n        console.warn(e);\n    }\n}\n\n//============================================================\n//    L2DBaseModel # loadPhysics()\n//============================================================\nL2DBaseModel.prototype.loadPhysics = function (path/*String*/) {\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\n    if (this.debugMode) pm.log(\"Load Physics : \" + path);\n    var thisRef = this;\n    try {\n        pm.loadBytes(path, function (buf) {\n            thisRef.physics = L2DPhysics.load(buf);\n        });\n    }\n    catch (e) {\n        console.warn(e);\n    }\n}\n\n//============================================================\n//    L2DBaseModel # hitTestSimple()\n//============================================================\nL2DBaseModel.prototype.hitTestSimple = function (drawID, testX, testY) {\n\n\tif(this.live2DModel === null) return !1;\n\n    var drawIndex = this.live2DModel.getDrawDataIndex(drawID);\n\n    if (drawIndex < 0) return false;\n\n    var points = this.live2DModel.getTransformedPoints(drawIndex);\n    var left = this.live2DModel.getCanvasWidth();\n    var right = 0;\n    var top = this.live2DModel.getCanvasHeight();\n    var bottom = 0;\n\n    for (var j = 0; j < points.length; j = j + 2) {\n        var x = points[j];\n        var y = points[j + 1];\n\n        if (x < left) left = x;\n        if (x > right) right = x;\n        if (y < top) top = y;\n        if (y > bottom) bottom = y;\n    }\n    var tx = this.modelMatrix.invertTransformX(testX);\n    var ty = this.modelMatrix.invertTransformY(testY);\n\n    return (left <= tx && tx <= right && top <= ty && ty <= bottom);\n}\n\n//============================================================\n//============================================================\n//  class L2DExpressionMotion  extends     AMotion\n//============================================================\n//============================================================\nfunction L2DExpressionMotion() {\n    AMotion.prototype.constructor.call(this);\n    this.paramList = new Array(); //ArrayList<L2DExpressionParam>\n}\n\nL2DExpressionMotion.prototype = new AMotion(); // L2DExpressionMotion extends AMotion\n\n//============================================================\nL2DExpressionMotion.EXPRESSION_DEFAULT = \"DEFAULT\";\nL2DExpressionMotion.TYPE_SET = 0;\nL2DExpressionMotion.TYPE_ADD = 1;\nL2DExpressionMotion.TYPE_MULT = 2;\n\n//============================================================\n//    static L2DExpressionMotion.loadJson()\n//============================================================\nL2DExpressionMotion.loadJson = function (buf) {\n    var ret = new L2DExpressionMotion();\n\n    var pm = Live2DFramework.getPlatformManager();\n    var json = pm.jsonParseFromBytes(buf);\n\n    ret.setFadeIn(parseInt(json.fade_in) > 0 ? parseInt(json.fade_in) : 1000);\n    ret.setFadeOut(parseInt(json.fade_out) > 0 ? parseInt(json.fade_out) : 1000);\n\n    if (json.params == null) {\n        return ret;\n    }\n\n    var params = json.params;\n    var paramNum = params.length;\n    ret.paramList = []; //ArrayList<L2DExpressionParam>\n    for (var i = 0; i < paramNum; i++) {\n        var param = params[i];\n        var paramID = param.id.toString();\n        var value = parseFloat(param.val);\n        var calcTypeInt = L2DExpressionMotion.TYPE_ADD;\n        var calc = param.calc != null ? param.calc.toString() : \"add\";\n        if (calc === \"add\") {\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\n        }\n        else if (calc === \"mult\") {\n            calcTypeInt = L2DExpressionMotion.TYPE_MULT;\n        }\n        else if (calc === \"set\") {\n            calcTypeInt = L2DExpressionMotion.TYPE_SET;\n        }\n        else {\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\n        }\n        if (calcTypeInt == L2DExpressionMotion.TYPE_ADD) {\n            var defaultValue = param.def == null ? 0 : parseFloat(param.def);\n            value = value - defaultValue;\n        }\n        else if (calcTypeInt == L2DExpressionMotion.TYPE_MULT) {\n            var defaultValue = param.def == null ? 1 : parseFloat(param.def);\n            if (defaultValue == 0) defaultValue = 1;\n            value = value / defaultValue;\n        }\n\n        var item = new L2DExpressionParam();\n        item.id = paramID;\n        item.type = calcTypeInt;\n        item.value = value;\n\n        ret.paramList.push(item);\n    }\n\n    return ret;\n}\n\n\n//============================================================\n//    L2DExpressionMotion # updateParamExe()\n//============================================================\nL2DExpressionMotion.prototype.updateParamExe = function (model /*ALive2DModel*/, timeMSec/*long*/, weight /*float*/, motionQueueEnt /*MotionQueueEnt*/) {\n    for (var i = this.paramList.length - 1; i >= 0; --i) {\n        var param = this.paramList[i]; //L2DExpressionParam\n        // if (!param || !param.type) continue;\n        if (param.type == L2DExpressionMotion.TYPE_ADD) {\n            model.addToParamFloat(param.id, param.value, weight);\n        }\n        else if (param.type == L2DExpressionMotion.TYPE_MULT) {\n            model.multParamFloat(param.id, param.value, weight);\n        }\n        else if (param.type == L2DExpressionMotion.TYPE_SET) {\n            model.setParamFloat(param.id, param.value, weight);\n        }\n    }\n}\n\n//============================================================\n//============================================================\n//  class L2DExpressionParam\n//============================================================\n//============================================================\nfunction L2DExpressionParam() {\n    this.id = \"\";\n    this.type = -1;\n    this.value = null;\n}\n\n//============================================================\n//============================================================\n//  class L2DEyeBlink\n//============================================================\n//============================================================\nfunction L2DEyeBlink() {\n    this.nextBlinkTime = null /* TODO NOT INIT */; //\n    this.stateStartTime = null /* TODO NOT INIT */; //\n    this.blinkIntervalMsec = null /* TODO NOT INIT */; //\n    this.eyeState = EYE_STATE.STATE_FIRST;\n    this.blinkIntervalMsec = 4000;\n    this.closingMotionMsec = 100;\n    this.closedMotionMsec = 50;\n    this.openingMotionMsec = 150;\n    this.closeIfZero = true;\n    this.eyeID_L = \"PARAM_EYE_L_OPEN\";\n    this.eyeID_R = \"PARAM_EYE_R_OPEN\";\n}\n\n//============================================================\n//    L2DEyeBlink # calcNextBlink()\n//============================================================\nL2DEyeBlink.prototype.calcNextBlink = function () {\n    var time /*long*/ = UtSystem.getUserTimeMSec();\n    var r /*Number*/ = Math.random();\n    return  /*(long)*/ (time + r * (2 * this.blinkIntervalMsec - 1));\n}\n\n//============================================================\n//    L2DEyeBlink # setInterval()\n//============================================================\nL2DEyeBlink.prototype.setInterval = function (blinkIntervalMsec /*int*/) {\n    this.blinkIntervalMsec = blinkIntervalMsec;\n}\n\n//============================================================\n//    L2DEyeBlink # setEyeMotion()\n//============================================================\nL2DEyeBlink.prototype.setEyeMotion = function (closingMotionMsec/*int*/, closedMotionMsec/*int*/, openingMotionMsec/*int*/) {\n    this.closingMotionMsec = closingMotionMsec;\n    this.closedMotionMsec = closedMotionMsec;\n    this.openingMotionMsec = openingMotionMsec;\n}\n\n//============================================================\n//    L2DEyeBlink # updateParam()\n//============================================================\nL2DEyeBlink.prototype.updateParam = function (model/*ALive2DModel*/) {\n    var time /*:long*/ = UtSystem.getUserTimeMSec();\n    var eyeParamValue /*:Number*/;\n    var t /*:Number*/ = 0;\n    switch (this.eyeState) {\n        case EYE_STATE.STATE_CLOSING:\n            t = (time - this.stateStartTime) / this.closingMotionMsec;\n            if (t >= 1) {\n                t = 1;\n                this.eyeState = EYE_STATE.STATE_CLOSED;\n                this.stateStartTime = time;\n            }\n            eyeParamValue = 1 - t;\n            break;\n        case EYE_STATE.STATE_CLOSED:\n            t = (time - this.stateStartTime) / this.closedMotionMsec;\n            if (t >= 1) {\n                this.eyeState = EYE_STATE.STATE_OPENING;\n                this.stateStartTime = time;\n            }\n            eyeParamValue = 0;\n            break;\n        case EYE_STATE.STATE_OPENING:\n            t = (time - this.stateStartTime) / this.openingMotionMsec;\n            if (t >= 1) {\n                t = 1;\n                this.eyeState = EYE_STATE.STATE_INTERVAL;\n                this.nextBlinkTime = this.calcNextBlink();\n            }\n            eyeParamValue = t;\n            break;\n        case EYE_STATE.STATE_INTERVAL:\n            if (this.nextBlinkTime < time) {\n                this.eyeState = EYE_STATE.STATE_CLOSING;\n                this.stateStartTime = time;\n            }\n            eyeParamValue = 1;\n            break;\n        case EYE_STATE.STATE_FIRST:\n        default:\n            this.eyeState = EYE_STATE.STATE_INTERVAL;\n            this.nextBlinkTime = this.calcNextBlink();\n            eyeParamValue = 1;\n            break;\n    }\n    if (!this.closeIfZero) eyeParamValue = -eyeParamValue;\n    model.setParamFloat(this.eyeID_L, eyeParamValue);\n    model.setParamFloat(this.eyeID_R, eyeParamValue);\n}\n\n//== enum EYE_STATE ==\nvar EYE_STATE = function () { };\n\nEYE_STATE.STATE_FIRST = \"STATE_FIRST\"\nEYE_STATE.STATE_INTERVAL = \"STATE_INTERVAL\"\nEYE_STATE.STATE_CLOSING = \"STATE_CLOSING\"\nEYE_STATE.STATE_CLOSED = \"STATE_CLOSED\"\nEYE_STATE.STATE_OPENING = \"STATE_OPENING\"\n\n//============================================================\n//============================================================\n//  class L2DMatrix44\n//============================================================\n//============================================================\nfunction L2DMatrix44() {\n    this.tr = new Float32Array(16); //\n    this.identity();\n}\n\n//============================================================\n//    static L2DMatrix44.mul()\n//============================================================\n// matrix multiplication\nL2DMatrix44.mul = function (a/*float[]*/, b/*float[]*/, dst/*float[]*/) {\n    var c = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    var n = 4;\n    var i, j, k;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            for (k = 0; k < n; k++) {\n                c[i + j * 4] += a[i + k * 4] * b[k + j * 4];\n            }\n        }\n    }\n    for (i = 0; i < 16; i++) {\n        dst[i] = c[i];\n    }\n}\n\n//============================================================\n//    L2DMatrix44 # identity()\n//============================================================\nL2DMatrix44.prototype.identity = function () {\n    for (var i/*:int*/ = 0; i < 16; i++)\n        this.tr[i] = ((i % 5) == 0) ? 1 : 0;\n}\n\n//============================================================\n//    L2DMatrix44 # getArray()\n//============================================================\nL2DMatrix44.prototype.getArray = function () {\n    return this.tr;\n}\n\n//============================================================\n//    L2DMatrix44 # getCopyMatrix()\n//============================================================\nL2DMatrix44.prototype.getCopyMatrix = function () {\n    return new Float32Array(this.tr); // this.tr.clone();\n}\n\n//============================================================\n//    L2DMatrix44 # setMatrix()\n//============================================================\nL2DMatrix44.prototype.setMatrix = function (tr/*float[]*/) {\n    if (this.tr == null || this.tr.length != this.tr.length) return;\n    for (var i/*:int*/ = 0; i < 16; i++) this.tr[i] = tr[i];\n}\n\n//============================================================\n//    L2DMatrix44 # getScaleX()\n//============================================================\nL2DMatrix44.prototype.getScaleX = function () {\n    return this.tr[0];\n}\n\n//============================================================\n//    L2DMatrix44 # getScaleY()\n//============================================================\nL2DMatrix44.prototype.getScaleY = function () {\n    return this.tr[5];\n}\n\n//============================================================\n//    L2DMatrix44 # transformX()\n//============================================================\nL2DMatrix44.prototype.transformX = function (src/*float*/) {\n    return this.tr[0] * src + this.tr[12];\n}\n\n//============================================================\n//    L2DMatrix44 # transformY()\n//============================================================\nL2DMatrix44.prototype.transformY = function (src/*float*/) {\n    return this.tr[5] * src + this.tr[13];\n}\n\n//============================================================\n//    L2DMatrix44 # invertTransformX()\n//============================================================\nL2DMatrix44.prototype.invertTransformX = function (src/*float*/) {\n    return (src - this.tr[12]) / this.tr[0];\n}\n\n//============================================================\n//    L2DMatrix44 # invertTransformY()\n//============================================================\nL2DMatrix44.prototype.invertTransformY = function (src/*float*/) {\n    return (src - this.tr[13]) / this.tr[5];\n}\n\n//============================================================\n//    L2DMatrix44 # multTranslate()\n//============================================================\nL2DMatrix44.prototype.multTranslate = function (shiftX/*float*/, shiftY/*float*/) {\n    var tr1 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, shiftX, shiftY, 0, 1];\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\n}\n\n//============================================================\n//    L2DMatrix44 # translate()\n//============================================================\nL2DMatrix44.prototype.translate = function (x/*float*/, y/*float*/) {\n    this.tr[12] = x;\n    this.tr[13] = y;\n}\n\n//============================================================\n//    L2DMatrix44 # translateX()\n//============================================================\nL2DMatrix44.prototype.translateX = function (x/*float*/) {\n    this.tr[12] = x;\n}\n\n//============================================================\n//    L2DMatrix44 # translateY()\n//============================================================\nL2DMatrix44.prototype.translateY = function (y/*float*/) {\n    this.tr[13] = y;\n}\n\n//============================================================\n//    L2DMatrix44 # multScale()\n//============================================================\nL2DMatrix44.prototype.multScale = function (scaleX/*float*/, scaleY/*float*/) {\n    var tr1 = [scaleX, 0, 0, 0, 0, scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\n}\n\n//============================================================\n//    L2DMatrix44 # scale()\n//============================================================\nL2DMatrix44.prototype.scale = function (scaleX/*float*/, scaleY/*float*/) {\n    this.tr[0] = scaleX;\n    this.tr[5] = scaleY;\n}\n\n//============================================================\n//============================================================\n//  class L2DModelMatrix       extends     L2DMatrix44\n//============================================================\n//============================================================\nfunction L2DModelMatrix(w/*float*/, h/*float*/) {\n    L2DMatrix44.prototype.constructor.call(this);\n    this.width = w;\n    this.height = h;\n}\n\n//L2DModelMatrix extends L2DMatrix44\nL2DModelMatrix.prototype = new L2DMatrix44();\n\n//============================================================\n//    L2DModelMatrix # setPosition()\n//============================================================\nL2DModelMatrix.prototype.setPosition = function (x/*float*/, y/*float*/) {\n    this.translate(x, y);\n}\n\n//============================================================\n//    L2DModelMatrix # setCenterPosition()\n//============================================================\nL2DModelMatrix.prototype.setCenterPosition = function (x/*float*/, y/*float*/) {\n    var w = this.width * this.getScaleX();\n    var h = this.height * this.getScaleY();\n    this.translate(x - w / 2, y - h / 2);\n}\n\n//============================================================\n//    L2DModelMatrix # top()\n//============================================================\nL2DModelMatrix.prototype.top = function (y/*float*/) {\n    this.setY(y);\n}\n\n//============================================================\n//    L2DModelMatrix # bottom()\n//============================================================\nL2DModelMatrix.prototype.bottom = function (y/*float*/) {\n    var h = this.height * this.getScaleY();\n    this.translateY(y - h);\n}\n\n//============================================================\n//    L2DModelMatrix # left()\n//============================================================\nL2DModelMatrix.prototype.left = function (x/*float*/) {\n    this.setX(x);\n}\n\n//============================================================\n//    L2DModelMatrix # right()\n//============================================================\nL2DModelMatrix.prototype.right = function (x/*float*/) {\n    var w = this.width * this.getScaleX();\n    this.translateX(x - w);\n}\n\n//============================================================\n//    L2DModelMatrix # centerX()\n//============================================================\nL2DModelMatrix.prototype.centerX = function (x/*float*/) {\n    var w = this.width * this.getScaleX();\n    this.translateX(x - w / 2);\n}\n\n//============================================================\n//    L2DModelMatrix # centerY()\n//============================================================\nL2DModelMatrix.prototype.centerY = function (y/*float*/) {\n    var h = this.height * this.getScaleY();\n    this.translateY(y - h / 2);\n}\n\n//============================================================\n//    L2DModelMatrix # setX()\n//============================================================\nL2DModelMatrix.prototype.setX = function (x/*float*/) {\n    this.translateX(x);\n}\n\n//============================================================\n//    L2DModelMatrix # setY()\n//============================================================\nL2DModelMatrix.prototype.setY = function (y/*float*/) {\n    this.translateY(y);\n}\n\n//============================================================\n//    L2DModelMatrix # setHeight()\n//============================================================\nL2DModelMatrix.prototype.setHeight = function (h/*float*/) {\n    var scaleX = h / this.height;\n    var scaleY = -scaleX;\n    this.scale(scaleX, scaleY);\n}\n\n//============================================================\n//    L2DModelMatrix # setWidth()\n//============================================================\nL2DModelMatrix.prototype.setWidth = function (w/*float*/) {\n    var scaleX = w / this.width;\n    var scaleY = -scaleX;\n    this.scale(scaleX, scaleY);\n}\n\n//============================================================\n//============================================================\n//  class L2DMotionManager     extends     MotionQueueManager\n//============================================================\n//============================================================\nfunction L2DMotionManager() {\n    MotionQueueManager.prototype.constructor.call(this);\n    this.currentPriority = null;\n    this.reservePriority = null;\n\n    this.super = MotionQueueManager.prototype;\n}\n\n\nL2DMotionManager.prototype = new MotionQueueManager();\n\n//============================================================\n//    L2DMotionManager # getCurrentPriority()\n//============================================================\nL2DMotionManager.prototype.getCurrentPriority = function () {\n    return this.currentPriority;\n}\n\n//============================================================\n//    L2DMotionManager # getReservePriority()\n//============================================================\nL2DMotionManager.prototype.getReservePriority = function () {\n    return this.reservePriority;\n}\n\n//============================================================\n//    L2DMotionManager # reserveMotion()\n//============================================================\nL2DMotionManager.prototype.reserveMotion = function (priority/*int*/) {\n    if (this.reservePriority >= priority) {\n        return false;\n    }\n    if (this.currentPriority >= priority) {\n        return false;\n    }\n\n    this.reservePriority = priority;\n\n    return true;\n}\n\n//============================================================\n//    L2DMotionManager # setReservePriority()\n//============================================================\nL2DMotionManager.prototype.setReservePriority = function (val/*int*/) {\n    this.reservePriority = val;\n}\n\n//============================================================\n//    L2DMotionManager # updateParam()\n//============================================================\nL2DMotionManager.prototype.updateParam = function (model/*ALive2DModel*/) {\n    var updated = MotionQueueManager.prototype.updateParam.call(this, model);\n\n    if (this.isFinished()) {\n        this.currentPriority = 0;\n    }\n\n    return updated;\n}\n\n//============================================================\n//    L2DMotionManager # startMotionPrio()\n//============================================================\nL2DMotionManager.prototype.startMotionPrio = function (motion/*AMotion*/, priority/*int*/) {\n    if (priority == this.reservePriority) {\n        this.reservePriority = 0;\n    }\n    this.currentPriority = priority;\n    return this.startMotion(motion, false);\n}\n\n//============================================================\n//============================================================\n//  class L2DPhysics\n//============================================================\n//============================================================\nfunction L2DPhysics() {\n    this.physicsList = new Array(); //ArrayList<PhysicsHair>\n    this.startTimeMSec = UtSystem.getUserTimeMSec();\n}\n\n//============================================================\n//    static L2DPhysics.load()\n//============================================================\nL2DPhysics.load = function (buf /*byte[]*/) {\n    var ret = new L2DPhysics(); //L2DPhysicsL2DPhysics\n    var pm = Live2DFramework.getPlatformManager();\n    var json = pm.jsonParseFromBytes(buf);\n    var params = json.physics_hair;\n    var paramNum = params.length;\n    for (var i = 0; i < paramNum; i++) {\n        var param = params[i]; //Value\n        var physics = new PhysicsHair(); //PhysicsHairPhysicsHair\n        var setup = param.setup; //Value\n        var length = parseFloat(setup.length);\n        var resist = parseFloat(setup.regist);\n        var mass = parseFloat(setup.mass);\n        physics.setup(length, resist, mass);\n        var srcList = param.src; //Value\n        var srcNum = srcList.length;\n        for (var j = 0; j < srcNum; j++) {\n            var src = srcList[j]; //Value\n            var id = src.id; //String\n            var type = PhysicsHair.Src.SRC_TO_X;\n            var typeStr = src.ptype; //String\n            if (typeStr === \"x\") {\n                type = PhysicsHair.Src.SRC_TO_X;\n            }\n            else if (typeStr === \"y\") {\n                type = PhysicsHair.Src.SRC_TO_Y;\n            }\n            else if (typeStr === \"angle\") {\n                type = PhysicsHair.Src.SRC_TO_G_ANGLE;\n            }\n            else {\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Src\");\n            }\n            var scale = parseFloat(src.scale);\n            var weight = parseFloat(src.weight);\n            physics.addSrcParam(type, id, scale, weight);\n        }\n        var targetList = param.targets; //Value\n        var targetNum = targetList.length;\n        for (var j = 0; j < targetNum; j++) {\n            var target = targetList[j]; //Value\n            var id = target.id; //String\n            var type = PhysicsHair.Target.TARGET_FROM_ANGLE;\n            var typeStr = target.ptype; //String\n            if (typeStr === \"angle\") {\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE;\n            }\n            else if (typeStr === \"angle_v\") {\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE_V;\n            }\n            else {\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Target\");\n            }\n            var scale = parseFloat(target.scale);\n            var weight = parseFloat(target.weight);\n            physics.addTargetParam(type, id, scale, weight);\n        }\n        ret.physicsList.push(physics);\n    }\n    return ret;\n}\n\n//============================================================\n//    L2DPhysics # updateParam()\n//============================================================\nL2DPhysics.prototype.updateParam = function (model/*ALive2DModel*/) {\n    var timeMSec = UtSystem.getUserTimeMSec() - this.startTimeMSec;\n    for (var i = 0; i < this.physicsList.length; i++) {\n        this.physicsList[i].update(model, timeMSec);\n    }\n}\n\n//============================================================\n//============================================================\n//  class L2DPose\n//============================================================\n//============================================================\nfunction L2DPose() {\n    this.lastTime = 0;\n    this.lastModel = null; //ALive2DModel\n    this.partsGroups = new Array(); //ArrayList<L2DPartsParam[]>\n}\n\n\n//============================================================\n//    static L2DPose.load()\n//============================================================\nL2DPose.load = function (buf/*byte[]*/) {\n    var ret = new L2DPose(); //L2DPose\n    var pm = Live2DFramework.getPlatformManager();\n    var json = pm.jsonParseFromBytes(buf);\n    var poseListInfo = json.parts_visible; //Value\n    var poseNum = poseListInfo.length;\n    for (var i_pose = 0; i_pose < poseNum; i_pose++) {\n        var poseInfo = poseListInfo[i_pose]; //Value\n        var idListInfo = poseInfo.group; //Value\n        var idNum = idListInfo.length;\n        var partsGroup/*L2DPartsParam*/ = new Array();\n        for (var i_group = 0; i_group < idNum; i_group++) {\n            var partsInfo = idListInfo[i_group]; //Value\n            var parts = new L2DPartsParam(partsInfo.id); //L2DPartsParamL2DPartsParam\n            partsGroup[i_group] = parts;\n            if (partsInfo.link == null) continue;\n            var linkListInfo = partsInfo.link; //Value\n            var linkNum = linkListInfo.length;\n            parts.link = new Array(); //ArrayList<L2DPartsParam>\n            for (var i_link = 0; i_link < linkNum; i_link++) {\n                var linkParts = new L2DPartsParam(linkListInfo[i_link]); //L2DPartsParamL2DPartsParam\n                parts.link.push(linkParts);\n            }\n        }\n        ret.partsGroups.push(partsGroup);\n    }\n\n    return ret;\n}\n\n//============================================================\n//    L2DPose # updateParam()\n//============================================================\nL2DPose.prototype.updateParam = function (model/*ALive2DModel*/) {\n    if (model == null) return;\n\n    if (!(model == this.lastModel)) {\n        this.initParam(model);\n    }\n    this.lastModel = model;\n\n    var curTime = UtSystem.getUserTimeMSec();\n    var deltaTimeSec = ((this.lastTime == 0) ? 0 : (curTime - this.lastTime) / 1000.0);\n    this.lastTime = curTime;\n    if (deltaTimeSec < 0) deltaTimeSec = 0;\n    for (var i = 0; i < this.partsGroups.length; i++) {\n        this.normalizePartsOpacityGroup(model, this.partsGroups[i], deltaTimeSec);\n        this.copyOpacityOtherParts(model, this.partsGroups[i]);\n    }\n}\n\n//============================================================\n//    L2DPose # initParam()\n//============================================================\nL2DPose.prototype.initParam = function (model/*ALive2DModel*/) {\n    if (model == null) return;\n    for (var i = 0; i < this.partsGroups.length; i++) {\n        var partsGroup = this.partsGroups[i]; //L2DPartsParam\n        for (var j = 0; j < partsGroup.length; j++) {\n            partsGroup[j].initIndex(model);\n            var partsIndex = partsGroup[j].partsIndex;\n            var paramIndex = partsGroup[j].paramIndex;\n            if (partsIndex < 0) continue;\n            var v/*:Boolean*/ = (model.getParamFloat(paramIndex) != 0);\n            model.setPartsOpacity(partsIndex, (v ? 1.0 : 0.0));\n            model.setParamFloat(paramIndex, (v ? 1.0 : 0.0));\n            if (partsGroup[j].link == null) continue;\n            for (var k = 0; k < partsGroup[j].link.length; k++) {\n                partsGroup[j].link[k].initIndex(model);\n            }\n        }\n    }\n}\n\n//============================================================\n//    L2DPose # normalizePartsOpacityGroup()\n//============================================================\nL2DPose.prototype.normalizePartsOpacityGroup = function (model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/, deltaTimeSec/*float*/) {\n    var visibleParts = -1;\n    var visibleOpacity = 1.0;\n    var CLEAR_TIME_SEC = 0.5;\n    var phi = 0.5;\n    var maxBackOpacity = 0.15;\n    for (var i = 0; i < partsGroup.length; i++) {\n        var partsIndex = partsGroup[i].partsIndex;\n        var paramIndex = partsGroup[i].paramIndex;\n        if (partsIndex < 0) continue; if (model.getParamFloat(paramIndex) != 0) {\n            if (visibleParts >= 0) {\n                break;\n            }\n            visibleParts = i;\n            visibleOpacity = model.getPartsOpacity(partsIndex);\n            visibleOpacity += deltaTimeSec / CLEAR_TIME_SEC;\n            if (visibleOpacity > 1) {\n                visibleOpacity = 1;\n            }\n        }\n    }\n    if (visibleParts < 0) {\n        visibleParts = 0;\n        visibleOpacity = 1;\n    }\n    for (var i = 0; i < partsGroup.length; i++) {\n        var partsIndex = partsGroup[i].partsIndex;\n        if (partsIndex < 0) continue; if (visibleParts == i) {\n            model.setPartsOpacity(partsIndex, visibleOpacity);\n        }\n        else {\n            var opacity = model.getPartsOpacity(partsIndex);\n            var a1;\n            if (visibleOpacity < phi) {\n                a1 = visibleOpacity * (phi - 1) / phi + 1;\n            }\n            else {\n                a1 = (1 - visibleOpacity) * phi / (1 - phi);\n            }\n            var backOp = (1 - a1) * (1 - visibleOpacity);\n            if (backOp > maxBackOpacity) {\n                a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\n            }\n            if (opacity > a1) {\n                opacity = a1;\n            }\n            model.setPartsOpacity(partsIndex, opacity);\n        }\n    }\n}\n\n//============================================================\n//    L2DPose # copyOpacityOtherParts()\n//============================================================\nL2DPose.prototype.copyOpacityOtherParts = function (model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/) {\n    for (var i_group = 0; i_group < partsGroup.length; i_group++) {\n        var partsParam = partsGroup[i_group]; //L2DPartsParam\n        if (partsParam.link == null) continue;\n        if (partsParam.partsIndex < 0) continue;\n        var opacity = model.getPartsOpacity(partsParam.partsIndex);\n        for (var i_link = 0; i_link < partsParam.link.length; i_link++) {\n            var linkParts = partsParam.link[i_link]; //L2DPartsParam\n            if (linkParts.partsIndex < 0) continue;\n            model.setPartsOpacity(linkParts.partsIndex, opacity);\n        }\n    }\n}\n\n//============================================================\n//============================================================\n//  class L2DPartsParam\n//============================================================\n//============================================================\nfunction L2DPartsParam(id/*String*/) {\n    this.paramIndex = -1;\n    this.partsIndex = -1;\n    this.link = null; // ArrayList<L2DPartsParam>\n    this.id = id;\n}\n\n//============================================================\n//    L2DPartsParam # initIndex()\n//============================================================\nL2DPartsParam.prototype.initIndex = function (model/*ALive2DModel*/) {\n    this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\n    this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\n    model.setParamFloat(this.paramIndex, 1);\n}\n\n//============================================================\n//============================================================\n//  class L2DTargetPoint\n//============================================================\n//============================================================\nfunction L2DTargetPoint() {\n    this.EPSILON = 0.01; // 変化の最小値（この値以下は無視される）\n    this.faceTargetX = 0;\n    this.faceTargetY = 0;\n    this.faceX = 0;\n    this.faceY = 0;\n    this.faceVX = 0;\n    this.faceVY = 0;\n    this.lastTimeSec = 0;\n}\n\n//============================================================\nL2DTargetPoint.FRAME_RATE = 60;\n\n//============================================================\n//    L2DTargetPoint # set()\n//============================================================\nL2DTargetPoint.prototype.setPoint = function (x/*float*/, y/*float*/) {\n    this.faceTargetX = x;\n    this.faceTargetY = y;\n}\n\n//============================================================\n//    L2DTargetPoint # getX()\n//============================================================\nL2DTargetPoint.prototype.getX = function () {\n    return this.faceX;\n}\n\n//============================================================\n//    L2DTargetPoint # getY()\n//============================================================\nL2DTargetPoint.prototype.getY = function () {\n    return this.faceY;\n}\n\n//============================================================\n//    L2DTargetPoint # update()\n//============================================================\nL2DTargetPoint.prototype.update = function () {\n    var TIME_TO_MAX_SPEED = 0.15;\n    var FACE_PARAM_MAX_V = 40.0 / 7.5;\n    var MAX_V = FACE_PARAM_MAX_V / L2DTargetPoint.FRAME_RATE;\n    if (this.lastTimeSec == 0) {\n        this.lastTimeSec = UtSystem.getUserTimeMSec();\n        return;\n    }\n    var curTimeSec = UtSystem.getUserTimeMSec();\n    var deltaTimeWeight = (curTimeSec - this.lastTimeSec) * L2DTargetPoint.FRAME_RATE / 1000.0;\n    this.lastTimeSec = curTimeSec;\n    var FRAME_TO_MAX_SPEED = TIME_TO_MAX_SPEED * L2DTargetPoint.FRAME_RATE;\n    var MAX_A = deltaTimeWeight * MAX_V / FRAME_TO_MAX_SPEED;\n    var dx = (this.faceTargetX - this.faceX);\n    var dy = (this.faceTargetY - this.faceY);\n    // if(dx == 0 && dy == 0) return;\n    if (Math.abs(dx) <= this.EPSILON && Math.abs(dy) <= this.EPSILON) return;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var vx = MAX_V * dx / d;\n    var vy = MAX_V * dy / d;\n    var ax = vx - this.faceVX;\n    var ay = vy - this.faceVY;\n    var a = Math.sqrt(ax * ax + ay * ay);\n    if (a < -MAX_A || a > MAX_A) {\n        ax *= MAX_A / a;\n        ay *= MAX_A / a;\n        a = MAX_A;\n    }\n    this.faceVX += ax;\n    this.faceVY += ay;\n    {\n        var max_v = 0.5 * (Math.sqrt(MAX_A * MAX_A + 16 * MAX_A * d - 8 * MAX_A * d) - MAX_A);\n        var cur_v = Math.sqrt(this.faceVX * this.faceVX + this.faceVY * this.faceVY);\n        if (cur_v > max_v) {\n            this.faceVX *= max_v / cur_v;\n            this.faceVY *= max_v / cur_v;\n        }\n    }\n    this.faceX += this.faceVX;\n    this.faceY += this.faceVY;\n}\n\n//============================================================\n//============================================================\n//  class L2DViewMatrix        extends     L2DMatrix44\n//============================================================\n//============================================================\nfunction L2DViewMatrix() {\n  L2DMatrix44.prototype.constructor.call(this);\n  this.screenLeft = null;\n  this.screenRight = null;\n  this.screenTop = null;\n  this.screenBottom = null;\n  this.maxLeft = null;\n  this.maxRight = null;\n  this.maxTop = null;\n  this.maxBottom = null;\n}\n\nL2DViewMatrix.prototype = new L2DMatrix44(); //L2DViewMatrix extends L2DMatrix44\n\n//============================================================\n//    L2DViewMatrix # adjustTranslate()\n//============================================================\nL2DViewMatrix.prototype.adjustTranslate = function (shiftX/*float*/, shiftY/*float*/) {\n    if (this.tr[0] * this.maxLeft + (this.tr[12] + shiftX) > this.screenLeft)\n        shiftX = this.screenLeft - this.tr[0] * this.maxLeft - this.tr[12];\n    if (this.tr[0] * this.maxRight + (this.tr[12] + shiftX) < this.screenRight)\n        shiftX = this.screenRight - this.tr[0] * this.maxRight - this.tr[12];\n    if (this.tr[5] * this.maxTop + (this.tr[13] + shiftY) < this.screenTop)\n        shiftY = this.screenTop - this.tr[5] * this.maxTop - this.tr[13];\n    if (this.tr[5] * this.maxBottom + (this.tr[13] + shiftY) > this.screenBottom)\n        shiftY = this.screenBottom - this.tr[5] * this.maxBottom - this.tr[13];\n\n    var tr1 = [1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        shiftX, shiftY, 0, 1];\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\n}\n\n//============================================================\n//    L2DViewMatrix # adjustScale()\n//============================================================\nL2DViewMatrix.prototype.adjustScale = function (cx/*float*/, cy/*float*/, scale/*float*/) {\n    var targetScale = scale * this.tr[0];\n    var tr1 = [1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        cx, cy, 0, 1];\n    var tr2 = [scale, 0, 0, 0,\n        0, scale, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1];\n    var tr3 = [1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        -cx, -cy, 0, 1];\n    L2DMatrix44.mul(tr3, this.tr, this.tr);\n    L2DMatrix44.mul(tr2, this.tr, this.tr);\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\n}\n\n//============================================================\n//    L2DViewMatrix # setScreenRect()\n//============================================================\nL2DViewMatrix.prototype.setScreenRect = function (left/*float*/, right/*float*/, bottom/*float*/, top/*float*/) {\n    this.screenLeft = left;\n    this.screenRight = right;\n    this.screenTop = top;\n    this.screenBottom = bottom;\n}\n\n//============================================================\n//    L2DViewMatrix # setMaxScreenRect()\n//============================================================\nL2DViewMatrix.prototype.setMaxScreenRect = function (left/*float*/, right/*float*/, bottom/*float*/, top/*float*/) {\n    this.maxLeft = left;\n    this.maxRight = right;\n    this.maxTop = top;\n    this.maxBottom = bottom;\n}\n\n//============================================================\n//    L2DViewMatrix # getScreenLeft()\n//============================================================\nL2DViewMatrix.prototype.getScreenLeft = function () {\n    return this.screenLeft;\n}\n\n//============================================================\n//    L2DViewMatrix # getScreenRight()\n//============================================================\nL2DViewMatrix.prototype.getScreenRight = function () {\n    return this.screenRight;\n}\n\n//============================================================\n//    L2DViewMatrix # getScreenBottom()\n//============================================================\nL2DViewMatrix.prototype.getScreenBottom = function () {\n    return this.screenBottom;\n}\n\n//============================================================\n//    L2DViewMatrix # getScreenTop()\n//============================================================\nL2DViewMatrix.prototype.getScreenTop = function () {\n    return this.screenTop;\n}\n\n//============================================================\n//    L2DViewMatrix # getMaxLeft()\n//============================================================\nL2DViewMatrix.prototype.getMaxLeft = function () {\n    return this.maxLeft;\n}\n\n//============================================================\n//    L2DViewMatrix # getMaxRight()\n//============================================================\nL2DViewMatrix.prototype.getMaxRight = function () {\n    return this.maxRight;\n}\n\n//============================================================\n//    L2DViewMatrix # getMaxBottom()\n//============================================================\nL2DViewMatrix.prototype.getMaxBottom = function () {\n    return this.maxBottom;\n}\n\n//============================================================\n//    L2DViewMatrix # getMaxTop()\n//============================================================\nL2DViewMatrix.prototype.getMaxTop = function () {\n    return this.maxTop;\n}\n\n//============================================================\n//============================================================\n//  class Live2DFramework\n//============================================================\n//============================================================\nfunction Live2DFramework() {\n}\n\n//============================================================\nLive2DFramework.platformManager = null;\n\n//============================================================\n//    static Live2DFramework.getPlatformManager()\n//============================================================\nLive2DFramework.getPlatformManager = function () {\n    return Live2DFramework.platformManager;\n}\n\n//============================================================\n//    static Live2DFramework.setPlatformManager()\n//============================================================\nLive2DFramework.setPlatformManager = function (platformManager /*IPlatformManager*/) {\n    Live2DFramework.platformManager = platformManager;\n}\n\nexport{\n  L2DTargetPoint,\n  Live2DFramework,\n  L2DViewMatrix,\n  L2DPose,\n  L2DPartsParam,\n  L2DPhysics,\n  L2DMotionManager,\n  L2DModelMatrix,\n  L2DMatrix44,\n  EYE_STATE,\n  L2DEyeBlink,\n  L2DExpressionParam,\n  L2DExpressionMotion,\n  L2DBaseModel,\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/lib/Live2DFramework.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "texCounter",
    "memberof": "src/lib/Live2DFramework.js",
    "static": true,
    "longname": "src/lib/Live2DFramework.js~texCounter",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "getModelMatrix",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getModelMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "setAlpha",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setAlpha",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "getAlpha",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getAlpha",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "isInitialized",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~isInitialized",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "setInitialized",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setInitialized",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "isUpdating",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~isUpdating",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "setUpdating",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setUpdating",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "getLive2DModel",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getLive2DModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "setLipSync",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setLipSync",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 131,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "setLipSyncValue",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setLipSyncValue",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "setAccel",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setAccel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "z",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "setDrag",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setDrag",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "getMainMotionManager",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getMainMotionManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "getExpressionManager",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getExpressionManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 169,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "loadModelData",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~loadModelData",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "loadTexture",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~loadTexture",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "params": [
      {
        "name": "no",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "loadMotion",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~loadMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 230,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "loadExpression",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~loadExpression",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 251,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "loadPose",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~loadPose",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "loadPhysics",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~loadPhysics",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 286,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "hitTestSimple",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~hitTestSimple",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "params": [
      {
        "name": "drawID",
        "types": [
          "*"
        ]
      },
      {
        "name": "testX",
        "types": [
          "*"
        ]
      },
      {
        "name": "testY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "loadJson",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~loadJson",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 353,
    "undocument": true,
    "params": [
      {
        "name": "buf",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "updateParamExe",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~updateParamExe",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 412,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "timeMSec",
        "types": [
          "*"
        ]
      },
      {
        "name": "weight",
        "types": [
          "*"
        ]
      },
      {
        "name": "motionQueueEnt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "function",
    "name": "calcNextBlink",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~calcNextBlink",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 461,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 147,
    "kind": "function",
    "name": "setInterval",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setInterval",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 470,
    "undocument": true,
    "params": [
      {
        "name": "blinkIntervalMsec",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "setEyeMotion",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setEyeMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 477,
    "undocument": true,
    "params": [
      {
        "name": "closingMotionMsec",
        "types": [
          "*"
        ]
      },
      {
        "name": "closedMotionMsec",
        "types": [
          "*"
        ]
      },
      {
        "name": "openingMotionMsec",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 486,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "mul",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~mul",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 559,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "dst",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "identity",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~identity",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 578,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "getArray",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getArray",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 586,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "getCopyMatrix",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getCopyMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 593,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "setMatrix",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 600,
    "undocument": true,
    "params": [
      {
        "name": "tr",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "getScaleX",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getScaleX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 608,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "getScaleY",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getScaleY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 615,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "transformX",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~transformX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 622,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "transformY",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~transformY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 629,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "invertTransformX",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~invertTransformX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 636,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "invertTransformY",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~invertTransformY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 643,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "multTranslate",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~multTranslate",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 650,
    "undocument": true,
    "params": [
      {
        "name": "shiftX",
        "types": [
          "*"
        ]
      },
      {
        "name": "shiftY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "translate",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~translate",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 658,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "translateX",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~translateX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 666,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "translateY",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~translateY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 673,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "multScale",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~multScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 680,
    "undocument": true,
    "params": [
      {
        "name": "scaleX",
        "types": [
          "*"
        ]
      },
      {
        "name": "scaleY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "scale",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~scale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 688,
    "undocument": true,
    "params": [
      {
        "name": "scaleX",
        "types": [
          "*"
        ]
      },
      {
        "name": "scaleY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "setPosition",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setPosition",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 710,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "setCenterPosition",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setCenterPosition",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 717,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "top",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~top",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 726,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "bottom",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~bottom",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 733,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "left",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~left",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 741,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "right",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~right",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 748,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "centerX",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~centerX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 756,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "centerY",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~centerY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 764,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "setX",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 772,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "setY",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 779,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "setHeight",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setHeight",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 786,
    "undocument": true,
    "params": [
      {
        "name": "h",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "setWidth",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setWidth",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 795,
    "undocument": true,
    "params": [
      {
        "name": "w",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "getCurrentPriority",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getCurrentPriority",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 820,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "getReservePriority",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getReservePriority",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 827,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "reserveMotion",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~reserveMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 834,
    "undocument": true,
    "params": [
      {
        "name": "priority",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "setReservePriority",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setReservePriority",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 850,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 857,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "startMotionPrio",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~startMotionPrio",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 870,
    "undocument": true,
    "params": [
      {
        "name": "motion",
        "types": [
          "*"
        ]
      },
      {
        "name": "priority",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "load",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~load",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 891,
    "undocument": true,
    "params": [
      {
        "name": "buf",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 956,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "load",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~load",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 978,
    "undocument": true,
    "params": [
      {
        "name": "buf",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1011,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "initParam",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~initParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1032,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "normalizePartsOpacityGroup",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~normalizePartsOpacityGroup",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1055,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "partsGroup",
        "types": [
          "*"
        ]
      },
      {
        "name": "deltaTimeSec",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "copyOpacityOtherParts",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~copyOpacityOtherParts",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1109,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "partsGroup",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "initIndex",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~initIndex",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1138,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "setPoint",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setPoint",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1166,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "getX",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1174,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "getY",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1181,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 196,
    "kind": "function",
    "name": "update",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~update",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1188,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "adjustTranslate",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~adjustTranslate",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1252,
    "undocument": true,
    "params": [
      {
        "name": "shiftX",
        "types": [
          "*"
        ]
      },
      {
        "name": "shiftY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "adjustScale",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~adjustScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1272,
    "undocument": true,
    "params": [
      {
        "name": "cx",
        "types": [
          "*"
        ]
      },
      {
        "name": "cy",
        "types": [
          "*"
        ]
      },
      {
        "name": "scale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "setScreenRect",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setScreenRect",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1294,
    "undocument": true,
    "params": [
      {
        "name": "left",
        "types": [
          "*"
        ]
      },
      {
        "name": "right",
        "types": [
          "*"
        ]
      },
      {
        "name": "bottom",
        "types": [
          "*"
        ]
      },
      {
        "name": "top",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "setMaxScreenRect",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setMaxScreenRect",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1304,
    "undocument": true,
    "params": [
      {
        "name": "left",
        "types": [
          "*"
        ]
      },
      {
        "name": "right",
        "types": [
          "*"
        ]
      },
      {
        "name": "bottom",
        "types": [
          "*"
        ]
      },
      {
        "name": "top",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "getScreenLeft",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getScreenLeft",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1314,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 202,
    "kind": "function",
    "name": "getScreenRight",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getScreenRight",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1321,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "getScreenBottom",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getScreenBottom",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1328,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 204,
    "kind": "function",
    "name": "getScreenTop",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getScreenTop",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1335,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "getMaxLeft",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getMaxLeft",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1342,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "getMaxRight",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getMaxRight",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1349,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "getMaxBottom",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getMaxBottom",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1356,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "getMaxTop",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getMaxTop",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1363,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "getPlatformManager",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~getPlatformManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1381,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "function",
    "name": "setPlatformManager",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~setPlatformManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1388,
    "undocument": true,
    "params": [
      {
        "name": "platformManager",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "L2DTargetPoint",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DTargetPoint",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DTargetPoint}",
    "description": null,
    "lineNumber": 1149,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "Live2DFramework",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~Live2DFramework",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{Live2DFramework}",
    "description": null,
    "lineNumber": 1372,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "L2DViewMatrix",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DViewMatrix",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DViewMatrix}",
    "description": null,
    "lineNumber": 1235,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "L2DPose",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DPose",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DPose}",
    "description": null,
    "lineNumber": 968,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "L2DPartsParam",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DPartsParam",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DPartsParam}",
    "description": null,
    "lineNumber": 1128,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 216,
    "kind": "function",
    "name": "L2DPhysics",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DPhysics",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DPhysics}",
    "description": null,
    "lineNumber": 883,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "L2DMotionManager",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DMotionManager",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DMotionManager}",
    "description": null,
    "lineNumber": 806,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 218,
    "kind": "function",
    "name": "L2DModelMatrix",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DModelMatrix",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DModelMatrix}",
    "description": null,
    "lineNumber": 698,
    "undocument": true,
    "params": [
      {
        "name": "w",
        "types": [
          "*"
        ]
      },
      {
        "name": "h",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "L2DMatrix44",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DMatrix44",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DMatrix44}",
    "description": null,
    "lineNumber": 550,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "EYE_STATE",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~EYE_STATE",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{EYE_STATE}",
    "description": null,
    "lineNumber": 537,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 221,
    "kind": "function",
    "name": "L2DEyeBlink",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DEyeBlink",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DEyeBlink}",
    "description": null,
    "lineNumber": 444,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "L2DExpressionParam",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DExpressionParam",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DExpressionParam}",
    "description": null,
    "lineNumber": 433,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "L2DExpressionMotion",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DExpressionMotion",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DExpressionMotion}",
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "L2DBaseModel",
    "memberof": "src/lib/Live2DFramework.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/Live2DFramework.js~L2DBaseModel",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/lib/Live2DFramework.js",
    "importStyle": "{L2DBaseModel}",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "src/lib/_Live2DFramework.official.js",
    "content": "/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n//============================================================\r\n//============================================================\r\n//  class L2DBaseModel         \r\n//============================================================\r\n//============================================================\r\nfunction L2DBaseModel()\r\n{\r\n    this.live2DModel     = null; // ALive2DModel\r\n    this.modelMatrix     = null; // L2DModelMatrix\r\n    this.eyeBlink        = null; // L2DEyeBlink\r\n    this.physics         = null; // L2DPhysics\r\n    this.pose            = null; // L2DPose\r\n    this.debugMode       = false;\r\n    this.initialized     = false;\r\n    this.updating        = false;\r\n    this.alpha           = 1;\r\n    this.accAlpha        = 0;\r\n    this.lipSync         = false; \r\n    this.lipSyncValue    = 0;     \r\n    this.accelX          = 0;\r\n    this.accelY          = 0;\r\n    this.accelZ          = 0;\r\n    this.dragX           = 0;\r\n    this.dragY           = 0;\r\n    this.startTimeMSec   = null;\r\n    this.mainMotionManager = new L2DMotionManager(); //L2DMotionManager\r\n    this.expressionManager = new L2DMotionManager(); //L2DMotionManager\r\n    this.motions = {};\r\n    this.expressions = {};\r\n    \r\n    this.isTexLoaded = false;\r\n}\r\n\r\nvar texCounter = 0;\r\n\r\n//============================================================\r\n//    L2DBaseModel # getModelMatrix()\r\n//============================================================\r\nL2DBaseModel.prototype.getModelMatrix  = function()\r\n{\r\n    return this.modelMatrix;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setAlpha()\r\n//============================================================\r\nL2DBaseModel.prototype.setAlpha        = function(a/*float*/)\r\n{\r\n    if( a > 0.999 ) a = 1;\r\n    if( a < 0.001 ) a = 0;\r\n    this.alpha = a;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getAlpha()\r\n//============================================================\r\nL2DBaseModel.prototype.getAlpha        = function()\r\n{\r\n    return this.alpha;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # isInitialized()\r\n//============================================================\r\nL2DBaseModel.prototype.isInitialized   = function()\r\n{\r\n    return this.initialized;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setInitialized()\r\n//============================================================\r\nL2DBaseModel.prototype.setInitialized  = function( v/*boolean*/)\r\n{\r\n    this.initialized = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # isUpdating()\r\n//============================================================\r\nL2DBaseModel.prototype.isUpdating      = function()\r\n{\r\n    return this.updating;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setUpdating()\r\n//============================================================\r\nL2DBaseModel.prototype.setUpdating     = function(v/*boolean*/)\r\n{\r\n    this.updating = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getLive2DModel()\r\n//============================================================\r\nL2DBaseModel.prototype.getLive2DModel  = function()\r\n{\r\n    return this.live2DModel;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setLipSync()\r\n//============================================================\r\nL2DBaseModel.prototype.setLipSync      = function(v/*boolean*/)\r\n{\r\n    this.lipSync = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setLipSyncValue()\r\n//============================================================\r\nL2DBaseModel.prototype.setLipSyncValue = function(v/*float*/)\r\n{\r\n    this.lipSyncValue = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setAccel()\r\n//============================================================\r\nL2DBaseModel.prototype.setAccel        = function(x/*float*/, y/*float*/, z/*float*/)\r\n{\r\n    this.accelX = x;\r\n    this.accelY = y;\r\n    this.accelZ = z;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # setDrag()\r\n//============================================================\r\nL2DBaseModel.prototype.setDrag         = function(x/*float*/, y/*float*/)\r\n{\r\n    this.dragX = x;\r\n    this.dragY = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getMainMotionManager()\r\n//============================================================\r\nL2DBaseModel.prototype.getMainMotionManager = function()\r\n{\r\n    return this.mainMotionManager;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # getExpressionManager()\r\n//============================================================\r\nL2DBaseModel.prototype.getExpressionManager = function()\r\n{\r\n    return this.expressionManager;\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadModelData()\r\n//============================================================\r\nL2DBaseModel.prototype.loadModelData   = function(path/*String*/, callback)\r\n{   \r\n    /*\r\n    if( this.live2DModel != null ) {\r\n        this.live2DModel.deleteTextures();\r\n    }\r\n    */\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if( this.debugMode ) pm.log(\"Load model : \" + path);\r\n\r\n    var thisRef = this;\r\n    pm.loadLive2DModel(path, function(l2dModel) {\r\n        thisRef.live2DModel = l2dModel;\r\n        thisRef.live2DModel.saveParam();\r\n        \r\n        var _err = Live2D.getError();\r\n\r\n        if( _err != 0 ) {\r\n            console.error(\"Error : Failed to loadModelData().\");\r\n            return;\r\n        }\r\n        \r\n        thisRef.modelMatrix = new L2DModelMatrix(\r\n            thisRef.live2DModel.getCanvasWidth(),\r\n            thisRef.live2DModel.getCanvasHeight()); //L2DModelMatrix\r\n        thisRef.modelMatrix.setWidth(2);\r\n        thisRef.modelMatrix.setCenterPosition(0, 0);\r\n        \r\n        callback(thisRef.live2DModel);\r\n    });\r\n}\r\n\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadTexture()\r\n//============================================================\r\nL2DBaseModel.prototype.loadTexture     = function(no/*int*/, path/*String*/, callback)\r\n{\r\n    texCounter++;\r\n \r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    \r\n    if( this.debugMode ) pm.log(\"Load Texture : \" + path);\r\n    \r\n    var thisRef = this;\r\n    pm.loadTexture(this.live2DModel , no , path, function(){\r\n        texCounter--;\r\n        if(texCounter == 0) thisRef.isTexLoaded = true;\r\n        if (typeof callback == \"function\") callback();\r\n    });\r\n    \r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadMotion()\r\n//============================================================\r\nL2DBaseModel.prototype.loadMotion      = function(name/*String*/, path /*String*/, callback)\r\n{    \r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    \r\n    if(this.debugMode) pm.log(\"Load Motion : \" + path);\r\n    \r\n    var motion = null; //Live2DMotion\r\n    \r\n    var thisRef = this;\r\n    pm.loadBytes(path, function(buf) {\r\n        motion = Live2DMotion.loadMotion(buf);\r\n        if( name != null ) {\r\n            thisRef.motions[name] = motion;\r\n        }\r\n        callback(motion);\r\n    });\r\n    \r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadExpression()\r\n//============================================================\r\nL2DBaseModel.prototype.loadExpression  = function(name/*String*/, path /*String*/, callback)\r\n{\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    \r\n    if( this.debugMode ) pm.log(\"Load Expression : \" + path);\r\n    \r\n    var thisRef = this;\r\n    pm.loadBytes(path, function(buf) {\r\n        if(name != null) {\r\n            thisRef.expressions[name] = L2DExpressionMotion.loadJson(buf);\r\n        }\r\n        if (typeof callback == \"function\") callback();\r\n    });\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadPose()\r\n//============================================================\r\nL2DBaseModel.prototype.loadPose = function( path /*String*/, callback )\r\n{\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if( this.debugMode ) pm.log(\"Load Pose : \" + path);\r\n    var thisRef = this;\r\n    try {\r\n        pm.loadBytes(path, function(buf) {\r\n            thisRef.pose = L2DPose.load(buf);\r\n            if (typeof callback == \"function\") callback();\r\n        });\r\n    }\r\n    catch(e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # loadPhysics()\r\n//============================================================\r\nL2DBaseModel.prototype.loadPhysics     = function(path/*String*/)\r\n{\r\n    var pm = Live2DFramework.getPlatformManager(); //IPlatformManager\r\n    if( this.debugMode ) pm.log(\"Load Physics : \" + path);\r\n    var thisRef = this;\r\n    try {\r\n        pm.loadBytes(path, function(buf) {\r\n            thisRef.physics = L2DPhysics.load(buf);\r\n        });\r\n    }\r\n    catch(e){\r\n        console.warn(e);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DBaseModel # hitTestSimple()\r\n//============================================================\r\nL2DBaseModel.prototype.hitTestSimple = function(drawID, testX, testY)\r\n{   \r\n    var drawIndex = this.live2DModel.getDrawDataIndex(drawID);\r\n    \r\n    if( drawIndex < 0 ) return false;\r\n    \r\n    var points = this.live2DModel.getTransformedPoints(drawIndex);\r\n    var left = this.live2DModel.getCanvasWidth();\r\n    var right = 0;\r\n    var top = this.live2DModel.getCanvasHeight();\r\n    var bottom = 0;\r\n    \r\n    for( var j = 0; j < points.length; j = j + 2 ) {\r\n        var x = points[j];\r\n        var y = points[j + 1];\r\n\r\n        if( x < left ) left = x;\r\n        if( x > right ) right = x;\r\n        if( y < top ) top = y;\r\n        if( y > bottom ) bottom = y;\r\n    }\r\n    var tx = this.modelMatrix.invertTransformX(testX);\r\n    var ty = this.modelMatrix.invertTransformY(testY);\r\n    \r\n    return ( left <= tx && tx <= right && top <= ty && ty <= bottom );\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DExpressionMotion  extends     AMotion\r\n//============================================================\r\n//============================================================\r\nfunction L2DExpressionMotion()\r\n{\r\n    AMotion.prototype.constructor.call(this);\r\n    this.paramList = new Array(); //ArrayList<L2DExpressionParam>\r\n}\r\n\r\nL2DExpressionMotion.prototype = new AMotion(); // L2DExpressionMotion extends AMotion\r\n\r\n//============================================================\r\nL2DExpressionMotion.EXPRESSION_DEFAULT  = \"DEFAULT\";\r\nL2DExpressionMotion.TYPE_SET            = 0;\r\nL2DExpressionMotion.TYPE_ADD            = 1;\r\nL2DExpressionMotion.TYPE_MULT           = 2;\r\n\r\n//============================================================\r\n//    static L2DExpressionMotion.loadJson()\r\n//============================================================\r\nL2DExpressionMotion.loadJson        = function(buf)\r\n{    \r\n    var ret = new L2DExpressionMotion();\r\n    \r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n\r\n    ret.setFadeIn(parseInt(json.fade_in) > 0 ? parseInt(json.fade_in) : 1000);\r\n    ret.setFadeOut(parseInt(json.fade_out) > 0 ? parseInt(json.fade_out) : 1000);\r\n    \r\n    if(json.params == null) {\r\n        return ret;\r\n    }\r\n    \r\n    var params = json.params;\r\n    var paramNum = params.length;\r\n    ret.paramList = []; //ArrayList<L2DExpressionParam>\r\n    for( var i = 0; i < paramNum; i++) {\r\n        var param = params[i];\r\n        var paramID = param.id.toString();\r\n        var value = parseFloat(param.val);\r\n        var calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        var calc = param.calc != null ? param.calc.toString() : \"add\";\r\n        if(calc === \"add\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        }\r\n        else if(calc === \"mult\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_MULT;\r\n        }\r\n        else if(calc === \"set\") {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_SET;\r\n        }\r\n        else {\r\n            calcTypeInt = L2DExpressionMotion.TYPE_ADD;\r\n        }\r\n        if(calcTypeInt == L2DExpressionMotion.TYPE_ADD) {\r\n            var defaultValue = param.def == null ? 0 : parseFloat(param.def);\r\n            value = value - defaultValue;\r\n        }\r\n        else if(calcTypeInt == L2DExpressionMotion.TYPE_MULT) {\r\n            var defaultValue = param.def == null ? 1 : parseFloat(param.def);\r\n            if(defaultValue == 0 ) defaultValue = 1;\r\n            value = value / defaultValue;\r\n        }\r\n        \r\n        var item = new L2DExpressionParam(  );\r\n        item.id = paramID;\r\n        item.type = calcTypeInt;\r\n        item.value = value;\r\n        \r\n        ret.paramList.push(item);\r\n    }\r\n    \r\n     return ret;\r\n}\r\n\r\n\r\n//============================================================\r\n//    L2DExpressionMotion # updateParamExe()\r\n//============================================================\r\nL2DExpressionMotion.prototype.updateParamExe  = function(model /*ALive2DModel*/, timeMSec/*long*/ ,weight /*float*/ ,motionQueueEnt /*MotionQueueEnt*/)\r\n{\r\n    for(var i = this.paramList.length - 1; i >= 0; --i) {\r\n        var param = this.paramList[i]; //L2DExpressionParam\r\n        // if (!param || !param.type) continue;\r\n        if(param.type == L2DExpressionMotion.TYPE_ADD) {\r\n            model.addToParamFloat(param.id, param.value, weight);\r\n        }\r\n        else if(param.type == L2DExpressionMotion.TYPE_MULT) {\r\n            model.multParamFloat(param.id, param.value, weight);\r\n        }\r\n        else if(param.type == L2DExpressionMotion.TYPE_SET) {            \r\n            model.setParamFloat(param.id, param.value, weight);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DExpressionParam   \r\n//============================================================\r\n//============================================================\r\nfunction L2DExpressionParam()\r\n{\r\n    this.id              = \"\";\r\n    this.type            = -1;\r\n    this.value           = null;\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DEyeBlink          \r\n//============================================================\r\n//============================================================\r\nfunction L2DEyeBlink()\r\n{\r\n    this.nextBlinkTime   = null /* TODO NOT INIT */; // \r\n    this.stateStartTime  = null /* TODO NOT INIT */; // \r\n    this.blinkIntervalMsec = null /* TODO NOT INIT */; // \r\n    this.eyeState = EYE_STATE.STATE_FIRST;\r\n    this.blinkIntervalMsec = 4000;\r\n    this.closingMotionMsec = 100;\r\n    this.closedMotionMsec = 50;\r\n    this.openingMotionMsec = 150;\r\n    this.closeIfZero = true;\r\n    this.eyeID_L = \"PARAM_EYE_L_OPEN\";\r\n    this.eyeID_R = \"PARAM_EYE_R_OPEN\";\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # calcNextBlink()\r\n//============================================================\r\nL2DEyeBlink.prototype.calcNextBlink   = function()\r\n{\r\n    var time /*long*/ = UtSystem.getUserTimeMSec();\r\n    var r /*Number*/ = Math.random();\r\n    return  /*(long)*/ (time + r * (2 * this.blinkIntervalMsec - 1));\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # setInterval()\r\n//============================================================\r\nL2DEyeBlink.prototype.setInterval     = function(blinkIntervalMsec /*int*/)\r\n{\r\n    this.blinkIntervalMsec = blinkIntervalMsec;\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # setEyeMotion()\r\n//============================================================\r\nL2DEyeBlink.prototype.setEyeMotion    = function(closingMotionMsec/*int*/ , closedMotionMsec/*int*/ , openingMotionMsec/*int*/)\r\n{\r\n    this.closingMotionMsec = closingMotionMsec;\r\n    this.closedMotionMsec = closedMotionMsec;\r\n    this.openingMotionMsec = openingMotionMsec;\r\n}\r\n\r\n//============================================================\r\n//    L2DEyeBlink # updateParam()\r\n//============================================================\r\nL2DEyeBlink.prototype.updateParam     = function(model/*ALive2DModel*/)\r\n{\r\n    var time /*:long*/ = UtSystem.getUserTimeMSec();\r\n    var eyeParamValue /*:Number*/;\r\n    var t /*:Number*/ = 0;\r\n    switch(this.eyeState){\r\n    case EYE_STATE.STATE_CLOSING:\r\n        t = (time - this.stateStartTime) / this.closingMotionMsec;\r\n        if(t >= 1) {\r\n            t = 1;\r\n            this.eyeState = EYE_STATE.STATE_CLOSED;\r\n            this.stateStartTime = time;\r\n        }\r\n        eyeParamValue = 1 - t;\r\n        break;\r\n    case EYE_STATE.STATE_CLOSED:\r\n        t = (time - this.stateStartTime) / this.closedMotionMsec;\r\n        if(t >= 1) {\r\n            this.eyeState = EYE_STATE.STATE_OPENING;\r\n            this.stateStartTime = time;\r\n        }\r\n        eyeParamValue = 0;\r\n        break;\r\n    case EYE_STATE.STATE_OPENING:\r\n        t = (time - this.stateStartTime) / this.openingMotionMsec;\r\n        if(t >= 1) {\r\n            t = 1;\r\n            this.eyeState = EYE_STATE.STATE_INTERVAL;\r\n            this.nextBlinkTime = this.calcNextBlink();\r\n        }\r\n        eyeParamValue = t;\r\n        break;\r\n    case EYE_STATE.STATE_INTERVAL:\r\n        if(this.nextBlinkTime < time) {\r\n            this.eyeState = EYE_STATE.STATE_CLOSING;\r\n            this.stateStartTime = time;\r\n        }\r\n        eyeParamValue = 1;\r\n        break;\r\n    case EYE_STATE.STATE_FIRST:\r\n    default:\r\n        this.eyeState = EYE_STATE.STATE_INTERVAL;\r\n        this.nextBlinkTime = this.calcNextBlink();\r\n        eyeParamValue = 1;\r\n        break;\r\n    }\r\n    if(!this.closeIfZero) eyeParamValue = -eyeParamValue;\r\n    model.setParamFloat(this.eyeID_L , eyeParamValue);\r\n    model.setParamFloat(this.eyeID_R , eyeParamValue);\r\n}\r\n\r\n//== enum EYE_STATE ==\r\nvar EYE_STATE = function(){};\r\n\r\nEYE_STATE.STATE_FIRST          = \"STATE_FIRST\"\r\nEYE_STATE.STATE_INTERVAL       = \"STATE_INTERVAL\"\r\nEYE_STATE.STATE_CLOSING        = \"STATE_CLOSING\"\r\nEYE_STATE.STATE_CLOSED         = \"STATE_CLOSED\"\r\nEYE_STATE.STATE_OPENING        = \"STATE_OPENING\"\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DMatrix44          \r\n//============================================================\r\n//============================================================\r\nfunction L2DMatrix44()\r\n{\r\n    this.tr              = new Float32Array(16); // \r\n    this.identity();\r\n}\r\n\r\n//============================================================\r\n//    static L2DMatrix44.mul()\r\n//============================================================\r\nL2DMatrix44.mul             = function( a/*float[]*/, b/*float[]*/, dst/*float[]*/ )\r\n{\r\n    var c = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\r\n    var n = 4;\r\n    var i, j, k;\r\n    for( i = 0; i < n; i++ ) {\r\n        for( j = 0; j < n; j++ ) {\r\n            for( k = 0; k < n; k++ ) {\r\n                c[i + j * 4] += a[i + k * 4] * b[k + j * 4];\r\n            }\r\n        }\r\n    }\r\n    for( i = 0; i < 16; i++ ) {\r\n        dst[i] = c[i];\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # identity()\r\n//============================================================\r\nL2DMatrix44.prototype.identity        = function()\r\n{\r\n    for( var i/*:int*/ = 0; i < 16; i++ ) \r\n        this.tr[i] = ( ( i % 5 ) == 0 ) ? 1 : 0;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getArray()\r\n//============================================================\r\nL2DMatrix44.prototype.getArray        = function()\r\n{\r\n    return this.tr;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getCopyMatrix()\r\n//============================================================\r\nL2DMatrix44.prototype.getCopyMatrix   = function()\r\n{\r\n    return new Float32Array(this.tr); // this.tr.clone();\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # setMatrix()\r\n//============================================================\r\nL2DMatrix44.prototype.setMatrix       = function( tr/*float[]*/ )\r\n{\r\n    if( this.tr == null || this.tr.length != this.tr.length ) return ;\r\n    for( var i/*:int*/ = 0; i < 16; i++ ) this.tr[i] = tr[i];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getScaleX()\r\n//============================================================\r\nL2DMatrix44.prototype.getScaleX       = function()\r\n{\r\n    return this.tr[0];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # getScaleY()\r\n//============================================================\r\nL2DMatrix44.prototype.getScaleY       = function()\r\n{\r\n    return this.tr[5];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # transformX()\r\n//============================================================\r\nL2DMatrix44.prototype.transformX      = function( src/*float*/ )\r\n{\r\n    return this.tr[0] * src + this.tr[12];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # transformY()\r\n//============================================================\r\nL2DMatrix44.prototype.transformY      = function( src/*float*/ )\r\n{\r\n    return this.tr[5] * src + this.tr[13];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # invertTransformX()\r\n//============================================================\r\nL2DMatrix44.prototype.invertTransformX = function( src/*float*/ )\r\n{\r\n    return ( src - this.tr[12] ) / this.tr[0];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # invertTransformY()\r\n//============================================================\r\nL2DMatrix44.prototype.invertTransformY = function( src/*float*/ )\r\n{\r\n    return ( src - this.tr[13] ) / this.tr[5];\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # multTranslate()\r\n//============================================================\r\nL2DMatrix44.prototype.multTranslate   = function( shiftX/*float*/, shiftY/*float*/ )\r\n{\r\n    var tr1 = [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, shiftX, shiftY, 0, 1 ];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translate()\r\n//============================================================\r\nL2DMatrix44.prototype.translate       = function( x/*float*/, y/*float*/ )\r\n{\r\n    this.tr[12] = x;\r\n    this.tr[13] = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translateX()\r\n//============================================================\r\nL2DMatrix44.prototype.translateX      = function( x/*float*/ )\r\n{\r\n    this.tr[12] = x;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # translateY()\r\n//============================================================\r\nL2DMatrix44.prototype.translateY      = function( y/*float*/ )\r\n{\r\n    this.tr[13] = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # multScale()\r\n//============================================================\r\nL2DMatrix44.prototype.multScale       = function( scaleX/*float*/, scaleY/*float*/ )\r\n{\r\n    var tr1 = [scaleX, 0, 0, 0, 0, scaleY, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DMatrix44 # scale()\r\n//============================================================\r\nL2DMatrix44.prototype.scale           = function( scaleX/*float*/, scaleY/*float*/ )\r\n{\r\n    this.tr[0] = scaleX;\r\n    this.tr[5] = scaleY;\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DModelMatrix       extends     L2DMatrix44\r\n//============================================================\r\n//============================================================\r\nfunction L2DModelMatrix(w/*float*/, h/*float*/){\r\n    L2DMatrix44.prototype.constructor.call(this);\r\n    this.width = w;\r\n    this.height = h;\r\n}\r\n\r\n//L2DModelMatrix extends L2DMatrix44\r\nL2DModelMatrix.prototype = new L2DMatrix44(); \r\n\r\n//============================================================\r\n//    L2DModelMatrix # setPosition()\r\n//============================================================\r\nL2DModelMatrix.prototype.setPosition     = function(x/*float*/, y/*float*/)\r\n{\r\n    this.translate(x, y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setCenterPosition()\r\n//============================================================\r\nL2DModelMatrix.prototype.setCenterPosition = function(x/*float*/, y/*float*/)\r\n{\r\n    var w = this.width * this.getScaleX();\r\n    var h = this.height * this.getScaleY();\r\n    this.translate(x - w / 2, y - h / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # top()\r\n//============================================================\r\nL2DModelMatrix.prototype.top             = function(y/*float*/)\r\n{\r\n    this.setY(y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # bottom()\r\n//============================================================\r\nL2DModelMatrix.prototype.bottom          = function(y/*float*/)\r\n{\r\n    var h = this.height * this.getScaleY();\r\n    this.translateY(y - h);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # left()\r\n//============================================================\r\nL2DModelMatrix.prototype.left            = function(x/*float*/)\r\n{\r\n    this.setX(x);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # right()\r\n//============================================================\r\nL2DModelMatrix.prototype.right           = function(x/*float*/)\r\n{\r\n    var w = this.width * this.getScaleX();\r\n    this.translateX(x - w);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # centerX()\r\n//============================================================\r\nL2DModelMatrix.prototype.centerX         = function(x/*float*/)\r\n{\r\n    var w = this.width * this.getScaleX();\r\n    this.translateX(x - w / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # centerY()\r\n//============================================================\r\nL2DModelMatrix.prototype.centerY         = function(y/*float*/)\r\n{\r\n    var h = this.height * this.getScaleY();\r\n    this.translateY(y - h / 2);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setX()\r\n//============================================================\r\nL2DModelMatrix.prototype.setX            = function(x/*float*/)\r\n{\r\n    this.translateX(x);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setY()\r\n//============================================================\r\nL2DModelMatrix.prototype.setY            = function(y/*float*/)\r\n{\r\n    this.translateY(y);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setHeight()\r\n//============================================================\r\nL2DModelMatrix.prototype.setHeight       = function(h/*float*/)\r\n{\r\n    var scaleX = h / this.height;\r\n    var scaleY = -scaleX;\r\n    this.scale(scaleX, scaleY);\r\n}\r\n\r\n//============================================================\r\n//    L2DModelMatrix # setWidth()\r\n//============================================================\r\nL2DModelMatrix.prototype.setWidth        = function(w/*float*/)\r\n{\r\n    var scaleX = w / this.width;\r\n    var scaleY = -scaleX;\r\n    this.scale(scaleX, scaleY);\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DMotionManager     extends     MotionQueueManager\r\n//============================================================\r\n//============================================================\r\nfunction L2DMotionManager()\r\n{\r\n    MotionQueueManager.prototype.constructor.call(this);\r\n    this.currentPriority = null;\r\n    this.reservePriority = null;\r\n    \r\n    this.super = MotionQueueManager.prototype;\r\n}\r\n\r\n\r\nL2DMotionManager.prototype = new MotionQueueManager();\r\n\r\n//============================================================\r\n//    L2DMotionManager # getCurrentPriority()\r\n//============================================================\r\nL2DMotionManager.prototype.getCurrentPriority = function()\r\n{\r\n    return this.currentPriority;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # getReservePriority()\r\n//============================================================\r\nL2DMotionManager.prototype.getReservePriority = function()\r\n{\r\n    return this.reservePriority;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # reserveMotion()\r\n//============================================================\r\nL2DMotionManager.prototype.reserveMotion   = function(priority/*int*/)\r\n{\r\n    if(this.reservePriority >= priority) {\r\n        return false;\r\n    }\r\n    if(this.currentPriority >= priority) {\r\n        return false;\r\n    }\r\n    \r\n    this.reservePriority = priority;\r\n    \r\n    return true;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # setReservePriority()\r\n//============================================================\r\nL2DMotionManager.prototype.setReservePriority = function(val/*int*/)\r\n{\r\n    this.reservePriority = val;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # updateParam()\r\n//============================================================\r\nL2DMotionManager.prototype.updateParam     = function(model/*ALive2DModel*/)\r\n{\r\n    var updated = MotionQueueManager.prototype.updateParam.call(this, model);\r\n    \r\n    if(this.isFinished()) {\r\n        this.currentPriority = 0;\r\n    }\r\n    \r\n    return updated;\r\n}\r\n\r\n//============================================================\r\n//    L2DMotionManager # startMotionPrio()\r\n//============================================================\r\nL2DMotionManager.prototype.startMotionPrio = function(motion/*AMotion*/, priority/*int*/)\r\n{\r\n    if(priority == this.reservePriority) {\r\n        this.reservePriority = 0;\r\n    }\r\n    this.currentPriority = priority;\r\n    return this.startMotion(motion, false);\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPhysics           \r\n//============================================================\r\n//============================================================\r\nfunction L2DPhysics()\r\n{ \r\n    this.physicsList = new Array(); //ArrayList<PhysicsHair>\r\n    this.startTimeMSec = UtSystem.getUserTimeMSec();\r\n}\r\n\r\n//============================================================\r\n//    static L2DPhysics.load()\r\n//============================================================\r\nL2DPhysics.load            = function(buf /*byte[]*/ )\r\n{\r\n    var ret = new L2DPhysics(); //L2DPhysicsL2DPhysics\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n    var params = json.physics_hair;\r\n    var paramNum = params.length;\r\n    for(var i = 0; i < paramNum; i++) {\r\n        var param = params[i]; //Value\r\n        var physics = new PhysicsHair(); //PhysicsHairPhysicsHair\r\n        var setup = param.setup; //Value\r\n        var length = parseFloat(setup.length);\r\n        var resist = parseFloat(setup.regist);\r\n        var mass = parseFloat(setup.mass);\r\n        physics.setup(length, resist, mass);\r\n        var srcList = param.src; //Value\r\n        var srcNum = srcList.length;\r\n        for(var j = 0; j < srcNum; j++) {\r\n            var src = srcList[j]; //Value\r\n            var id = src.id; //String\r\n            var type = PhysicsHair.Src.SRC_TO_X;\r\n            var typeStr = src.ptype; //String\r\n            if(typeStr === \"x\") {\r\n                type = PhysicsHair.Src.SRC_TO_X;\r\n            }\r\n            else if(typeStr === \"y\") {\r\n                type = PhysicsHair.Src.SRC_TO_Y;\r\n            }\r\n            else if(typeStr === \"angle\") {\r\n                type = PhysicsHair.Src.SRC_TO_G_ANGLE;\r\n            }\r\n            else {\r\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Src\");\r\n            }\r\n            var scale = parseFloat(src.scale);\r\n            var weight = parseFloat(src.weight);\r\n            physics.addSrcParam(type, id, scale, weight);\r\n        }\r\n        var targetList = param.targets; //Value\r\n        var targetNum = targetList.length;\r\n        for(var j = 0; j < targetNum; j++) {\r\n            var target = targetList[j]; //Value\r\n            var id = target.id; //String\r\n            var type = PhysicsHair.Target.TARGET_FROM_ANGLE;\r\n            var typeStr = target.ptype; //String\r\n            if(typeStr === \"angle\") {\r\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE;\r\n            }\r\n            else if(typeStr === \"angle_v\") {\r\n                type = PhysicsHair.Target.TARGET_FROM_ANGLE_V;\r\n            }\r\n            else {\r\n                UtDebug.error(\"live2d\", \"Invalid parameter:PhysicsHair.Target\");\r\n            }\r\n            var scale = parseFloat(target.scale);\r\n            var weight = parseFloat(target.weight);\r\n            physics.addTargetParam(type, id, scale, weight);\r\n        }\r\n        ret.physicsList.push(physics);\r\n    }\r\n    return ret;\r\n}\r\n\r\n//============================================================\r\n//    L2DPhysics # updateParam()\r\n//============================================================\r\nL2DPhysics.prototype.updateParam     = function(model/*ALive2DModel*/)\r\n{\r\n    var timeMSec = UtSystem.getUserTimeMSec() - this.startTimeMSec;\r\n    for(var i = 0; i < this.physicsList.length; i++) {\r\n        this.physicsList[i].update(model, timeMSec);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPose              \r\n//============================================================\r\n//============================================================\r\nfunction L2DPose()\r\n{\r\n    this.lastTime        = 0;\r\n    this.lastModel       = null; //ALive2DModel\r\n    this.partsGroups = new Array(); //ArrayList<L2DPartsParam[]>\r\n}\r\n\r\n\r\n//============================================================\r\n//    static L2DPose.load()\r\n//============================================================\r\nL2DPose.load            = function(buf/*byte[]*/)\r\n{    \r\n    var ret = new L2DPose(); //L2DPose\r\n    var pm = Live2DFramework.getPlatformManager();\r\n    var json = pm.jsonParseFromBytes(buf);\r\n    var poseListInfo = json.parts_visible; //Value\r\n    var poseNum = poseListInfo.length;\r\n    for(var i_pose = 0; i_pose < poseNum; i_pose++) {\r\n        var poseInfo = poseListInfo[i_pose]; //Value\r\n        var idListInfo = poseInfo.group; //Value\r\n        var idNum = idListInfo.length;\r\n        var partsGroup/*L2DPartsParam*/ = new Array();\r\n        for(var i_group = 0; i_group < idNum; i_group++) {\r\n            var partsInfo = idListInfo[i_group]; //Value\r\n            var parts = new L2DPartsParam(partsInfo.id); //L2DPartsParamL2DPartsParam\r\n            partsGroup[i_group] = parts;\r\n            if(partsInfo.link == null) continue;\r\n            var linkListInfo = partsInfo.link; //Value\r\n            var linkNum = linkListInfo.length;\r\n            parts.link = new Array(); //ArrayList<L2DPartsParam>\r\n            for(var i_link = 0; i_link < linkNum; i_link++) {\r\n                var linkParts = new L2DPartsParam(linkListInfo[i_link]); //L2DPartsParamL2DPartsParam\r\n                parts.link.push(linkParts);\r\n            }\r\n        }\r\n        ret.partsGroups.push(partsGroup);\r\n    }\r\n    \r\n    return ret;\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # updateParam()\r\n//============================================================\r\nL2DPose.prototype.updateParam     = function(model/*ALive2DModel*/)\r\n{\r\n    if(model == null) return ;\r\n    \r\n    if(!(model == this.lastModel)) {\r\n        this.initParam(model);\r\n    }\r\n    this.lastModel = model;\r\n    \r\n    var curTime = UtSystem.getUserTimeMSec();\r\n    var deltaTimeSec = ((this.lastTime == 0) ? 0 : (curTime - this.lastTime) / 1000.0);\r\n    this.lastTime = curTime;\r\n    if(deltaTimeSec < 0) deltaTimeSec = 0;\r\n    for(var i = 0; i < this.partsGroups.length; i++) {\r\n        this.normalizePartsOpacityGroup(model, this.partsGroups[i], deltaTimeSec);\r\n        this.copyOpacityOtherParts(model, this.partsGroups[i]);\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # initParam()\r\n//============================================================\r\nL2DPose.prototype.initParam       = function(model/*ALive2DModel*/)\r\n{\r\n    if(model == null) return ;\r\n    for(var i = 0; i < this.partsGroups.length; i++) {\r\n        var partsGroup = this.partsGroups[i]; //L2DPartsParam\r\n        for(var j = 0; j < partsGroup.length; j++) {\r\n            partsGroup[j].initIndex(model);\r\n            var partsIndex = partsGroup[j].partsIndex;\r\n            var paramIndex = partsGroup[j].paramIndex;\r\n            if(partsIndex < 0) continue;\r\n            var v/*:Boolean*/ = (model.getParamFloat(paramIndex) != 0);\r\n            model.setPartsOpacity(partsIndex, (v ? 1.0 : 0.0));\r\n            model.setParamFloat(paramIndex, (v ? 1.0 : 0.0));\r\n            if(partsGroup[j].link == null) continue;\r\n            for(var k = 0; k < partsGroup[j].link.length; k++) {\r\n                partsGroup[j].link[k].initIndex(model);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # normalizePartsOpacityGroup()\r\n//============================================================\r\nL2DPose.prototype.normalizePartsOpacityGroup = function(model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/, deltaTimeSec/*float*/)\r\n{\r\n    var visibleParts = -1;\r\n    var visibleOpacity = 1.0;\r\n    var CLEAR_TIME_SEC = 0.5;\r\n    var phi = 0.5;\r\n    var maxBackOpacity = 0.15;\r\n    for(var i = 0; i < partsGroup.length; i++) {\r\n        var partsIndex = partsGroup[i].partsIndex;\r\n        var paramIndex = partsGroup[i].paramIndex;\r\n        if(partsIndex < 0) continue;if(model.getParamFloat(paramIndex) != 0) {\r\n            if(visibleParts >= 0) {\r\n                break;\r\n            }\r\n            visibleParts = i;\r\n            visibleOpacity = model.getPartsOpacity(partsIndex);\r\n            visibleOpacity += deltaTimeSec / CLEAR_TIME_SEC;\r\n            if(visibleOpacity > 1) {\r\n                visibleOpacity = 1;\r\n            }\r\n        }\r\n    }\r\n    if(visibleParts < 0) {\r\n        visibleParts = 0;\r\n        visibleOpacity = 1;\r\n    }\r\n    for(var i = 0; i < partsGroup.length; i++) {\r\n        var partsIndex = partsGroup[i].partsIndex;\r\n        if(partsIndex < 0) continue;if(visibleParts == i) {\r\n            model.setPartsOpacity(partsIndex, visibleOpacity);\r\n        }\r\n        else {\r\n            var opacity = model.getPartsOpacity(partsIndex);\r\n            var a1;\r\n            if(visibleOpacity < phi) {\r\n                a1 = visibleOpacity * (phi - 1) / phi + 1;\r\n            }\r\n            else {\r\n                a1 = (1 - visibleOpacity) * phi / (1 - phi);\r\n            }\r\n            var backOp = (1 - a1) * (1 - visibleOpacity);\r\n            if(backOp > maxBackOpacity) {\r\n                a1 = 1 - maxBackOpacity / (1 - visibleOpacity);\r\n            }\r\n            if(opacity > a1) {\r\n                opacity = a1;\r\n            }\r\n            model.setPartsOpacity(partsIndex, opacity);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//    L2DPose # copyOpacityOtherParts()\r\n//============================================================\r\nL2DPose.prototype.copyOpacityOtherParts = function(model/*ALive2DModel*/, partsGroup/*L2DPartsParam[]*/)\r\n{\r\n    for(var i_group = 0; i_group < partsGroup.length; i_group++) {\r\n        var partsParam = partsGroup[i_group]; //L2DPartsParam\r\n        if(partsParam.link == null) continue;\r\n        if(partsParam.partsIndex < 0) continue;\r\n        var opacity = model.getPartsOpacity(partsParam.partsIndex);\r\n        for(var i_link = 0; i_link < partsParam.link.length; i_link++) {\r\n            var linkParts = partsParam.link[i_link]; //L2DPartsParam\r\n            if(linkParts.partsIndex < 0) continue;\r\n            model.setPartsOpacity(linkParts.partsIndex, opacity);\r\n        }\r\n    }\r\n}\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DPartsParam        \r\n//============================================================\r\n//============================================================\r\nfunction L2DPartsParam(id/*String*/){\r\n    this.paramIndex      = -1;\r\n    this.partsIndex      = -1; \r\n    this.link            = null; // ArrayList<L2DPartsParam>\r\n    this.id = id;\r\n}\r\n\r\n//============================================================\r\n//    L2DPartsParam # initIndex()\r\n//============================================================\r\nL2DPartsParam.prototype.initIndex       = function(model/*ALive2DModel*/)\r\n{   \r\n    this.paramIndex = model.getParamIndex(\"VISIBLE:\" + this.id);\r\n    this.partsIndex = model.getPartsDataIndex(PartsDataID.getID(this.id));\r\n    model.setParamFloat(this.paramIndex, 1);\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DTargetPoint       \r\n//============================================================\r\n//============================================================\r\nfunction L2DTargetPoint()\r\n{\r\n    this.EPSILON         = 0.01; // 変化の最小値（この値以下は無視される）\r\n    this.faceTargetX     = 0;\r\n    this.faceTargetY     = 0;\r\n    this.faceX           = 0;\r\n    this.faceY           = 0;\r\n    this.faceVX          = 0;\r\n    this.faceVY          = 0;\r\n    this.lastTimeSec     = 0;\r\n}\r\n\r\n//============================================================\r\nL2DTargetPoint.FRAME_RATE  = 30;\r\n\r\n//============================================================\r\n//    L2DTargetPoint # set()\r\n//============================================================\r\nL2DTargetPoint.prototype.setPoint = function(x/*float*/, y/*float*/)\r\n{\r\n    this.faceTargetX = x;\r\n    this.faceTargetY = y;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # getX()\r\n//============================================================\r\nL2DTargetPoint.prototype.getX            = function()\r\n{\r\n    return this.faceX;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # getY()\r\n//============================================================\r\nL2DTargetPoint.prototype.getY            = function()\r\n{\r\n    return this.faceY;\r\n}\r\n\r\n//============================================================\r\n//    L2DTargetPoint # update()\r\n//============================================================\r\nL2DTargetPoint.prototype.update          = function()\r\n{\r\n   var TIME_TO_MAX_SPEED = 0.15;\r\n   var FACE_PARAM_MAX_V = 40.0 / 7.5;\r\n   var MAX_V = FACE_PARAM_MAX_V / L2DTargetPoint.FRAME_RATE;\r\n    if(this.lastTimeSec == 0) {\r\n        this.lastTimeSec = UtSystem.getUserTimeMSec();\r\n        return;\r\n    }\r\n    var curTimeSec = UtSystem.getUserTimeMSec();\r\n    var deltaTimeWeight = (curTimeSec - this.lastTimeSec) * L2DTargetPoint.FRAME_RATE / 1000.0;\r\n    this.lastTimeSec = curTimeSec;\r\n   var FRAME_TO_MAX_SPEED = TIME_TO_MAX_SPEED * L2DTargetPoint.FRAME_RATE;\r\n   var MAX_A = deltaTimeWeight * MAX_V / FRAME_TO_MAX_SPEED;\r\n    var dx = (this.faceTargetX - this.faceX);\r\n    var dy = (this.faceTargetY - this.faceY);\r\n    // if(dx == 0 && dy == 0) return;\r\n    if( Math.abs(dx) <= this.EPSILON && Math.abs(dy) <= this.EPSILON ) return;\r\n    var d = Math.sqrt(dx * dx + dy * dy);\r\n    var vx = MAX_V * dx / d;\r\n    var vy = MAX_V * dy / d;\r\n    var ax = vx - this.faceVX;\r\n    var ay = vy - this.faceVY;\r\n    var a =  Math.sqrt(ax * ax + ay * ay);\r\n    if(a < -MAX_A || a > MAX_A) {\r\n        ax *= MAX_A / a;\r\n        ay *= MAX_A / a;\r\n        a = MAX_A;\r\n    }\r\n    this.faceVX += ax;\r\n    this.faceVY += ay;\r\n    {\r\n        var max_v = 0.5 * ( Math.sqrt(MAX_A * MAX_A + 16 * MAX_A * d - 8 * MAX_A * d) - MAX_A);\r\n        var cur_v =  Math.sqrt(this.faceVX * this.faceVX + this.faceVY * this.faceVY);\r\n        if(cur_v > max_v) {\r\n            this.faceVX *= max_v / cur_v;\r\n            this.faceVY *= max_v / cur_v;\r\n        }\r\n    }\r\n    this.faceX += this.faceVX;\r\n    this.faceY += this.faceVY;\r\n}\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class L2DViewMatrix        extends     L2DMatrix44\r\n//============================================================\r\n//============================================================\r\nfunction L2DViewMatrix()\r\n{\r\n    L2DMatrix44.prototype.constructor.call(this);\r\n    this.screenLeft      = null;\r\n    this.screenRight     = null;\r\n    this.screenTop       = null;\r\n    this.screenBottom    = null;\r\n    this.maxLeft         = null;\r\n    this.maxRight        = null;\r\n    this.maxTop          = null;\r\n    this.maxBottom       = null;\r\n    this.max = Number.MAX_VALUE;\r\n    this.min = 0;\r\n}\r\n\r\nL2DViewMatrix.prototype = new L2DMatrix44(); //L2DViewMatrix extends L2DMatrix44\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxScale     = function()\r\n{\r\n    return this.max;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMinScale     = function()\r\n{\r\n    return this.min;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMaxScale     = function(v/*float*/)\r\n{\r\n    this.max = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMinScale     = function(v/*float*/)\r\n{\r\n    this.min = v;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # isMaxScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.isMaxScale      = function()\r\n{\r\n    return this.getScaleX() == this.max;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # isMinScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.isMinScale      = function()\r\n{\r\n    return this.getScaleX() == this.min;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # adjustTranslate()\r\n//============================================================\r\nL2DViewMatrix.prototype.adjustTranslate = function(shiftX/*float*/, shiftY/*float*/)\r\n{\r\n    if(this.tr[0] * this.maxLeft + (this.tr[12] + shiftX) > this.screenLeft) \r\n        shiftX = this.screenLeft - this.tr[0] * this.maxLeft - this.tr[12];\r\n    if(this.tr[0] * this.maxRight + (this.tr[12] + shiftX) < this.screenRight) \r\n        shiftX = this.screenRight - this.tr[0] * this.maxRight - this.tr[12];\r\n    if(this.tr[5] * this.maxTop + (this.tr[13] + shiftY) < this.screenTop) \r\n        shiftY = this.screenTop - this.tr[5] * this.maxTop - this.tr[13];\r\n    if(this.tr[5] * this.maxBottom + (this.tr[13] + shiftY) > this.screenBottom) \r\n        shiftY = this.screenBottom - this.tr[5] * this.maxBottom - this.tr[13];\r\n    \r\n    var tr1 = [1, 0, 0, 0, \r\n               0, 1, 0, 0,\r\n               0, 0, 1, 0, \r\n               shiftX, shiftY, 0, 1 ];\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # adjustScale()\r\n//============================================================\r\nL2DViewMatrix.prototype.adjustScale     = function(cx/*float*/, cy/*float*/, scale/*float*/)\r\n{\r\n    var targetScale = scale * this.tr[0];\r\n    if(targetScale < this.min) {\r\n        if(this.tr[0] > 0) scale = this.min / this.tr[0];\r\n    }\r\n    else if(targetScale > this.max) {\r\n        if(this.tr[0] > 0) scale = this.max / this.tr[0];\r\n    }\r\n    var tr1 = [1, 0, 0, 0, \r\n               0, 1, 0, 0, \r\n               0, 0, 1, 0, \r\n               cx, cy, 0, 1];\r\n    var tr2 = [scale, 0, 0, 0,\r\n               0, scale, 0, 0,\r\n               0, 0, 1, 0, \r\n               0, 0, 0, 1 ];\r\n    var tr3 = [1, 0, 0, 0, \r\n               0, 1, 0, 0, \r\n               0, 0, 1, 0, \r\n               -cx, -cy, 0, 1 ];\r\n    L2DMatrix44.mul(tr3, this.tr, this.tr);\r\n    L2DMatrix44.mul(tr2, this.tr, this.tr);\r\n    L2DMatrix44.mul(tr1, this.tr, this.tr);\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setScreenRect()\r\n//============================================================\r\nL2DViewMatrix.prototype.setScreenRect   = function(left/*float*/, right/*float*/, bottom/*float*/, top/*float*/)\r\n{\r\n    this.screenLeft = left;\r\n    this.screenRight = right;\r\n    this.screenTop = top;\r\n    this.screenBottom = bottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # setMaxScreenRect()\r\n//============================================================\r\nL2DViewMatrix.prototype.setMaxScreenRect = function(left/*float*/, right/*float*/, bottom/*float*/, top/*float*/)\r\n{\r\n    this.maxLeft = left;\r\n    this.maxRight = right;\r\n    this.maxTop = top;\r\n    this.maxBottom = bottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenLeft()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenLeft   = function()\r\n{\r\n    return this.screenLeft;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenRight()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenRight  = function()\r\n{\r\n    return this.screenRight;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenBottom()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenBottom = function()\r\n{\r\n    return this.screenBottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getScreenTop()\r\n//============================================================\r\nL2DViewMatrix.prototype.getScreenTop    = function()\r\n{\r\n    return this.screenTop;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxLeft()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxLeft      = function()\r\n{\r\n    return this.maxLeft;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxRight()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxRight     = function()\r\n{\r\n    return this.maxRight;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxBottom()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxBottom    = function()\r\n{\r\n    return this.maxBottom;\r\n}\r\n\r\n//============================================================\r\n//    L2DViewMatrix # getMaxTop()\r\n//============================================================\r\nL2DViewMatrix.prototype.getMaxTop       = function()\r\n{\r\n    return this.maxTop;\r\n}\r\n\r\n/**\r\n *\r\n *  You can modify and use this source freely\r\n *  only for the development of application related Live2D.\r\n *\r\n *  (c) Live2D Inc. All rights reserved.\r\n */\r\n\r\n//============================================================\r\n//============================================================\r\n//  class Live2DFramework      \r\n//============================================================\r\n//============================================================\r\nfunction Live2DFramework()\r\n{\r\n}\r\n\r\n//============================================================\r\nLive2DFramework.platformManager  = null;\r\n\r\n//============================================================\r\n//    static Live2DFramework.getPlatformManager()\r\n//============================================================\r\nLive2DFramework.getPlatformManager = function()\r\n{\r\n    return Live2DFramework.platformManager;\r\n}\r\n\r\n//============================================================\r\n//    static Live2DFramework.setPlatformManager()\r\n//============================================================\r\nLive2DFramework.setPlatformManager = function( platformManager /*IPlatformManager*/ )\r\n{\r\n    Live2DFramework.platformManager = platformManager;\r\n}",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/lib/_Live2DFramework.official.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "L2DBaseModel",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DBaseModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 13,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 227,
    "kind": "variable",
    "name": "texCounter",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~texCounter",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "getModelMatrix",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getModelMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "setAlpha",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setAlpha",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "getAlpha",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getAlpha",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "isInitialized",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~isInitialized",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "setInitialized",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setInitialized",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "isUpdating",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~isUpdating",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "setUpdating",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setUpdating",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "getLive2DModel",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getLive2DModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "setLipSync",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setLipSync",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "function",
    "name": "setLipSyncValue",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setLipSyncValue",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "setAccel",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setAccel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "z",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "setDrag",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setDrag",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "getMainMotionManager",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getMainMotionManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "getExpressionManager",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getExpressionManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "loadModelData",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~loadModelData",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 163,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "loadTexture",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~loadTexture",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "no",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "loadMotion",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~loadMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "loadExpression",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~loadExpression",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 246,
    "kind": "function",
    "name": "loadPose",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~loadPose",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 259,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "loadPhysics",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~loadPhysics",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "hitTestSimple",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~hitTestSimple",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 296,
    "undocument": true,
    "params": [
      {
        "name": "drawID",
        "types": [
          "*"
        ]
      },
      {
        "name": "testX",
        "types": [
          "*"
        ]
      },
      {
        "name": "testY",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "L2DExpressionMotion",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DExpressionMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 336,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "loadJson",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~loadJson",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 353,
    "undocument": true,
    "params": [
      {
        "name": "buf",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "updateParamExe",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~updateParamExe",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 413,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "timeMSec",
        "types": [
          "*"
        ]
      },
      {
        "name": "weight",
        "types": [
          "*"
        ]
      },
      {
        "name": "motionQueueEnt",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "L2DExpressionParam",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DExpressionParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 435,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "L2DEyeBlink",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DEyeBlink",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 455,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "calcNextBlink",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~calcNextBlink",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 473,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "setInterval",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setInterval",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 483,
    "undocument": true,
    "params": [
      {
        "name": "blinkIntervalMsec",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "setEyeMotion",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setEyeMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 491,
    "undocument": true,
    "params": [
      {
        "name": "closingMotionMsec",
        "types": [
          "*"
        ]
      },
      {
        "name": "closedMotionMsec",
        "types": [
          "*"
        ]
      },
      {
        "name": "openingMotionMsec",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 501,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "EYE_STATE",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~EYE_STATE",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 553,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "L2DMatrix44",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DMatrix44",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 573,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "mul",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~mul",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 582,
    "undocument": true,
    "params": [
      {
        "name": "a",
        "types": [
          "*"
        ]
      },
      {
        "name": "b",
        "types": [
          "*"
        ]
      },
      {
        "name": "dst",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "identity",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~identity",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 602,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "function",
    "name": "getArray",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getArray",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 611,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "getCopyMatrix",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getCopyMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 619,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "function",
    "name": "setMatrix",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 627,
    "undocument": true,
    "params": [
      {
        "name": "tr",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "function",
    "name": "getScaleX",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getScaleX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 636,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 266,
    "kind": "function",
    "name": "getScaleY",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getScaleY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 644,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 267,
    "kind": "function",
    "name": "transformX",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~transformX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 652,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "function",
    "name": "transformY",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~transformY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 660,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "invertTransformX",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~invertTransformX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 668,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 270,
    "kind": "function",
    "name": "invertTransformY",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~invertTransformY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 676,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "multTranslate",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~multTranslate",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 684,
    "undocument": true,
    "params": [
      {
        "name": "shiftX",
        "types": [
          "*"
        ]
      },
      {
        "name": "shiftY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "translate",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~translate",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 693,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "translateX",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~translateX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 702,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 274,
    "kind": "function",
    "name": "translateY",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~translateY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 710,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "function",
    "name": "multScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~multScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 718,
    "undocument": true,
    "params": [
      {
        "name": "scaleX",
        "types": [
          "*"
        ]
      },
      {
        "name": "scaleY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 276,
    "kind": "function",
    "name": "scale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~scale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 727,
    "undocument": true,
    "params": [
      {
        "name": "scaleX",
        "types": [
          "*"
        ]
      },
      {
        "name": "scaleY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "L2DModelMatrix",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DModelMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 745,
    "params": [
      {
        "name": "w",
        "types": [
          "*"
        ]
      },
      {
        "name": "h",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "setPosition",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setPosition",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 757,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "setCenterPosition",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setCenterPosition",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 765,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "top",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~top",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 775,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "bottom",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~bottom",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 783,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "left",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~left",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 792,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "right",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~right",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 800,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "centerX",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~centerX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 809,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "centerY",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~centerY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 818,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "setX",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 827,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "setY",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 835,
    "undocument": true,
    "params": [
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "setHeight",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setHeight",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 843,
    "undocument": true,
    "params": [
      {
        "name": "h",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "setWidth",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setWidth",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 853,
    "undocument": true,
    "params": [
      {
        "name": "w",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "L2DMotionManager",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DMotionManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 873,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "getCurrentPriority",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getCurrentPriority",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 888,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "getReservePriority",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getReservePriority",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 896,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 293,
    "kind": "function",
    "name": "reserveMotion",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~reserveMotion",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 904,
    "undocument": true,
    "params": [
      {
        "name": "priority",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 294,
    "kind": "function",
    "name": "setReservePriority",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setReservePriority",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 921,
    "undocument": true,
    "params": [
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 929,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "startMotionPrio",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~startMotionPrio",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 943,
    "undocument": true,
    "params": [
      {
        "name": "motion",
        "types": [
          "*"
        ]
      },
      {
        "name": "priority",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "L2DPhysics",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DPhysics",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 965,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "load",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~load",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 974,
    "undocument": true,
    "params": [
      {
        "name": "buf",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1040,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 300,
    "kind": "function",
    "name": "L2DPose",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DPose",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 1061,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "load",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~load",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1072,
    "undocument": true,
    "params": [
      {
        "name": "buf",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 302,
    "kind": "function",
    "name": "updateParam",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~updateParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1106,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "initParam",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~initParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1128,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "normalizePartsOpacityGroup",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~normalizePartsOpacityGroup",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1152,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "partsGroup",
        "types": [
          "*"
        ]
      },
      {
        "name": "deltaTimeSec",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "copyOpacityOtherParts",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~copyOpacityOtherParts",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1207,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      },
      {
        "name": "partsGroup",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 306,
    "kind": "function",
    "name": "L2DPartsParam",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DPartsParam",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1227,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 307,
    "kind": "function",
    "name": "initIndex",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~initIndex",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1237,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 308,
    "kind": "function",
    "name": "L2DTargetPoint",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DTargetPoint",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 1256,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 309,
    "kind": "function",
    "name": "setPoint",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setPoint",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1274,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "function",
    "name": "getX",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getX",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1283,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "getY",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getY",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1291,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 312,
    "kind": "function",
    "name": "update",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~update",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1299,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "L2DViewMatrix",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~L2DViewMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 1354,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "function",
    "name": "getMaxScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getMaxScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1374,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 315,
    "kind": "function",
    "name": "getMinScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getMinScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1382,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 316,
    "kind": "function",
    "name": "setMaxScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setMaxScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1390,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 317,
    "kind": "function",
    "name": "setMinScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setMinScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1398,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 318,
    "kind": "function",
    "name": "isMaxScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~isMaxScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1406,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "isMinScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~isMinScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1414,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 320,
    "kind": "function",
    "name": "adjustTranslate",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~adjustTranslate",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1422,
    "undocument": true,
    "params": [
      {
        "name": "shiftX",
        "types": [
          "*"
        ]
      },
      {
        "name": "shiftY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 321,
    "kind": "function",
    "name": "adjustScale",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~adjustScale",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1443,
    "undocument": true,
    "params": [
      {
        "name": "cx",
        "types": [
          "*"
        ]
      },
      {
        "name": "cy",
        "types": [
          "*"
        ]
      },
      {
        "name": "scale",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 322,
    "kind": "function",
    "name": "setScreenRect",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setScreenRect",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1472,
    "undocument": true,
    "params": [
      {
        "name": "left",
        "types": [
          "*"
        ]
      },
      {
        "name": "right",
        "types": [
          "*"
        ]
      },
      {
        "name": "bottom",
        "types": [
          "*"
        ]
      },
      {
        "name": "top",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "setMaxScreenRect",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setMaxScreenRect",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1483,
    "undocument": true,
    "params": [
      {
        "name": "left",
        "types": [
          "*"
        ]
      },
      {
        "name": "right",
        "types": [
          "*"
        ]
      },
      {
        "name": "bottom",
        "types": [
          "*"
        ]
      },
      {
        "name": "top",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "getScreenLeft",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getScreenLeft",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1494,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "getScreenRight",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getScreenRight",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1502,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "getScreenBottom",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getScreenBottom",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1510,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "getScreenTop",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getScreenTop",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1518,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "getMaxLeft",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getMaxLeft",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1526,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 329,
    "kind": "function",
    "name": "getMaxRight",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getMaxRight",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1534,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "function",
    "name": "getMaxBottom",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getMaxBottom",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1542,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "function",
    "name": "getMaxTop",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getMaxTop",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1550,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "function",
    "name": "Live2DFramework",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~Live2DFramework",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": "\n You can modify and use this source freely\n only for the development of application related Live2D.\n\n (c) Live2D Inc. All rights reserved.",
    "lineNumber": 1568,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 333,
    "kind": "function",
    "name": "getPlatformManager",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~getPlatformManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1578,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 334,
    "kind": "function",
    "name": "setPlatformManager",
    "memberof": "src/lib/_Live2DFramework.official.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/_Live2DFramework.official.js~setPlatformManager",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/lib/_Live2DFramework.official.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1586,
    "undocument": true,
    "params": [
      {
        "name": "platformManager",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 335,
    "kind": "file",
    "name": "src/PlatformManager.js",
    "content": "\n/**\n *\n *  You can modify and use this source freely\n *  only for the development of application related Live2D.\n *\n *  (c) Live2D Inc. All rights reserved.\n */\n\n// Modified by xiazeyu.\n\n/**\n* @desc A library that provide basic IO and json function\n*/\n\nimport { currWebGL } from './elementMgr';\nimport { Live2DModelWebGL } from \"./lib/live2d.core\";\n\n\n//============================================================\n//============================================================\n//  class PlatformManager     extend IPlatformManager\n//============================================================\n//============================================================\n\n/**\n* @name PlatformManager\n* @desc Define the variable type of PlatformManager\n* @param null\n* @returns {Structure} PlatformManager\n*/\nexport function PlatformManager()\n{\n\n}\n\n\n//============================================================\n//    PlatformManager # loadBytes()\n//============================================================\n\n/**\n* @name loadBytes\n* @desc load bytes from the path and callback\n* @param {String} path, {Function} callback\n* @returns callback {raw} context\n* @memberOf PlatformManager\n*/\n\nPlatformManager.prototype.loadBytes       = function(path/*String*/, callback)\n{\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", path, true);\n    request.responseType = \"arraybuffer\";\n    request.onload = function(){\n        switch(request.status){\n        case 200:\n            callback(request.response);\n            break;\n        default:\n            console.error(\"Failed to load (\" + request.status + \") : \" + path);\n            break;\n        }\n    }\n    request.send(null);\n    // return request;\n}\n\n\n//============================================================\n//    PlatformManager # loadString()\n//============================================================\n\n/**\n* @name loadString\n* @desc load bytes from the path and put it into buffer\n* @param {String} path\n* @returns buffer {raw} context\n* @memberOf PlatformManager\n*/\nPlatformManager.prototype.loadString      = function(path/*String*/)\n{\n\n    this.loadBytes(path, function(buf) {\n        return buf;\n    });\n\n}\n\n\n//============================================================\n//    PlatformManager # loadLive2DModel()\n//============================================================\n\n/**\n* @name loadLive2DModel\n* @desc load Live2DModel from the path and put it into buffer\n* @param {String} path, {function} callback\n* @returns callback loaded model\n* @memberOf PlatformManager\n*/\nPlatformManager.prototype.loadLive2DModel = function(path/*String*/, callback)\n{\n    var model = null;\n\n    // load moc\n    this.loadBytes(path, function(buf){\n        model = Live2DModelWebGL.loadModel(buf);\n        callback(model);\n    });\n\n}\n\n\n//============================================================\n//    PlatformManager # loadTexture()\n//============================================================\n\n/**\n* @name loadTexture\n* @desc load Live2DModel's Texture and callback\n* @param {Live2DModelWebGL}model, {int}no, {string}path, {function}callback\n* @returns callback\n* @memberOf PlatformManager\n*/\nPlatformManager.prototype.loadTexture     = function(model/*ALive2DModel*/, no/*int*/, path/*String*/, callback)\n{\n    // load textures\n    var loadedImage = new Image();\n    // Thanks to @mashirozx & @fghrsh\n    // Issues:\n    // @https://github.com/journey-ad/live2d_src/issues/1\n    // @https://github.com/journey-ad/live2d_src/issues/3\n    loadedImage.crossOrigin = 'Anonymous';\n    loadedImage.src = path;\n    loadedImage.onload = onload;\n    loadedImage.onerror = onerror;\n\n    // var thisRef = this;\n    loadedImage.onload = function() {\n        // create texture\n        var gl = currWebGL;\n        var texture = gl.createTexture();\n        if (!texture){ console.error(\"Failed to generate gl texture name.\"); return -1; }\n\n        if(!model.isPremultipliedAlpha()){\n            // 乗算済アルファテクスチャ以外の場合\n            // emmmm, maybe do something for textures with alpha layer.\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n        }\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA,\n                      gl.UNSIGNED_BYTE, loadedImage);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n\n\n\n        model.setTexture(no, texture);\n\n        // テクスチャオブジェクトを解放\n        // Release the texture object to prevent buffer overruns.\n        texture = null;\n\n        if (typeof callback == \"function\") callback();\n    };\n\n    loadedImage.onerror = function() {\n        console.error(\"Failed to load image : \" + path);\n    }\n}\n\n\n//============================================================\n//    PlatformManager # parseFromBytes(buf)\n\n//============================================================\n\n/**\n* @name jsonParseFromBytes\n* @desc parse json file into arrays\n* @param {raw} buf\n* @returns {Array}jsonObj\n* @memberOf PlatformManager\n*/\nPlatformManager.prototype.jsonParseFromBytes = function(buf){\n\n    var jsonStr;\n    var bomCode = new Uint8Array(buf, 0, 3);\n    if (bomCode[0] == 239 && bomCode[1] == 187 && bomCode[2] == 191) {\n        jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf, 3));\n    } else {\n        jsonStr = String.fromCharCode.apply(null, new Uint8Array(buf));\n    }\n\n    var jsonObj = JSON.parse(jsonStr);\n\n    return jsonObj;\n};\n\n\n\n//============================================================\n//    PlatformManager # log()\n//============================================================\n\n/**\n* @name log\n* @desc output log in console\n* @param {string} txt\n* @returns null\n* @memberOf PlatformManager\n*/\nPlatformManager.prototype.log             = function(txt/*String*/)\n{\n    console.log(txt);\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/PlatformManager.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 336,
    "kind": "function",
    "name": "PlatformManager",
    "memberof": "src/PlatformManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlatformManager.js~PlatformManager",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/PlatformManager.js",
    "importStyle": "{PlatformManager}",
    "description": "Define the variable type of PlatformManager",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Structure} PlatformManager"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": "PlatformManager"
    }
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "loadBytes",
    "memberof": "src/PlatformManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlatformManager.js~loadBytes",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/PlatformManager.js",
    "importStyle": null,
    "description": "load bytes from the path and callback",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "callback {raw} context"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "PlatformManager"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path,",
        "description": "{Function} callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "callback {raw} context"
    },
    "ignore": true
  },
  {
    "__docId__": 338,
    "kind": "function",
    "name": "loadString",
    "memberof": "src/PlatformManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlatformManager.js~loadString",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/PlatformManager.js",
    "importStyle": null,
    "description": "load bytes from the path and put it into buffer",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "buffer {raw} context"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "PlatformManager"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "buffer {raw} context"
    },
    "ignore": true
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "loadLive2DModel",
    "memberof": "src/PlatformManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlatformManager.js~loadLive2DModel",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/PlatformManager.js",
    "importStyle": null,
    "description": "load Live2DModel from the path and put it into buffer",
    "lineNumber": 102,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "callback loaded model"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "PlatformManager"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path,",
        "description": "{function} callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "callback loaded model"
    },
    "ignore": true
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "loadTexture",
    "memberof": "src/PlatformManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlatformManager.js~loadTexture",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/PlatformManager.js",
    "importStyle": null,
    "description": "load Live2DModel's Texture and callback",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "callback"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "PlatformManager"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{Live2DModelWebGL}model,",
        "description": "{int}no, {string}path, {function}callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "callback"
    },
    "ignore": true
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "jsonParseFromBytes",
    "memberof": "src/PlatformManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlatformManager.js~jsonParseFromBytes",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/PlatformManager.js",
    "importStyle": null,
    "description": "parse json file into arrays",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}jsonObj"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "PlatformManager"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "raw"
        ],
        "spread": false,
        "optional": false,
        "name": "buf",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "{Array}jsonObj"
    },
    "ignore": true
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "log",
    "memberof": "src/PlatformManager.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PlatformManager.js~log",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/PlatformManager.js",
    "importStyle": null,
    "description": "output log in console",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "null"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "PlatformManager"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "txt",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "null"
    },
    "ignore": true
  },
  {
    "__docId__": 343,
    "kind": "file",
    "name": "src/utils/MatrixStack.js",
    "content": "/**\n *\n *  You can modify and use this source freely\n *  only for the development of application related Live2D.\n *\n *  (c) Live2D Inc. All rights reserved.\n */\n\n/**\n * EYHN 修改\n *\n * Copyright © 2016 - 2017 EYHN\n */\n\n// Modified by xiazeyu.\n\n/**\n* @desc A matrix stack releated to draw the model\n*/\n\nexport function MatrixStack() {}\n\nMatrixStack.matrixStack = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nMatrixStack.depth = 0;\nMatrixStack.currentMatrix = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nMatrixStack.tmp = new Array(16);\n\n/**\n* @name reset\n* @desc reset the stack\n* @param null\n* @returns null\n* @memberOf MatrixStack\n*/\nMatrixStack.reset = function(){\n  this.depth = 0;\n}\n\n/**\n* @name loadIdentity\n* @desc reset values in the stack to whether it can be divisible by 5\n* @param null\n* @returns null\n* @memberOf MatrixStack\n*/\nMatrixStack.loadIdentity = function(){\n  var thisRef = this;\n  for (var i = 0; i < 16; i++){\n    thisRef.currentMatrix[i] = (i % 5 == 0) ? 1 : 0;\n  }\n}\n\n/**\n* @name push\n* @desc push a new element into the stack\n* @param null\n* @returns null\n* @memberOf MatrixStack\n*/\nMatrixStack.push = function(){\n  var thisRef = this;\n  // var offset = thisRef.depth * 16;\n  var nextOffset = (thisRef.depth + 1) * 16;\n\n  if (thisRef.matrixStack.length < nextOffset + 16){\n    thisRef.matrixStack.length = nextOffset + 16;\n  }\n\n  for (var i = 0; i < 16; i++){\n    thisRef.matrixStack[nextOffset + i] = thisRef.currentMatrix[i];\n  }\n\n  thisRef.depth++;\n}\n\n/**\n* @name pop\n* @desc pop an element from the stack\n* @param null\n* @returns null\n* @memberOf MatrixStack\n*/\nMatrixStack.pop = function(){\n  var thisRef = this;\n  thisRef.depth--;\n  if (thisRef.depth < 0){ // stack is underflow?????\n    myError(\"Invalid matrix stack.\");\n    thisRef.depth = 0;\n  }\n\n  var offset = thisRef.depth * 16;\n  for (var i = 0; i < 16; i++){\n    thisRef.currentMatrix[i] = thisRef.matrixStack[offset + i];\n  }\n}\n\n/**\n* @name getMatrix\n* @desc return the current matrix stack\n* @param null\n* @returns {Array} current matrix stack\n* @memberOf MatrixStack\n*/\nMatrixStack.getMatrix = function(){\n  return this.currentMatrix;\n}\n\n/**\n* @name multMatrix\n* @desc matrix multiplication, save to the currentMatrix\n* @param null\n* @returns null\n* @memberOf MatrixStack\n*/\nMatrixStack.multMatrix = function(matNew)\n{\n  var thisRef = this;\n  var i, j, k;\n\n  for (i = 0; i < 16; i++){\n    thisRef.tmp[i] = 0;\n  }\n\n  for (i = 0; i < 4; i++){\n    for (j = 0; j < 4; j++){\n      for (k = 0; k < 4; k++){\n        thisRef.tmp[i + j * 4] += thisRef.currentMatrix[i + k * 4] * matNew[k + j * 4];\n      }\n    }\n  }\n  for (i = 0; i < 16; i++){\n    thisRef.currentMatrix[i] = thisRef.tmp[i];\n  }\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/utils/MatrixStack.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 344,
    "kind": "function",
    "name": "MatrixStack",
    "memberof": "src/utils/MatrixStack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/MatrixStack.js~MatrixStack",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/utils/MatrixStack.js",
    "importStyle": "{MatrixStack}",
    "description": "A matrix stack releated to draw the model",
    "lineNumber": 21,
    "params": [],
    "return": null
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "reset",
    "memberof": "src/utils/MatrixStack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/MatrixStack.js~reset",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/MatrixStack.js",
    "importStyle": null,
    "description": "reset the stack",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "null"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "MatrixStack"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "null"
    },
    "ignore": true
  },
  {
    "__docId__": 346,
    "kind": "function",
    "name": "loadIdentity",
    "memberof": "src/utils/MatrixStack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/MatrixStack.js~loadIdentity",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/MatrixStack.js",
    "importStyle": null,
    "description": "reset values in the stack to whether it can be divisible by 5",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "null"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "MatrixStack"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "null"
    },
    "ignore": true
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "push",
    "memberof": "src/utils/MatrixStack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/MatrixStack.js~push",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/MatrixStack.js",
    "importStyle": null,
    "description": "push a new element into the stack",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "null"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "MatrixStack"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "null"
    },
    "ignore": true
  },
  {
    "__docId__": 348,
    "kind": "function",
    "name": "pop",
    "memberof": "src/utils/MatrixStack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/MatrixStack.js~pop",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/MatrixStack.js",
    "importStyle": null,
    "description": "pop an element from the stack",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "null"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "MatrixStack"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "null"
    },
    "ignore": true
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "getMatrix",
    "memberof": "src/utils/MatrixStack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/MatrixStack.js~getMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/MatrixStack.js",
    "importStyle": null,
    "description": "return the current matrix stack",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} current matrix stack"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "MatrixStack"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "current matrix stack"
    },
    "ignore": true
  },
  {
    "__docId__": 350,
    "kind": "function",
    "name": "multMatrix",
    "memberof": "src/utils/MatrixStack.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/MatrixStack.js~multMatrix",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/MatrixStack.js",
    "importStyle": null,
    "description": "matrix multiplication, save to the currentMatrix",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "null"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "MatrixStack"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "null"
    },
    "ignore": true
  },
  {
    "__docId__": 351,
    "kind": "file",
    "name": "src/utils/ModelSettingJson.js",
    "content": "// Modified by xiazeyu.\n\n/**\n* @desc To get the model settings from given json file\n*/\n\nimport { Live2DFramework } from \"../lib/Live2DFramework\"\n\n/**\n* @name ModelSettingJson\n* @desc return the struct of ModelSettingJson\n* @param null\n* @returns {Structure} ModelSettingJson\n*/\nexport function ModelSettingJson()\n{   // Define the index in the json file.\n    this.NAME = \"name\";\n    this.ID = \"id\";\n    this.MODEL = \"model\";\n    this.TEXTURES = \"textures\";\n    this.HIT_AREAS = \"hit_areas\";\n    this.PHYSICS = \"physics\";\n    this.POSE = \"pose\";\n    this.EXPRESSIONS = \"expressions\";\n    this.MOTION_GROUPS = \"motions\";\n    this.SOUND = \"sound\";\n    this.FADE_IN = \"fade_in\";\n    this.FADE_OUT = \"fade_out\";\n    this.LAYOUT = \"layout\";\n    this.INIT_PARAM = \"init_param\";\n    this.INIT_PARTS_VISIBLE = \"init_parts_visible\";\n    this.VALUE = \"val\";\n    this.FILE = \"file\";\n    this.json = {};\n}\n\n/**\n* @name loadModelSetting\n* @desc load model settings from json\n* @param {string} jsonPath, {function} callback\n* @returns null\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.loadModelSetting = function(path, callback)\n{\n    var thisRef = this;\n    var pm = Live2DFramework.getPlatformManager();\n    pm.loadBytes(path, function(buf) {\n        var str = String.fromCharCode.apply(null,new Uint8Array(buf));\n        thisRef.json = JSON.parse(str);\n        callback();\n    });\n};\n\n/**\n* @name getTextureFile\n* @desc get texture file from json\n* @param {int} order number of texture\n* @returns {string} file path\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getTextureFile = function(n)\n{\n    if (this.json[this.TEXTURES] == null || this.json[this.TEXTURES][n] == null)\n        return null;\n\n    return this.json[this.TEXTURES][n];\n}\n\n/**\n* @name getModelFile\n* @desc get model file from json\n* @param null\n* @returns {string} file path\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getModelFile = function()\n{\n    return this.json[this.MODEL];\n};\n\n/**\n* @name getTextureNum\n* @desc get the amount of textures from json\n* @param null\n* @returns {int} amout\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getTextureNum = function()\n{\n    if (this.json[this.TEXTURES] == null) return 0;\n\n    return this.json[this.TEXTURES].length;\n}\n\n/**\n* @name getHitAreaNum\n* @desc get the amount of hit area from json\n* @param null\n* @returns {int} amout\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getHitAreaNum = function()\n{\n    if (this.json[this.HIT_AREAS] == null)\n        return 0;\n\n    return this.json[this.HIT_AREAS].length;\n}\n\n/**\n* @name getHitAreaID\n* @desc get the hit area ID of given index from json\n* @param {int} index\n* @returns {int} ID\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getHitAreaID = function(n)\n{\n    if (this.json[this.HIT_AREAS] == null ||\n        this.json[this.HIT_AREAS][n] == null)\n        return null;\n\n    return this.json[this.HIT_AREAS][n][this.ID];\n}\n\n/**\n* @name getHitAreaName\n* @desc get the hit area name of given index from json\n* @param {int} index\n* @returns {string} name\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getHitAreaName = function(n)\n{\n    if (this.json[this.HIT_AREAS] == null ||\n        this.json[this.HIT_AREAS][n] == null)\n        return null;\n\n    return this.json[this.HIT_AREAS][n][this.NAME];\n}\n\n/**\n* @name getPhysicsFile\n* @desc get physics file from json\n* @param null\n* @returns {string} file path\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getPhysicsFile = function()\n{\n    return this.json[this.PHYSICS];\n}\n\n/**\n* @name getPoseFile\n* @desc get pose file from json\n* @param null\n* @returns {string} file path\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getPoseFile = function()\n{\n    return this.json[this.POSE];\n}\n\n/**\n* @name getExpressionNum\n* @desc get the amount of expressions from json\n* @param null\n* @returns {int} amout\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getExpressionNum = function()\n{\n    return (this.json[this.EXPRESSIONS] == null) ? 0 : this.json[this.EXPRESSIONS].length;\n}\n\n/**\n* @name getExpressionFile\n* @desc get expression file from json\n* @param null\n* @returns {string} file path\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getExpressionFile = function(n)\n{\n    if (this.json[this.EXPRESSIONS] == null)\n        return null;\n    return this.json[this.EXPRESSIONS][n][this.FILE];\n}\n\n/**\n* @name getExpressionName\n* @desc get the hit expression name of given index from json\n* @param {int} index\n* @returns {string} name\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getExpressionName = function(n)\n{\n    if (this.json[this.EXPRESSIONS] == null)\n        return null;\n    return this.json[this.EXPRESSIONS][n][this.NAME];\n}\n\n/**\n* @name getLayout\n* @desc get the layout from json\n* @param null\n* @returns {string} layout\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getLayout = function()\n{\n    return this.json[this.LAYOUT];\n}\n\n/**\n* @name getInitParamNum\n* @desc get the amount of init parameter from json\n* @param null\n* @returns {int} amount\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getInitParamNum = function()\n{\n    return (this.json[this.INIT_PARAM] == null) ? 0 : this.json[this.INIT_PARAM].length;\n}\n\n/**\n* @name getMotionNum\n* @desc get the amount of motions from json\n* @param null\n* @returns {int} amout\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getMotionNum = function(name)\n{\n    if (this.json[this.MOTION_GROUPS] == null ||\n        this.json[this.MOTION_GROUPS][name] == null)\n        return 0;\n\n    return this.json[this.MOTION_GROUPS][name].length;\n}\n\n/**\n* @name getMotionFile\n* @desc get motion file from json\n* @param null\n* @returns {string} file path\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getMotionFile = function(name, n)\n{\n    if (this.json[this.MOTION_GROUPS] == null ||\n        this.json[this.MOTION_GROUPS][name] == null ||\n        this.json[this.MOTION_GROUPS][name][n] == null)\n        return null;\n\n    return this.json[this.MOTION_GROUPS][name][n][this.FILE];\n}\n\n/**\n* @name getMotionSound\n* @desc get motion's sound file from json\n* @param null\n* @returns {string} file path\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getMotionSound = function(name, n)\n{\n    if (this.json[this.MOTION_GROUPS] == null ||\n        this.json[this.MOTION_GROUPS][name] == null ||\n        this.json[this.MOTION_GROUPS][name][n] == null ||\n        this.json[this.MOTION_GROUPS][name][n][this.SOUND] == null)\n        return null;\n\n    return this.json[this.MOTION_GROUPS][name][n][this.SOUND];\n}\n\n/**\n* @name getMotionFadeIn\n* @desc get the motion's fade in setting from json\n* @param {string} name, {int} index\n* @returns {int} time (1000 if not found)\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getMotionFadeIn = function(name, n)\n{\n    if (this.json[this.MOTION_GROUPS] == null ||\n        this.json[this.MOTION_GROUPS][name] == null ||\n        this.json[this.MOTION_GROUPS][name][n] == null ||\n        this.json[this.MOTION_GROUPS][name][n][this.FADE_IN] == null)\n        return 1000;\n\n    return this.json[this.MOTION_GROUPS][name][n][this.FADE_IN];\n}\n\n/**\n* @name getMotionFadeOut\n* @desc get the motion's fade out setting from json\n* @param {string} name, {int} index\n* @returns {int} time (1000 if not found)\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getMotionFadeOut = function(name, n)\n{\n    if (this.json[this.MOTION_GROUPS] == null ||\n        this.json[this.MOTION_GROUPS][name] == null ||\n        this.json[this.MOTION_GROUPS][name][n] == null ||\n        this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT] == null)\n        return 1000;\n\n    return this.json[this.MOTION_GROUPS][name][n][this.FADE_OUT];\n}\n\n/**\n* @name getInitParamID\n* @desc get the visible ID of init parameter from json\n* @param {(int)} index\n* @returns {int} ID\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getInitParamID = function(n)\n{\n    if (this.json[this.INIT_PARAM] == null ||\n        this.json[this.INIT_PARAM][n] == null)\n        return null;\n\n    return this.json[this.INIT_PARAM][n][this.ID];\n}\n\n/**\n* @name getInitParamValue\n* @desc get the visible value of init parameter from json\n* @param {(int)} index\n* @returns {int} value\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getInitParamValue = function(n)\n{\n    if (this.json[this.INIT_PARAM] == null || this.json[this.INIT_PARAM][n] == null)\n        return NaN;\n\n    return this.json[this.INIT_PARAM][n][this.VALUE];\n}\n\n/**\n* @name getInitPartsVisibleNum\n* @desc get the amount of init parts visible from json\n* @param null\n* @returns {int} amout\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getInitPartsVisibleNum = function()\n{\n    return (this.json[this.INIT_PARTS_VISIBLE] == null) ? 0 : this.json[this.INIT_PARTS_VISIBLE].length;\n}\n\n/**\n* @name getInitPartsVisibleID\n* @desc get the visible ID of init parts from json\n* @param {(int)} index\n* @returns {int} ID\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getInitPartsVisibleID = function(n)\n{\n    if (this.json[this.INIT_PARTS_VISIBLE] == null || this.json[this.INIT_PARTS_VISIBLE][n] == null)\n        return null;\n    return this.json[this.INIT_PARTS_VISIBLE][n][this.ID];\n}\n\n/**\n* @name getInitPartsVisibleValue\n* @desc get the visible value of init parts from json\n* @param {(int)} index\n* @returns {int} value\n* @memberOf ModelSettingJson\n*/\nModelSettingJson.prototype.getInitPartsVisibleValue = function(n)\n{\n    if (this.json[this.INIT_PARTS_VISIBLE] == null || this.json[this.INIT_PARTS_VISIBLE][n] == null)\n        return NaN;\n\n    return this.json[this.INIT_PARTS_VISIBLE][n][this.VALUE];\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/utils/ModelSettingJson.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 352,
    "kind": "function",
    "name": "ModelSettingJson",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~ModelSettingJson",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": "{ModelSettingJson}",
    "description": "return the struct of ModelSettingJson",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Structure} ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": "ModelSettingJson"
    }
  },
  {
    "__docId__": 353,
    "kind": "function",
    "name": "loadModelSetting",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~loadModelSetting",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "load model settings from json",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "null"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "jsonPath,",
        "description": "{function} callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "null"
    },
    "ignore": true
  },
  {
    "__docId__": 354,
    "kind": "function",
    "name": "getTextureFile",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getTextureFile",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get texture file from json",
    "lineNumber": 62,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file path"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "order",
        "description": "number of texture"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file path"
    },
    "ignore": true
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "getModelFile",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getModelFile",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get model file from json",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file path"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file path"
    },
    "ignore": true
  },
  {
    "__docId__": 356,
    "kind": "function",
    "name": "getTextureNum",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getTextureNum",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the amount of textures from json",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} amout"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "amout"
    },
    "ignore": true
  },
  {
    "__docId__": 357,
    "kind": "function",
    "name": "getHitAreaNum",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getHitAreaNum",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the amount of hit area from json",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} amout"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "amout"
    },
    "ignore": true
  },
  {
    "__docId__": 358,
    "kind": "function",
    "name": "getHitAreaID",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getHitAreaID",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the hit area ID of given index from json",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} ID"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "ID"
    },
    "ignore": true
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "getHitAreaName",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getHitAreaName",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the hit area name of given index from json",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} name"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "name"
    },
    "ignore": true
  },
  {
    "__docId__": 360,
    "kind": "function",
    "name": "getPhysicsFile",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getPhysicsFile",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get physics file from json",
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file path"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file path"
    },
    "ignore": true
  },
  {
    "__docId__": 361,
    "kind": "function",
    "name": "getPoseFile",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getPoseFile",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get pose file from json",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file path"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file path"
    },
    "ignore": true
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "getExpressionNum",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getExpressionNum",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the amount of expressions from json",
    "lineNumber": 174,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} amout"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "amout"
    },
    "ignore": true
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "getExpressionFile",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getExpressionFile",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get expression file from json",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file path"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file path"
    },
    "ignore": true
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "getExpressionName",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getExpressionName",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the hit expression name of given index from json",
    "lineNumber": 200,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} name"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "name"
    },
    "ignore": true
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "getLayout",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getLayout",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the layout from json",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} layout"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "layout"
    },
    "ignore": true
  },
  {
    "__docId__": 366,
    "kind": "function",
    "name": "getInitParamNum",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getInitParamNum",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the amount of init parameter from json",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} amount"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "amount"
    },
    "ignore": true
  },
  {
    "__docId__": 367,
    "kind": "function",
    "name": "getMotionNum",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getMotionNum",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the amount of motions from json",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} amout"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "amout"
    },
    "ignore": true
  },
  {
    "__docId__": 368,
    "kind": "function",
    "name": "getMotionFile",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getMotionFile",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get motion file from json",
    "lineNumber": 254,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file path"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file path"
    },
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "getMotionSound",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getMotionSound",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get motion's sound file from json",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} file path"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "file path"
    },
    "ignore": true
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "getMotionFadeIn",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getMotionFadeIn",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the motion's fade in setting from json",
    "lineNumber": 289,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} time (1000 if not found)"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name,",
        "description": "{int} index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "time (1000 if not found)"
    },
    "ignore": true
  },
  {
    "__docId__": 371,
    "kind": "function",
    "name": "getMotionFadeOut",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getMotionFadeOut",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the motion's fade out setting from json",
    "lineNumber": 307,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} time (1000 if not found)"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name,",
        "description": "{int} index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "time (1000 if not found)"
    },
    "ignore": true
  },
  {
    "__docId__": 372,
    "kind": "function",
    "name": "getInitParamID",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getInitParamID",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the visible ID of init parameter from json",
    "lineNumber": 325,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} ID"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "ID"
    },
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "function",
    "name": "getInitParamValue",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getInitParamValue",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the visible value of init parameter from json",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} value"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "value"
    },
    "ignore": true
  },
  {
    "__docId__": 374,
    "kind": "function",
    "name": "getInitPartsVisibleNum",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getInitPartsVisibleNum",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the amount of init parts visible from json",
    "lineNumber": 356,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} amout"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "null",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "amout"
    },
    "ignore": true
  },
  {
    "__docId__": 375,
    "kind": "function",
    "name": "getInitPartsVisibleID",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getInitPartsVisibleID",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the visible ID of init parts from json",
    "lineNumber": 368,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} ID"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "ID"
    },
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "function",
    "name": "getInitPartsVisibleValue",
    "memberof": "src/utils/ModelSettingJson.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/ModelSettingJson.js~getInitPartsVisibleValue",
    "access": "public",
    "export": false,
    "importPath": "live2d-widget/src/utils/ModelSettingJson.js",
    "importStyle": null,
    "description": "get the visible value of init parts from json",
    "lineNumber": 382,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{int} value"
      },
      {
        "tagName": "@memberOf",
        "tagValue": "ModelSettingJson"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int"
      ],
      "spread": false,
      "description": "value"
    },
    "ignore": true
  },
  {
    "__docId__": 377,
    "kind": "file",
    "name": "src/wpPublicPath.js",
    "content": "/**\n * @description Automatic locate the publicPath and set it up for webpack.\n */\n\n\n'use strict';\n\n/**\n * Get current script path\n * @return {String} The path of current script\n * @example\n * get 'file:///C:/git/live2d-widget/dev/bundle.js' or 'https://www.host.com/test/js/bundle.js'\n */\n\nfunction getCurrentPath(){\n\n  try{\n\n    // FF, Chrome, Modern browsers\n    // use their API to get the path of current script\n\n    // a.b();\n    // console.log('wpStage1');\n\n    return document.currentScript.src;\n\n    if(DOC.currentScript){ // FF 4+\n      return DOC.currentScript.src;\n    }\n\n  }catch(e){\n\n    // document.currentScript doesn't supports\n\n    // console.log('wpStage2');\n\n    // Method 1\n    // https://github.com/mozilla/pdf.js/blob/e081a708c36cb2aacff7889048863723fcf23671/src/shared/compatibility.js#L97\n    // IE, Chrome < 29\n\n    let scripts = document.getElementsByTagName('script');\n    return scripts[scripts.length - 1].src;\n\n/*\n    // Method 2\n    // parse the error stack trace maually\n    // https://github.com/workhorsy/uncompress.js/blob/master/js/uncompress.js#L25\n\n    let stack = e.stack;\n    let line = null;\n\n    // Chrome and IE\n    if (stack.indexOf('@') !== -1) {\n      line = stack.split('@')[1].split('\\n')[0];\n    // Firefox\n    } else {\n      line = stack.split('(')[1].split(')')[0];\n    }\n    line = line.substring(0, line.lastIndexOf('/')) + '/';\n    return line;\n*/\n/*\n    // Method 3\n    // https://www.cnblogs.com/rubylouvre/archive/2013/01/23/2872618.html\n\n    let stack = e.stack;\n    if(!stack && window.opera){\n      // Opera 9没有e.stack,但有e.Backtrace,但不能直接取得,需要对e对象转字符串进行抽取\n      stack = (String(e).match(/of linked script \\S+/g) || []).join(' ');\n    }\n    if(stack){\n      // e.stack最后一行在所有支持的浏览器大致如下:\n      // chrome23:\n      // @ http://113.93.50.63/data.js:4:1\n      // firefox17:\n      // @http://113.93.50.63/query.js:4\n      // opera12:\n      // @http://113.93.50.63/data.js:4\n      // IE10:\n      // @ Global code (http://113.93.50.63/data.js:4:1)\n      stack = stack.split(/[@ ]/g).pop(); // 取得最后一行,最后一个空格或@之后的部分\n      stack = stack[0] == '(' ? stack.slice(1,-1) : stack;\n      return stack.replace(/(:\\d+)?:\\d+$/i, ''); // 去掉行号与或许存在的出错字符起始位置\n    }\n    let nodes = head.getElementsByTagName('script'); // 只在head标签中寻找\n    for(var i = 0, node; node = nodes[i++];){\n      if(node.readyState === 'interactive'){\n        return node.className = node.src;\n      }\n    }\n*/\n  }\n\n}\n\n// expose the path to the global,\n// and wp will finish the following work\n__webpack_public_path__ = getCurrentPath().replace(/[^/\\\\\\\\]+$/, '');\nif (process.env.NODE_ENV === 'development'){\n  console.log(`Live2Dwidget: publicPath: ${__webpack_public_path__}`);\n}\n\nexport {\n  getCurrentPath,\n}\n",
    "static": true,
    "longname": "D:/git/live2d-widget.js/src/wpPublicPath.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 378,
    "kind": "function",
    "name": "getCurrentPath",
    "memberof": "src/wpPublicPath.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/wpPublicPath.js~getCurrentPath",
    "access": "public",
    "export": true,
    "importPath": "live2d-widget/src/wpPublicPath.js",
    "importStyle": "{getCurrentPath}",
    "description": "Get current script path",
    "examples": [
      "get 'file:///C:/git/live2d-widget/dev/bundle.js' or 'https://www.host.com/test/js/bundle.js'"
    ],
    "lineNumber": 15,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "The path of current script"
    },
    "params": []
  },
  {
    "kind": "index",
    "content": "[![npm][npm]][npm-url]\n[![deps][deps]][deps-url]\n[![devdeps][devdeps]][devdeps-url]\n\n[![downloads][downloads]][downloads-url]\n[![downloads-month][downloads-month]][downloads-month-url]\n\n[![GitHub stars][GitHub stars]][GitHub stars-url]\n[![GitHub forks][GitHub forks]][GitHub forks-url]\n[![GitHub issues][GitHub issues]][GitHub issues-url]\n\n[![Commitizen friendly][Commitizen friendly]][Commitizen friendly-url]\n[![PRs Welcome][PRs Welcome]][PRs Welcome-url]\n[![license][license]][license-url]\n\n\n# live2d-widget.js\n\nAdd the Sseexxyyy live2d to your webpages! Seperated from [hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d).\n\nDemo: [Still working, but you can have a look~](https://xiazeyu.github.io/live2d-widget.js/dev.html)\n\nDocs(including APIs): [Click me!](https://xiazeyu.github.io/live2d-widget.js/)\n\nOnline generator: [TBD.](javascript:void(0);)\n\n\n## Useage\n\n### Hexo\n\nPlease visit [hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d) for the hexo plugin.\n\n### Webpages\n\n#### File on your server\n\nDownload the [latest release](https://github.com/xiazeyu/live2d-widget.js/releases),\n\nand then copy and extract the `lib` folder to your website.\n\nUse [online generator](javascript:void(0);) **(recommended)** to generate codes.\n\n<details><summary>However, if you want to do it manually, follow the instruction below:</summary><br>\n\nimport the js:\n\n```html\n\n<script src = \"( your script path here )\"></script>\n\n```\n\nThen call the function along with your config.\n\n```js\nL2Dwidget.init({\n  'config1': 'value1',\n  'config2': 'value2',\n});\n```\n\n</details>\n\n### Bookmark (any pages)\n\nTBD.\n\nhttps://www.cnblogs.com/pcyy/p/5655542.html\n\n\n## Settings\n\nSee the [document](https://xiazeyu.github.io/live2d-widget.js/docs/class/src/index.js~L2Dwidget.html#instance-method-init).\n\n<details><summary>Current supported models:</summary><br>\n\n  - `chitose`\n  - `Epsilon2.1`\n  - `Gantzert_Felixander`\n  - `haru01`\n  - `haru02`\n  - `haruto`\n  - `hibiki`\n  - `hijiki`\n  - `izumi`\n  - `koharu`\n  - `miku`\n  - `nico`\n  - `ni-j`\n  - `nipsilon`\n  - `nito`\n  - `shizuku`\n  - `tororo`\n  - `tsumiki`\n  - `Unitychan`\n  - `wanko`\n  - `z16`\n\n</details>\n\n## Custom model\n\n1. Create a `live2d_models` folder at your blog's root directory.\n\n2. Create a folder by the name of your model.\n\n3. Copy your model to this folder.\n\n**Attention! The path of the model's json must be  `/live2d_models/{name}/{name}.model.json`**\n\n<details><summary>An Example:</summary><br>\n\nYour model is named `mymiku`.\n\nThen, create a folder at  `/` (Which should exists `_config.yml` 、`sources` 、 `themes` ) named `mymiku`.\n\nCopy your model to `/live2d_models/mymiku/`.\n\nUp to now, there should be `mymiku.model.json` in the directory of `/live2d_models/mymiku/`.\n\n</details>\n\n<br>~The problem was once releated to [(#22)](https://github.com/EYHN/hexo-helper-live2d/issues/22).~\n\n<br>\n\nEnjoy!:beer:\n\n> This is my first hexo plugin, star :star: and watch :eyeglasses:, pull request is also welcomed.\n\nGithub: [https://github.com/EYHN/hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d)\n\nissues: [https://github.com/EYHN/hexo-helper-live2d/issues](https://github.com/EYHN/hexo-helper-live2d/issues)\n\n\n## Contribute\n\n**Please pay enough attention to this document if you want to commit your changes or submit issues.**\n\n[CONTRIBUTING](./CONTRIBUTING.md)\n\n## Releated projects\n\n- [Cubism SDK WebGL 2.1](http://sites.cybernoids.jp/cubism-sdk2_e/webgl2-1)\n\n- [live2d-widget.js](https://github.com/xiazeyu/live2d-widget.js)\n\n- [hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d)\n\n- [pixi-live2d](https://github.com/avgjs/pixi-live2d)\n\n- [CubismJsComponents](https://github.com/Live2D/CubismJsComponents)\n\n\n\n## About me\n\n[![Author][author]][author-url]\n\n[![Author QQ][author-qq]][author-qq-url]\n\n[![Author Email][author-email]][author-email-url]\n\n\n[![Collaborator 0][collaborator0]][collaborator0-url]\n\n[![Collaborator 0 QQ][collaborator0-qq]][collaborator0-qq-url]\n\n[![Collaborator 0 Email][collaborator0-email]][collaborator0-email-url]\n\n\n## Imported\n\n[![current-device][current-device]][current-device-url]\n\n## Special Thanks\n\n- @mashirozx \n- @fghrsh\n- @journey-ad\n- @gwzz\n\n<br>\n\nOpen sourced under the GPL v2.0 license.\n\n[npm]: https://badge.fury.io/js/live2d-widget.svg?label=live2d-widget\n[npm-url]: https://www.npmjs.com/package/live2d-widget\n\n[deps]: https://img.shields.io/david/xiazeyu/live2d-widget.js.svg\n[deps-url]: javascript:void(0);\n\n[devdeps]:  https://img.shields.io/david/dev/xiazeyu/live2d-widget.js.svg\n[devdeps-url]: javascript:void(0);\n\n[license]: https://img.shields.io/github/license/xiazeyu/live2d-widget.js.svg\n[license-url]: https://github.com/xiazeyu/live2d-widget.js/blob/master/LICENSE\n\n[PRs Welcome]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[PRs Welcome-url]: http://makeapullrequest.com\n\n[downloads]:  https://img.shields.io/npm/dt/live2d-widget.svg\n[downloads-url]: https://www.npmjs.com/package/live2d-widget\n\n[downloads-month]: https://img.shields.io/npm/dm/live2d-widget.svg\n[downloads-month-url]: https://www.npmjs.com/package/live2d-widget\n\n[Commitizen friendly]: https://img.shields.io/badge/commitizen-friendly-brightgreen.svg\n[Commitizen friendly-url]: http://commitizen.github.io/cz-cli/\n\n[GitHub stars]: https://img.shields.io/github/stars/xiazeyu/live2d-widget.js.svg\n[GitHub stars-url]: https://github.com/xiazeyu/live2d-widget.js/stargazers\n\n[GitHub forks]: https://img.shields.io/github/forks/xiazeyu/live2d-widget.js.svg\n[GitHub forks-url]: https://github.com/xiazeyu/live2d-widget.js/network\n\n[GitHub issues]: https://img.shields.io/github/issues/xiazeyu/live2d-widget.js.svg\n[GitHub issues-url]: https://github.com/xiazeyu/live2d-widget.js/issues\n\n[author]: https://img.shields.io/badge/author-cneyhn-green.svg\n[author-url]: https://delusion.coding.me/\n\n[author-qq]: https://img.shields.io/badge/QQ-1106996185-blue.svg\n[author-qq-url]: tencent://message/?uin=1106996185&Site=Senlon.Net&Menu=yes\n\n[author-email]: https://img.shields.io/badge/Emali%20me-cneyhn@gmail.com-green.svg\n[author-email-url]: mailto:cneyhn@gmail.com\n\n[collaborator0]: https://img.shields.io/badge/author-xiazeyu-green.svg\n[collaborator0-url]: https://xiazeyu.coding.me/\n\n[collaborator0-qq]: https://img.shields.io/badge/QQ-2320732807-blue.svg\n[collaborator0-qq-url]: tencent://message/?uin=2320732807&Site=Senlon.Net&Menu=yes\n\n[collaborator0-email]: https://img.shields.io/badge/Emali%20me-xiazeyu_2011@126.com-green.svg\n[collaborator0-email-url]: mailto:xiazeyu_2011@126.com\n\n[current-device]: https://img.shields.io/npm/v/current-device.svg?label=current-device\n[current-device-url]: https://github.com/matthewhudson/current-device\n",
    "longname": "D:\\git\\live2d-widget.js\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"live2d-widget\",\n  \"version\": \"3.0.1\",\n  \"description\": \"Add the Sseexxyyy live2d to webpages.\",\n  \"scripts\": {\n    \"inst:dev\": \"npm install -g commitizen&&npm install\",\n    \"build:dev\": \"webpack --progress --colors\",\n    \"build:prod\": \"webpack --env prod --progress --colors\",\n    \"build:doc\": \"./node_modules/.bin/esdoc\",\n    \"commit\": \"git pull&&git-cz\",\n    \"_changelog\": \"./node_modules/.bin/conventional-changelog -i docsrc/CHANGELOG.md -r 0 -s -u\",\n    \"changelog\": \"git pull&&npm run _changelog&&git add docsrc/CHANGELOG.md\",\n    \"v:major\": \"npm version major\",\n    \"v:pmajor\": \"npm version premajor\",\n    \"v:minor\": \"npm version minor\",\n    \"v:pminor\": \"npm version preminor\",\n    \"v:patch\": \"npm version patch\",\n    \"v:ppatch\": \"npm version prepatch\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"ghpages\": \"push-gh-pages\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/xiazeyu/live2d-widget.js.git\"\n  },\n  \"author\": \"xiazeyu <xiazeyu_2011@126.com>\",\n  \"contributors\": [\n    \"xiazeyu <xiazeyu_2011@126.com>\",\n    \"EYHN <cneyhn@gmail.com>\"\n  ],\n  \"maintainers\": [\n    \"xiazeyu <xiazeyu_2011@126.com>\",\n    \"EYHN <cneyhn@gmail.com>\"\n  ],\n  \"license\": \"GPL-2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/xiazeyu/live2d-widget.js/issues\"\n  },\n  \"homepage\": \"https://github.com/xiazeyu/live2d-widget.js#readme\",\n  \"devDependencies\": {\n    \"babel-core\": \"^6.26.0\",\n    \"babel-loader\": \"^7.1.2\",\n    \"babel-plugin-lodash\": \"^3.3.2\",\n    \"babel-plugin-syntax-dynamic-import\": \"^6.18.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"commitizen\": \"^2.9.6\",\n    \"core-js\": \"^2.5.3\",\n    \"current-device\": \"^0.7.2\",\n    \"cz-conventional-changelog\": \"^2.1.0\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"html-loader\": \"^0.5.4\",\n    \"lodash\": \"^4.17.4\",\n    \"lodash-webpack-plugin\": \"^0.11.4\",\n    \"path\": \"^0.12.7\",\n    \"uglifyjs-webpack-plugin\": \"^1.1.6\",\n    \"webpack\": \"^3.10.0\",\n    \"webpack-manifest-plugin\": \"^1.3.2\",\n    \"webpack-visualizer-plugin\": \"^0.1.11\"\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"./node_modules/cz-conventional-changelog\"\n    }\n  }\n}\n",
    "longname": "D:\\git\\live2d-widget.js\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "[![npm][npm]][npm-url]\n[![deps][deps]][deps-url]\n[![devdeps][devdeps]][devdeps-url]\n\n[![downloads][downloads]][downloads-url]\n[![downloads-month][downloads-month]][downloads-month-url]\n\n[![GitHub stars][GitHub stars]][GitHub stars-url]\n[![GitHub forks][GitHub forks]][GitHub forks-url]\n[![GitHub issues][GitHub issues]][GitHub issues-url]\n\n[![Commitizen friendly][Commitizen friendly]][Commitizen friendly-url]\n[![PRs Welcome][PRs Welcome]][PRs Welcome-url]\n[![license][license]][license-url]\n\n\n# live2d-widget.js\n\nAdd the Sseexxyyy live2d to your webpages! Seperated from [hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d).\n\nDemo: [Still working, but you can have a look~](https://xiazeyu.github.io/live2d-widget.js/dev.html)\n\nDocs(including APIs): [Click me!](https://xiazeyu.github.io/live2d-widget.js/)\n\nOnline generator: [TBD.](javascript:void(0);)\n\n\n## Useage\n\n### Hexo\n\nPlease visit [hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d) for the hexo plugin.\n\n### Webpages\n\n#### File on your server\n\nDownload the [latest release](https://github.com/xiazeyu/live2d-widget.js/releases),\n\nand then copy and extract the `lib` folder to your website.\n\nUse [online generator](javascript:void(0);) **(recommended)** to generate codes.\n\n<details><summary>However, if you want to do it manually, follow the instruction below:</summary><br>\n\nimport the js:\n\n```html\n\n<script src = \"( your script path here )\"></script>\n\n```\n\nThen call the function along with your config.\n\n```js\nL2Dwidget.init({\n  'config1': 'value1',\n  'config2': 'value2',\n});\n```\n\n</details>\n\n### Bookmark (any pages)\n\nTBD.\n\nhttps://www.cnblogs.com/pcyy/p/5655542.html\n\n\n## Settings\n\nSee the [document](https://xiazeyu.github.io/live2d-widget.js/docs/class/src/index.js~L2Dwidget.html#instance-method-init).\n\n<details><summary>Current supported models:</summary><br>\n\n  - `chitose`\n  - `Epsilon2.1`\n  - `Gantzert_Felixander`\n  - `haru01`\n  - `haru02`\n  - `haruto`\n  - `hibiki`\n  - `hijiki`\n  - `izumi`\n  - `koharu`\n  - `miku`\n  - `nico`\n  - `ni-j`\n  - `nipsilon`\n  - `nito`\n  - `shizuku`\n  - `tororo`\n  - `tsumiki`\n  - `Unitychan`\n  - `wanko`\n  - `z16`\n\n</details>\n\n## Custom model\n\n1. Create a `live2d_models` folder at your blog's root directory.\n\n2. Create a folder by the name of your model.\n\n3. Copy your model to this folder.\n\n**Attention! The path of the model's json must be  `/live2d_models/{name}/{name}.model.json`**\n\n<details><summary>An Example:</summary><br>\n\nYour model is named `mymiku`.\n\nThen, create a folder at  `/` (Which should exists `_config.yml` 、`sources` 、 `themes` ) named `mymiku`.\n\nCopy your model to `/live2d_models/mymiku/`.\n\nUp to now, there should be `mymiku.model.json` in the directory of `/live2d_models/mymiku/`.\n\n</details>\n\n<br>~The problem was once releated to [(#22)](https://github.com/EYHN/hexo-helper-live2d/issues/22).~\n\n<br>\n\nEnjoy!:beer:\n\n> This is my first hexo plugin, star :star: and watch :eyeglasses:, pull request is also welcomed.\n\nGithub: [https://github.com/EYHN/hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d)\n\nissues: [https://github.com/EYHN/hexo-helper-live2d/issues](https://github.com/EYHN/hexo-helper-live2d/issues)\n\n\n## Contribute\n\n**Please pay enough attention to this document if you want to commit your changes or submit issues.**\n\n[CONTRIBUTING](./CONTRIBUTING.md)\n\n## Releated projects\n\n- [Cubism SDK WebGL 2.1](http://sites.cybernoids.jp/cubism-sdk2_e/webgl2-1)\n\n- [live2d-widget.js](https://github.com/xiazeyu/live2d-widget.js)\n\n- [hexo-helper-live2d](https://github.com/EYHN/hexo-helper-live2d)\n\n- [pixi-live2d](https://github.com/avgjs/pixi-live2d)\n\n- [CubismJsComponents](https://github.com/Live2D/CubismJsComponents)\n\n\n\n## About me\n\n[![Author][author]][author-url]\n\n[![Author QQ][author-qq]][author-qq-url]\n\n[![Author Email][author-email]][author-email-url]\n\n\n[![Collaborator 0][collaborator0]][collaborator0-url]\n\n[![Collaborator 0 QQ][collaborator0-qq]][collaborator0-qq-url]\n\n[![Collaborator 0 Email][collaborator0-email]][collaborator0-email-url]\n\n\n## Imported\n\n[![current-device][current-device]][current-device-url]\n\n## Special Thanks\n\n- @mashirozx \n- @fghrsh\n- @journey-ad\n- @gwzz\n\n<br>\n\nOpen sourced under the GPL v2.0 license.\n\n[npm]: https://badge.fury.io/js/live2d-widget.svg?label=live2d-widget\n[npm-url]: https://www.npmjs.com/package/live2d-widget\n\n[deps]: https://img.shields.io/david/xiazeyu/live2d-widget.js.svg\n[deps-url]: javascript:void(0);\n\n[devdeps]:  https://img.shields.io/david/dev/xiazeyu/live2d-widget.js.svg\n[devdeps-url]: javascript:void(0);\n\n[license]: https://img.shields.io/github/license/xiazeyu/live2d-widget.js.svg\n[license-url]: https://github.com/xiazeyu/live2d-widget.js/blob/master/LICENSE\n\n[PRs Welcome]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[PRs Welcome-url]: http://makeapullrequest.com\n\n[downloads]:  https://img.shields.io/npm/dt/live2d-widget.svg\n[downloads-url]: https://www.npmjs.com/package/live2d-widget\n\n[downloads-month]: https://img.shields.io/npm/dm/live2d-widget.svg\n[downloads-month-url]: https://www.npmjs.com/package/live2d-widget\n\n[Commitizen friendly]: https://img.shields.io/badge/commitizen-friendly-brightgreen.svg\n[Commitizen friendly-url]: http://commitizen.github.io/cz-cli/\n\n[GitHub stars]: https://img.shields.io/github/stars/xiazeyu/live2d-widget.js.svg\n[GitHub stars-url]: https://github.com/xiazeyu/live2d-widget.js/stargazers\n\n[GitHub forks]: https://img.shields.io/github/forks/xiazeyu/live2d-widget.js.svg\n[GitHub forks-url]: https://github.com/xiazeyu/live2d-widget.js/network\n\n[GitHub issues]: https://img.shields.io/github/issues/xiazeyu/live2d-widget.js.svg\n[GitHub issues-url]: https://github.com/xiazeyu/live2d-widget.js/issues\n\n[author]: https://img.shields.io/badge/author-cneyhn-green.svg\n[author-url]: https://delusion.coding.me/\n\n[author-qq]: https://img.shields.io/badge/QQ-1106996185-blue.svg\n[author-qq-url]: tencent://message/?uin=1106996185&Site=Senlon.Net&Menu=yes\n\n[author-email]: https://img.shields.io/badge/Emali%20me-cneyhn@gmail.com-green.svg\n[author-email-url]: mailto:cneyhn@gmail.com\n\n[collaborator0]: https://img.shields.io/badge/author-xiazeyu-green.svg\n[collaborator0-url]: https://xiazeyu.coding.me/\n\n[collaborator0-qq]: https://img.shields.io/badge/QQ-2320732807-blue.svg\n[collaborator0-qq-url]: tencent://message/?uin=2320732807&Site=Senlon.Net&Menu=yes\n\n[collaborator0-email]: https://img.shields.io/badge/Emali%20me-xiazeyu_2011@126.com-green.svg\n[collaborator0-email-url]: mailto:xiazeyu_2011@126.com\n\n[current-device]: https://img.shields.io/npm/v/current-device.svg?label=current-device\n[current-device-url]: https://github.com/matthewhudson/current-device\n",
    "longname": "D:\\git\\live2d-widget.js\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "D:\\git\\live2d-widget.js\\docsrc\\manual\\asset",
    "name": "./docsrc/manual/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\git\\live2d-widget.js\\docsrc\\CHANGELOG.md",
    "name": "./docsrc/CHANGELOG.md",
    "content": "<a name=\"3.0.1\"></a>\n## 3.0.1 (2018-01-19)\n\n* feat: new build ([f70a36c](https://github.com/xiazeyu/live2d-widget.js/commit/f70a36c))\n* docs: relink js to unpkg CDN ([0bd9cdf](https://github.com/xiazeyu/live2d-widget.js/commit/0bd9cdf))\n* docs: update CHANGELOG ([c840cfa](https://github.com/xiazeyu/live2d-widget.js/commit/c840cfa))\n* docs(method of execute): finish the doc of launch it (use var) ([1b43dc0](https://github.com/xiazeyu/live2d-widget.js/commit/1b43dc0))\n* fix: achieve frameshot, recover event system ([aed9c26](https://github.com/xiazeyu/live2d-widget.js/commit/aed9c26))\n* style: change L2Dwidget into Class ([59909df](https://github.com/xiazeyu/live2d-widget.js/commit/59909df))\n* build(add script to bump version better): ([a2d04e8](https://github.com/xiazeyu/live2d-widget.js/commit/a2d04e8))\n* build(fix changelog script path problem): ([67c56ee](https://github.com/xiazeyu/live2d-widget.js/commit/67c56ee))\n* chore(update dependency settings): ([7796aac](https://github.com/xiazeyu/live2d-widget.js/commit/7796aac))\n* build: remove ghpages from npm publish ([7401ffe](https://github.com/xiazeyu/live2d-widget.js/commit/7401ffe))\n\n\n\n<a name=\"3.0.0\"></a>\n# 3.0.0 (2018-01-13)\n\n* feat: 3.0 API now is fixed. reday to publish ([32a7b6d](https://github.com/xiazeyu/live2d-widget.js/commit/32a7b6d))\n* feat: API chanes again ! get current frame ([cc76f02](https://github.com/xiazeyu/live2d-widget.js/commit/cc76f02))\n* feat: config ([62118e1](https://github.com/xiazeyu/live2d-widget.js/commit/62118e1))\n* feat: config validater ([cc587b2](https://github.com/xiazeyu/live2d-widget.js/commit/cc587b2))\n* feat: delete config validate function ([0234132](https://github.com/xiazeyu/live2d-widget.js/commit/0234132))\n* feat: elementMgr codes, modify API ([e6433e3](https://github.com/xiazeyu/live2d-widget.js/commit/e6433e3))\n* feat: elementMgr functionally done ([aa09c5d](https://github.com/xiazeyu/live2d-widget.js/commit/aa09c5d))\n* feat: FINALLY USEABLE (basically) ([7c121a2](https://github.com/xiazeyu/live2d-widget.js/commit/7c121a2))\n* feat: finish config validater ([67a0558](https://github.com/xiazeyu/live2d-widget.js/commit/67a0558))\n* feat: fix webpack PublicPath prob. ([093ee10](https://github.com/xiazeyu/live2d-widget.js/commit/093ee10))\n* feat: http(s) protocol supports for model's json's textures ([d9b854a](https://github.com/xiazeyu/live2d-widget.js/commit/d9b854a))\n* feat: import lodash ([be5531d](https://github.com/xiazeyu/live2d-widget.js/commit/be5531d))\n* feat: marked unfinished files, rebuild file structure, config works ([62555a9](https://github.com/xiazeyu/live2d-widget.js/commit/62555a9))\n* feat: modified live2d core js ([d3c7ab5](https://github.com/xiazeyu/live2d-widget.js/commit/d3c7ab5))\n* feat: TEST Create DOM use js ([1a8db01](https://github.com/xiazeyu/live2d-widget.js/commit/1a8db01))\n* feat: update source code ([28d350b](https://github.com/xiazeyu/live2d-widget.js/commit/28d350b))\n* feat: use ~ to mark version ([4f0e865](https://github.com/xiazeyu/live2d-widget.js/commit/4f0e865))\n* feat(API): typo ([b342953](https://github.com/xiazeyu/live2d-widget.js/commit/b342953))\n* feat(config): new config ([5f13a2b](https://github.com/xiazeyu/live2d-widget.js/commit/5f13a2b))\n* feat(Webpack): lazy load and chunks ([ccbe0d0](https://github.com/xiazeyu/live2d-widget.js/commit/ccbe0d0))\n* feat(Webpack): updated webpack config ([260cbad](https://github.com/xiazeyu/live2d-widget.js/commit/260cbad))\n* chore: add comments ([24b43e3](https://github.com/xiazeyu/live2d-widget.js/commit/24b43e3))\n* chore: new build version ([c698c90](https://github.com/xiazeyu/live2d-widget.js/commit/c698c90))\n* chore: new build version ([7216003](https://github.com/xiazeyu/live2d-widget.js/commit/7216003))\n* docs: add ESDoc ([9a67891](https://github.com/xiazeyu/live2d-widget.js/commit/9a67891))\n* docs: added demo and doc ([5d4cddc](https://github.com/xiazeyu/live2d-widget.js/commit/5d4cddc))\n* docs: fix bugs, update ([14d0730](https://github.com/xiazeyu/live2d-widget.js/commit/14d0730))\n* docs: new doc build logic ([a7f1d54](https://github.com/xiazeyu/live2d-widget.js/commit/a7f1d54))\n* docs: Update API varible types ([f3ab76b](https://github.com/xiazeyu/live2d-widget.js/commit/f3ab76b))\n* docs: update CHANGELOG ([abf0618](https://github.com/xiazeyu/live2d-widget.js/commit/abf0618))\n* docs: update CHANGELOG ([89765f5](https://github.com/xiazeyu/live2d-widget.js/commit/89765f5))\n* docs: update docs ([0ec0dec](https://github.com/xiazeyu/live2d-widget.js/commit/0ec0dec))\n* docs: update docs ([3955611](https://github.com/xiazeyu/live2d-widget.js/commit/3955611))\n* docs(LICENSE): combine LICENSE ([6be306f](https://github.com/xiazeyu/live2d-widget.js/commit/6be306f))\n* feat: ([8c668b1](https://github.com/xiazeyu/live2d-widget.js/commit/8c668b1))\n* Initial commit ([cc61b39](https://github.com/xiazeyu/live2d-widget.js/commit/cc61b39))\n* The Real Initial Commit ([23ba71c](https://github.com/xiazeyu/live2d-widget.js/commit/23ba71c))\n* build: new doc build method ([6854707](https://github.com/xiazeyu/live2d-widget.js/commit/6854707))\n* fix: old dependencies ([7a2f272](https://github.com/xiazeyu/live2d-widget.js/commit/7a2f272))\n* fix(webpack): fix webpack publicPath issue ([a8a630e](https://github.com/xiazeyu/live2d-widget.js/commit/a8a630e))\n* style: fix indent ([cb6f7d9](https://github.com/xiazeyu/live2d-widget.js/commit/cb6f7d9))\n\n\n### BREAKING CHANGE\n\n* change userConfig.display.AA to userConfig.display.antialias\n* change userConfig.display.widght to userConfig.display.width\n* Please use L2DWidget.init() and L2DWidget.captureFrame() instead of initL2DWidget()\n\n\n",
    "static": true,
    "access": "public"
  }
]